[
    {
        "id": "9c854ea3.68416",
        "type": "tab",
        "label": "CubeDisplayApps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8475ab9.3d26058",
        "type": "tab",
        "label": "Web App Socket Router",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9d06e02130edba28",
        "type": "tab",
        "label": "MyApps",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a858ad3a.95706",
        "type": "tab",
        "label": "Web Launchers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e17f7487.2a78e8",
        "type": "tab",
        "label": "blinky-lite-dataLogger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90f83725.6dae08",
        "type": "tab",
        "label": "blinky-lite-Utility Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dc20c6e0.0feb98",
        "type": "tab",
        "label": "blinky-lite-scalarTray",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b94899c9.b16088",
        "type": "tab",
        "label": "blinky-lite-vectorTray",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 30,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "e13648d6.d698c8",
        "type": "subflow",
        "name": "Log Setting",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "347f36fe.94ed7a"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "df70f6f.9e4ed08",
        "type": "subflow",
        "name": "Scalar Tray Menu",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ddfc02aa.3af39"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 80,
                "wires": [
                    {
                        "id": "e98d4d33.bcca2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "2dba0745.a98d98",
        "type": "subflow",
        "name": "Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "3deefd6d.1dde92"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 60,
                "wires": [
                    {
                        "id": "f3358361.19029",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1120,
                "y": 120,
                "wires": [
                    {
                        "id": "f728a8f0.ad8b68",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "2d027d69.1fdeb2",
        "type": "subflow",
        "name": "App Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3966deae.453262"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 60,
                "wires": [
                    {
                        "id": "3966deae.453262",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "495f0879.c831c8",
        "type": "subflow",
        "name": "Core Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "8e411315.2b09f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 40,
                "wires": [
                    {
                        "id": "8e411315.2b09f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "fee416c.fb205e8",
        "type": "subflow",
        "name": "Action Permission Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "54f691be.e6b47"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 40,
                "wires": [
                    {
                        "id": "92d40c38.2026a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 760,
                "y": 120,
                "wires": [
                    {
                        "id": "92d40c38.2026a",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "c57c2f9e65e6cb70",
        "type": "subflow",
        "name": "App Config",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 80,
                "wires": [
                    {
                        "id": "6f95e75a.75d6d8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 80,
                "wires": [
                    {
                        "id": "aec66f39cecf2770",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "7744eedb71df7703",
        "type": "subflow",
        "name": "Core Config",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "b7076b42.4012e8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 80,
                "wires": [
                    {
                        "id": "e2784516c510904b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "3fec913b325ae6ff",
        "type": "subflow",
        "name": "HTTPS Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "30495fc00067bd92"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 300,
                "y": 40,
                "wires": [
                    {
                        "id": "30495fc00067bd92",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "30a1fe01775ecb93",
        "type": "subflow",
        "name": "CubeDisplayApp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "1ea7cffebed6852b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1880,
                "y": 400,
                "wires": [
                    {
                        "id": "7f6f0675815e73bb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "74b74739cc6e49af",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "51435faf6b40f465"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "51435faf6b40f465",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#487895",
        "icon": "font-awesome/fa-cubes"
    },
    {
        "id": "0ec09de0b6aaf66b",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "5f51ed9b0871e1a7",
            "981a189bd66aa323",
            "b02a9d73642aac97",
            "5cf746775e09c51a",
            "2e1a7303f8b9636a",
            "9b8003862051043d",
            "c4305416805ce150",
            "e928c1d6d05dd339",
            "6e5fe8f4665ee2fd"
        ],
        "x": 34,
        "y": 39,
        "w": 1312,
        "h": 142
    },
    {
        "id": "222f7527456f431b",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "fb1cbda08964d2c4",
            "1928603ca153df67",
            "cea2875827e63d5b",
            "f63b0fcec3bd6b3c",
            "0ce5c07cfdb5f54e",
            "38c6c636e8332a69",
            "1b18ffef25aa4c35",
            "3c5ab7eda412bc5c",
            "c4e92c75751127a2"
        ],
        "x": 34,
        "y": 219,
        "w": 1312,
        "h": 142
    },
    {
        "id": "8513d2368ac7161f",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "c998ed82e3c5192d",
            "aba265fffa92daf6",
            "e42d975ba6da1072",
            "cccd608b3a365086",
            "bd6e0506563a8d43",
            "0eee0874c7a22b2b",
            "505e5bfda43f39a4",
            "4e4453e4f560ffd7",
            "b690e92951ea57f3"
        ],
        "x": 34,
        "y": 399,
        "w": 1312,
        "h": 142
    },
    {
        "id": "e02813d59f160a5c",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "f282dbb78dca19fd",
            "56391ae4bbe459c3",
            "5e8768d08571a1ad",
            "6d6068c8dfd2a20c",
            "d490148fcda8b2dd",
            "5a8fcfe3f536d31f",
            "d662030dd2e155d4",
            "9800371cca717e58",
            "4f5138b1c21ad771"
        ],
        "x": 34,
        "y": 579,
        "w": 1312,
        "h": 142
    },
    {
        "id": "e0c14b4f190836c9",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "6aadddd9cdc56a54",
            "c6a1dd8dfbfbf55d",
            "e76fb9a94d1ede44",
            "92e082c38ae2714c",
            "85141a8bbce60dec",
            "c3fe489d56f32ea2",
            "b06f19970285e6f3",
            "296ce089db74a1b5",
            "66ce09a4d677808a"
        ],
        "x": 34,
        "y": 759,
        "w": 1312,
        "h": 142
    },
    {
        "id": "674af16debdd8f0f",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "087f9c69acbf3512",
            "f64d2514e5563624",
            "28b89ce6ba89047f",
            "23d96e36f5ca36c8",
            "b9322a0d86de860d",
            "7dfa3bab90cbde7c",
            "0821d52b1aa36b97",
            "f29c301276738c5e",
            "6ab0f551657f68ec"
        ],
        "x": 34,
        "y": 939,
        "w": 1312,
        "h": 142
    },
    {
        "id": "9e9aab81c0c1e479",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "4850577351e99876",
            "7ef0378b377047c5",
            "95d14e6ed1ade66c",
            "92d6a490a77b5671",
            "3cb10a30aca6f7ad",
            "14d04246c9a34554",
            "a09b8b36e675cd9a",
            "1512243435a0ec2c",
            "25f8c290f03f8dce"
        ],
        "x": 34,
        "y": 1119,
        "w": 1312,
        "h": 142
    },
    {
        "id": "ff1586c44763ab25",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "aab5d9e098098fac",
            "a6133561d1a9ddb9",
            "e2bb6c99031d8ae0",
            "bbc09ef9da4c5bdc",
            "1b5253263cb324c1",
            "2d05b8d1e252e87e",
            "6654b362727148d8",
            "2a1d3ff91d11ab9b",
            "bb3bc9ccb4b7ccfa"
        ],
        "x": 34,
        "y": 1299,
        "w": 1312,
        "h": 142
    },
    {
        "id": "e61434d43b450009",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "7b34f03f643a50ce",
            "bb9626aa9649b40a",
            "9ad714955045f27b",
            "620b57cf9594e0d9",
            "298a15070a189152",
            "d2e21cd7ddfe525b",
            "741eb3ceb69c8ec4",
            "229914f7347d04d8",
            "ddd27203e99450e3"
        ],
        "x": 34,
        "y": 1479,
        "w": 1312,
        "h": 142
    },
    {
        "id": "8b1ca40e143d36e4",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "a506e1f4f5daab86",
            "28c91b1ca0db0865",
            "506c949381b4bcbf",
            "945bb557b7e18367",
            "e8fd6e6a3d81cdd3",
            "7f1b3a8b331f1606",
            "b2dfe30f5e99e502",
            "4c23b1c0444fdca5",
            "17ea133e78cd791e"
        ],
        "x": 34,
        "y": 1659,
        "w": 1312,
        "h": 142
    },
    {
        "id": "55cd6f49bccbac2c",
        "type": "group",
        "z": "30a1fe01775ecb93",
        "name": "Role Check",
        "style": {
            "stroke": "#000000",
            "fill": "#ffff00",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5779624beb268003",
            "d0260c8ea77d4e25",
            "076f1767072eede2",
            "0bc62f15c96819ca",
            "ba16137993039be6",
            "bb893a73edae94da",
            "c8019dd5e274d99f",
            "90bbed9530ae7e20",
            "7f15f975996b6128"
        ],
        "x": 134,
        "y": 439
    },
    {
        "id": "64d7785b86bd0e78",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "a6cc925ad1f66d3f",
            "754dedb067f13c82",
            "209533dee81d03e6",
            "ff1b4ea12df1cc86",
            "f0b6f83beefd9fdf",
            "6b00666abab453cc",
            "f9bb75fa3e0a41d6",
            "636b1a8af11c5553",
            "e1806fc6647b30e4"
        ],
        "x": 34,
        "y": 1839,
        "w": 1312,
        "h": 142
    },
    {
        "id": "17d8aee66ef5f14b",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "67a3c6661ff874ed",
            "0dbdd03ac72ff952",
            "f698f96664dd325d",
            "7cf03a1a75d84c20",
            "82c4f512f0be7bb5",
            "90e701d7432d9cf2",
            "5bc80b04a8d619a7",
            "116ea6c7ce824cb1",
            "9ee70b7f7567a0d3"
        ],
        "x": 34,
        "y": 2019,
        "w": 1312,
        "h": 142
    },
    {
        "id": "6c2db529cbe5190a",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "72e1e4cba224fc5b",
            "1be1405a5680e587",
            "ddd48aef144781dc",
            "a962ed0c7054ed71",
            "3d5c59b4f93a26f2",
            "b21c2249ae0ed814",
            "9d02f123c6e784d3",
            "7bce085f8052ef7b",
            "14fc94d6d31cb660"
        ],
        "x": 34,
        "y": 2199,
        "w": 1312,
        "h": 142
    },
    {
        "id": "a732e8657f5583e1",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "0b091f9b74befd18",
            "8c3fe5f1c25985bd",
            "c51f082bed3ae121",
            "abb02cea97a760ed",
            "a1a17b8442456722",
            "9b871f6a4e75c8cf",
            "562b375d7d0b06bf",
            "95d0d0d4392ae158",
            "989ba4dd6a4ca183"
        ],
        "x": 34,
        "y": 2379,
        "w": 1312,
        "h": 142
    },
    {
        "id": "16d44c3cfa3101e4",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "ed535f85fa4fb799",
            "b05fbd7092ce8364",
            "48d93bf30e1bde16",
            "f52e852190ece6a6",
            "3a38524baf317f6f",
            "ae0f6f2e0ceb62ce",
            "f2cd4d12b66320a4",
            "a056eb265fb4061a",
            "e879f75c0e5c3ca1"
        ],
        "x": 34,
        "y": 2559,
        "w": 1312,
        "h": 142
    },
    {
        "id": "1ea74c70db7a8d4c",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "8c1fa6fa61d6952e",
            "e9b18d4ccf8b50c9",
            "5a19619ad25bad5e",
            "6c0a34bc94774552",
            "6ce7c37eca6f51c6",
            "51ba731db5e7cd81",
            "06a0be334fa92f23",
            "966d1e458cf5d07d",
            "d9e2848941f56361"
        ],
        "x": 34,
        "y": 2739,
        "w": 1312,
        "h": 142
    },
    {
        "id": "52e9056d6e8207fb",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "d2e22693b149b445",
            "5f5f068b153cd88b",
            "53d1f3b8dbc47a60",
            "c58992ddb1de7697",
            "d092e4ad2237db5b",
            "cc72650eba9a8cf5",
            "2ea36d7022a308c8",
            "8c3b6088b7f5ebfd",
            "59f2b833ab020772"
        ],
        "x": 34,
        "y": 2919,
        "w": 1312,
        "h": 142
    },
    {
        "id": "09dbbd36ba9b70c2",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "23e8b162dc60c777",
            "209f11cf198e4d3d",
            "ddfc2463688af896",
            "525bb017b978f6bf",
            "4e5971eff340c315",
            "4dd9dfe6ec66ea8a",
            "d160f59369c8659d",
            "33e54de74dad3417",
            "273db2592695c0d2"
        ],
        "x": 34,
        "y": 3099,
        "w": 1312,
        "h": 142
    },
    {
        "id": "727f4fbbc86c2387",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "0de5b2a7bba9fe24",
            "3876b9b86a450189",
            "0ec795b80f6ed805",
            "1bb80a15b718f88f",
            "4da35451d3c25c99",
            "6ad67f70424638d1",
            "e56768527bdb29b5",
            "150740e7cd0865cd",
            "9438da355fd08b18"
        ],
        "x": 34,
        "y": 3279,
        "w": 1312,
        "h": 142
    },
    {
        "id": "49dd55f9fc61ca4b",
        "type": "group",
        "z": "9c854ea3.68416",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "216bf465233b443c",
            "d3fa7f22ef77fe01",
            "1f526f1dd1f88429",
            "be6653b36220dd08",
            "bda6fa2a53fe3889",
            "50fdf86cd18d40c9",
            "81a9e955be282bd7",
            "c68eed5750b7484a",
            "3621238135f38bc8"
        ],
        "x": 34,
        "y": 3459,
        "w": 1312,
        "h": 142
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Chill Detector",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3c1c519e.83272e",
        "type": "websocket-listener",
        "path": "/scalarArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8d993328.9d4c4",
        "type": "websocket-listener",
        "path": "/scalarPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c933d8a.80b7a2",
        "type": "websocket-listener",
        "path": "/vectorPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "869ccabd.6400e8",
        "type": "websocket-listener",
        "path": "/vectorArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3d5cd97c.77df96",
        "type": "websocket-listener",
        "path": "/scalarViewer/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84d80994.260508",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "9cd5ff5e.caf86",
        "type": "mongodb3",
        "uri": "$(MONGODBIP)",
        "name": "blinky-lite",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "6acefdd9.69f124",
        "type": "JsonWebToken_config",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "47794345.2e8b8c",
        "type": "websocket-listener",
        "path": "/access-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fcd0f0f1.e1a0f",
        "type": "websocket-listener",
        "path": "/settings-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e2674addbc6ccaef",
        "type": "websocket-listener",
        "path": "/core/websocket",
        "wholemsg": "false"
    },
    {
        "id": "38860699418f46ab",
        "type": "websocket-listener",
        "path": "/app01/websocket",
        "wholemsg": "false"
    },
    {
        "id": "7ece631ea50177fc",
        "type": "websocket-listener",
        "path": "/app02/websocket",
        "wholemsg": "false"
    },
    {
        "id": "921961d7ced20a6b",
        "type": "websocket-listener",
        "path": "/app03/websocket",
        "wholemsg": "false"
    },
    {
        "id": "460c02f928e0dc14",
        "type": "websocket-listener",
        "path": "/app04/websocket",
        "wholemsg": "false"
    },
    {
        "id": "f0fb7ee16f4dd869",
        "type": "websocket-listener",
        "path": "/app05/websocket",
        "wholemsg": "false"
    },
    {
        "id": "a27ec2d09ee18085",
        "type": "websocket-listener",
        "path": "/app06/websocket",
        "wholemsg": "false"
    },
    {
        "id": "ee9bcfa3d93b3114",
        "type": "websocket-listener",
        "path": "/app07/websocket",
        "wholemsg": "false"
    },
    {
        "id": "edc1f81b727a64e5",
        "type": "websocket-listener",
        "path": "/app08/websocket",
        "wholemsg": "false"
    },
    {
        "id": "eb8ce1e25de6ea1c",
        "type": "websocket-listener",
        "path": "/app09/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fa368f238bb0fcf0",
        "type": "websocket-listener",
        "path": "/app10/websocket",
        "wholemsg": "false"
    },
    {
        "id": "104a274897c7edc5",
        "type": "websocket-listener",
        "path": "/scalarAlarmScanner/websocket",
        "wholemsg": "false"
    },
    {
        "id": "81dcb3a4917e5d5f",
        "type": "nexmobasic"
    },
    {
        "id": "50615d2a2028c321",
        "type": "websocket-listener",
        "path": "/app11/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e86ac9e1573678c6",
        "type": "websocket-listener",
        "path": "/app12/websocket",
        "wholemsg": "false"
    },
    {
        "id": "491966e50b6806ee",
        "type": "websocket-listener",
        "path": "/myapps/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c5c525098f27f298",
        "type": "websocket-listener",
        "path": "/app13/websocket",
        "wholemsg": "false"
    },
    {
        "id": "651902e91786db62",
        "type": "websocket-listener",
        "path": "/app14/websocket",
        "wholemsg": "false"
    },
    {
        "id": "78ca934fe41cbe98",
        "type": "websocket-listener",
        "path": "/app15/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fd07e0543438dc40",
        "type": "websocket-listener",
        "path": "/app16/websocket",
        "wholemsg": "false"
    },
    {
        "id": "06c57e288dbd7e6f",
        "type": "websocket-listener",
        "path": "/app17/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8e360f8158697f7f",
        "type": "websocket-listener",
        "path": "/app18/websocket",
        "wholemsg": "false"
    },
    {
        "id": "851ad1139712421a",
        "type": "websocket-listener",
        "path": "/app19/websocket",
        "wholemsg": "false"
    },
    {
        "id": "38ebe4f99de3a030",
        "type": "websocket-listener",
        "path": "/app20/websocket",
        "wholemsg": "false"
    },
    {
        "id": "a64d56be7e50cf27",
        "type": "websocket-listener",
        "path": "/restAccess-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1230,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 790,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n{{{payload.extraScripts}}}\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>\n",
        "output": "str",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1350,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var remoteApp = true;\n        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var box = '{{{payload.box}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n        let route = '';\n\n        function setRemoteApp(remoteAppSet)\n        {\n            remoteApp  = remoteAppSet;\n        }\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                route = uri[1].split('/')[1];\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n       });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n        function getCookie(extension)\n        {\n            var cookies = document.cookie.split(';');\n            var token = null;\n            var cookieName = box + extension + \"=\";\n            for (var icookie = 0; icookie < cookies.length; ++icookie)\n            {\n                var index = cookies[icookie].indexOf(cookieName);\n                if (index >= 0)\n                {\n                    token = cookies[icookie].substring(index + cookieName.length);\n                }\n            }\n            return token;\n        }\n        function sendActionMsg(topic,role,actionMsg)\n        {\n            var roleToken = \"\";\n            if (remoteApp) roleToken  = getCookie('Role');\n            if (roleToken == null)\n            {\n                location.reload();\n                return;\n            }\n            var webSocketMsg = \n            {\n                topic     : topic,\n                payload   : actionMsg,\n                route     : route,\n                userID    : userID,\n                token     : getCookie('Role'),\n                role      : role\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n        }\n",
        "output": "str",
        "x": 530,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get box name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['box'] = global.get('box')\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 40,
        "wires": [
            [
                "2a8fa19722d2e46b"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 940,
        "y": 40,
        "wires": [
            [
                "35ffcf83.1547"
            ]
        ]
    },
    {
        "id": "35ffcf83.1547",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f",
                "41efb541.ee2eec"
            ]
        ]
    },
    {
        "id": "9ac12bdb.3cd258",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\ndata['user'] = msg.extraInfo.user;\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 180,
        "wires": [
            [
                "9cea667e8eccf636"
            ]
        ]
    },
    {
        "id": "de38cb39.638048",
        "type": "http request",
        "z": "ca529822.9112f8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1150,
        "y": 140,
        "wires": [
            [
                "9ac12bdb.3cd258"
            ]
        ]
    },
    {
        "id": "41efb541.ee2eec",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nvar header = {};\nheader['User-Agent'] = 'keycdn-tools:' + global.get('ipRefWeb');\nvar user = \"anon\"\nif (msg.hasOwnProperty(\"token\"))\n{\n    user = msg.token.username;\n}\nreturn {\n    topic:'clientInfo', \n    headers: header,\n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID, user:user},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 100,
        "wires": [
            [
                "de38cb39.638048"
            ]
        ]
    },
    {
        "id": "9cea667e8eccf636",
        "type": "mongodb3 in",
        "z": "ca529822.9112f8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1210,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2a8fa19722d2e46b",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "baseCss",
        "field": "payload.baseCss",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color:var(--white);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: var(--color3);\n        }\n        .card-button\n        {\n          color: var(--color5);\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: white;\n          background-color: var(--color3);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n        .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        div.ui-datepicker\n        {\n            font-size:30px;\n        }",
        "output": "str",
        "x": 380,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "347f36fe.94ed7a",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "Setup accessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n    } \n};\nvar queryFilter = \n{\n    userID: msg.userID\n}\nvar settingLogEntry = {topic:msg.topic, userID: msg.userID, tray:msg.payload, timeStamp: new Date().getTime(),username:msg.username};\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    payload         : [queryFilter, projectionFilter],\n    settingLogEntry : settingLogEntry\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 160,
        "wires": [
            [
                "e24c42fb.5b61a"
            ]
        ]
    },
    {
        "id": "e24c42fb.5b61a",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findOne",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "c006fe2c.abbb1"
            ]
        ]
    },
    {
        "id": "c006fe2c.abbb1",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "setup settingLogEntry",
        "func": "var settingLogEntry = \n{\n    topic       :   msg.settingLogEntry.topic, \n    userID      :   msg.settingLogEntry.userID,\n    tray      :   msg.settingLogEntry.tray,\n    timeStamp   :   msg.settingLogEntry.timeStamp,\n    username    :   msg.settingLogEntry.username,\n    ipInfo      :   msg.payload\n}\nreturn {topic: 'settingLogEntry', payload: settingLogEntry};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 160,
        "wires": [
            [
                "9c60f57c.b85078"
            ]
        ]
    },
    {
        "id": "9c60f57c.b85078",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ddfc02aa.3af39",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript.scalartraymenu",
        "field": "payload.javascript.scalartraymenu",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 4;\n        var traySelect = [];\n        var nameSelect = [];\n        var propSelect=[];\n        var attrSelect=[];\n        var valSelect=[];\n        var trayInfo = [];\n        var permitGetTrayValues = true;\n\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                traySelect[itrace] = document.getElementById('traySelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                propSelect[itrace] = document.getElementById('propSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                trayInfo[itrace] = {type: '', name : '',  prop : '',attr : '',tray : {}, axis:'y1', pts:true};\n                $('#unitSelect'+ itrace.toString()).html('');\n            }\n            setInterval(getTrayValues, 1000);\n            onDocumentReadySpecial();\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getTrayList':\n                        loadTrayList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getTrayValues':\n                        loadTrayValues(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                        onWebSocketMessageSpecial(msg);\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            var actionMsg = \n                {\n                };\n            sendActionMsg('getTrayList', 'readDatabase', actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadTrayList(trayList)\n        {\n            trayList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < trayList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = trayList[ii];\n                    opt.innerHTML = trayList[ii];\n                    traySelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function traySelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (traySelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    type  : traySelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearPropOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var readOpt = document.createElement('option');\n            readOpt.value = 'reading';\n            readOpt.innerHTML = 'reading';\n            propSelect[itrace].appendChild(readOpt);\n            var setOpt = document.createElement('option');\n            setOpt.value = 'setting';\n            setOpt.innerHTML = 'setting';\n            propSelect[itrace].appendChild(setOpt);\n            \n            propSelect[itrace].value = 'notSelected';\n        }\n        function propSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (propSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    type  : traySelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : propSelect[itrace].value\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].prop = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n            if (attrSelect[itrace].value == 'notSelected') \n            {\n                $('#valueSelect' + itrace.toString()).html('');\n                $('#unitSelect' + itrace.toString()).html('');\n                $('#editTrayButton'+ itrace.toString()).hide();\n\n                return;\n            }\n            trayInfo[itrace].type = traySelect[itrace].value;\n            trayInfo[itrace].name = nameSelect[itrace].value;\n            trayInfo[itrace].prop = propSelect[itrace].value;\n            trayInfo[itrace].attr = attrSelect[itrace].value;\n            attrSelectedSpecial(itrace);\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].prop = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearPropOptionList(itrace);\n        }\n        function clearPropOptionList(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].prop = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n\n            while (propSelect[itrace].firstChild)\n            {\n                propSelect[itrace].removeChild(propSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            propSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].prop = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            $('#unitSelect'+ itrace.toString()).html('');\n            $('#valueSelect' + itrace.toString()).html('');\n            clearAttrOptionListSpecial(itrace);\n        }\n        function getTrayValues()\n        {\n            var trayList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((trayInfo[itrace].type.length > 0) && (trayInfo[itrace].name.length > 0)) \n                {\n                    trayList[traceCount] = { $and: [ {type : trayInfo[itrace].type}, {name : trayInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: trayList };\n            var actionMsg = \n                {\n                    queryFilter : queryFilter\n                };\n            sendActionMsg('getTrayValues', 'readDatabase', actionMsg);\n        }\n        function loadTrayValues(data)\n        {\n            if (!permitGetTrayValues) return;\n            var trays = data.trays;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (trayInfo[itrace].attr.length > 0)\n                {\n                    for (itray = 0; itray < trays.length; ++itray)\n                    {\n                        if (trays[itray].type == trayInfo[itrace].type)\n                        {\n                            if(trays[itray].name == trayInfo[itrace].name)\n                            {\n                                trayInfo[itrace].tray = trays[itray];\n                                var attr = trayInfo[itrace].tray[trayInfo[itrace].attr];\n                                var valueColor = 'black';\n                                if (attr.alarm.value > 0) valueColor = 'orange';\n                                if (attr.alarm.value > 2) valueColor = 'red';\n                                $('#valueSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#valueSelect' + itrace.toString()).html(attr.value.toString());\n                                $('#unitSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#unitSelect' + itrace.toString()).html(attr.unit);\n                            }\n                        }\n                    } \n                }\n            }\n            loadTrayValuesSpecial(data);\n        }\n",
        "output": "str",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "e98d4d33.bcca2"
            ]
        ]
    },
    {
        "id": "e98d4d33.bcca2",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.javascript.specialscalar}}}\n{{{payload.javascript.scalartraymenu}}}",
        "output": "str",
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "29822a72.7731e6",
        "type": "JsonWebToken",
        "z": "2dba0745.a98d98",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 400,
        "y": 60,
        "wires": [
            [
                "f3358361.19029"
            ]
        ]
    },
    {
        "id": "3deefd6d.1dde92",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check for Box Cookies",
        "func": "var boxCookie = msg.req.cookies[global.get('box') + 'Role'];\nif(boxCookie == undefined)\n{\n    msg.cookies = { };\n    msg.payload.errorMsg = \"Credentials needed\";\n    return [null,msg];\n}\nmsg.token = boxCookie;\nmsg.payload['roleToken'] = msg.token;\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 120,
        "wires": [
            [
                "29822a72.7731e6"
            ],
            [
                "c0be6557.9ceae8"
            ]
        ]
    },
    {
        "id": "f3358361.19029",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload.errorMsg = tokenError;\n    msg.cookies = { };\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload.errorMsg = 'Login Expired. Please login again';\n        msg.cookies = { };\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (let irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (let itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole)\n{\n    msg.payload.errorMsg = 'Credentials not valid for App';\n    msg.cookies = { };\n    return [null,msg];\n}\nmsg.payload['profile'] = JSON.stringify(msg.token);\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 60,
        "wires": [
            [],
            [
                "c0be6557.9ceae8"
            ]
        ]
    },
    {
        "id": "f728a8f0.ad8b68",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n        <div class='card'>\n            <p class='card-title' >{{{payload.errorMsg}}}</p>\n            <div class='card-body' align=\"center\">\n                <form action=\"/process-login\" method=\"POST\">\n                <table align='center'>\n                    <tr>\n                        <td>\n                            <label for=\"username\" class=\"big-text\">User</label>\n                        </td>\n                        <td>\n                            <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label for=\"password\" class=\"big-text\">Password</label>\n                        </td>\n                        <td>\n                            <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                        </td>\n                        <td>\n                            <input type=\"submit\" class=\"btn jumbotron-button btn-block big-text bold-text\"/>\n                        </td>\n                    </tr>\n                </table>    \n                <input type=\"hidden\" name=\"url\" value=\"{{{req.url}}}\" />\n            </form>  \n        </div>\n    </div>",
        "output": "str",
        "x": 1030,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9c382ca2.1a311",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Log-in",
        "output": "str",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "5896b9d2.764738"
            ]
        ]
    },
    {
        "id": "c0be6557.9ceae8",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "9c382ca2.1a311"
            ]
        ]
    },
    {
        "id": "5896b9d2.764738",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basic.png",
        "output": "str",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "f728a8f0.ad8b68"
            ]
        ]
    },
    {
        "id": "3966deae.453262",
        "type": "subflow:2dba0745.a98d98",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "81c6a0e3ed2d7960"
            ]
        ]
    },
    {
        "id": "81c6a0e3ed2d7960",
        "type": "subflow:c57c2f9e65e6cb70",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "34243edd99253749"
            ]
        ]
    },
    {
        "id": "34243edd99253749",
        "type": "subflow:ca529822.9112f8",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "8e411315.2b09f",
        "type": "subflow:2dba0745.a98d98",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "47fd322ed5bc5b6d"
            ]
        ]
    },
    {
        "id": "89410d1215210987",
        "type": "subflow:ca529822.9112f8",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 510,
        "y": 120,
        "wires": []
    },
    {
        "id": "47fd322ed5bc5b6d",
        "type": "subflow:7744eedb71df7703",
        "z": "495f0879.c831c8",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "89410d1215210987"
            ]
        ]
    },
    {
        "id": "54f691be.e6b47",
        "type": "json",
        "z": "fee416c.fb205e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "7de7a240.cf57fc"
            ]
        ]
    },
    {
        "id": "7de7a240.cf57fc",
        "type": "function",
        "z": "fee416c.fb205e8",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "632b2f1c.15e43"
            ]
        ]
    },
    {
        "id": "632b2f1c.15e43",
        "type": "JsonWebToken",
        "z": "fee416c.fb205e8",
        "name": "roleToken",
        "tokenconfig": "6acefdd9.69f124",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "92d40c38.2026a"
            ]
        ]
    },
    {
        "id": "92d40c38.2026a",
        "type": "function",
        "z": "fee416c.fb205e8",
        "name": "Check Role",
        "func": "var errMsg = null;\nvar tokenError = msg.error;\nif (tokenError != undefined)\n{\n    errMsg = \n    {\n        topic : msg.topic, \n        payload:\n        {\n            topic:'badToken', \n            payload: msg.topic + \" badToken\",\n            userID : msg.userID,\n            role   : msg.role\n        }\n    };\n    return [null,errMsg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        errMsg = \n        {\n            topic : msg.topic, \n            payload:\n            {\n                topic:'loginExpired', \n                payload: msg.topic + \" login expired\",\n                userID : msg.userID,\n                role   : msg.role\n            }\n        };\n        return [null,errMsg];\n    }\n}\npermittedRole = false;\nfor (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n{\n    if (msg.token.roles[itoken] == msg.role) permittedRole = true;\n}\nif (permittedRole) return [msg,null];\n\nerrMsg = \n{\n    topic : msg.topic, \n    payload:\n    {\n        topic  : 'permissionError', \n        payload: msg.topic + \" not permitted\",\n        userID : msg.userID,\n        role   : msg.role\n    }\n};\n\nreturn [null,errMsg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6f95e75a.75d6d8",
        "type": "template",
        "z": "c57c2f9e65e6cb70",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/blmc-logo.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/myapps'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "aec66f39cecf2770"
            ]
        ]
    },
    {
        "id": "aec66f39cecf2770",
        "type": "subflow:74b74739cc6e49af",
        "z": "c57c2f9e65e6cb70",
        "name": "",
        "x": 340,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b7076b42.4012e8",
        "type": "template",
        "z": "7744eedb71df7703",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/blmc-logo.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title\">{{{payload.title}}}</h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/core'><img src=\"/img/core.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n",
        "output": "str",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "e2784516c510904b"
            ]
        ]
    },
    {
        "id": "e2784516c510904b",
        "type": "template",
        "z": "7744eedb71df7703",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n            --color1          :   #083357;\n            --color2          :   #487895;\n            --color3          :   #e7e7e7;\n            --color4          :   #c6c2bb;\n            --color5          :   #ffffff;\n            --color6          :   #ffffff;\n          --big-text-size :300%;\n          --medium-text-size :200%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: var(--color1) !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--color5);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color1) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color1) !important;\n          text-align: center;\n          border-style: solid;\n          border-width: 2px;\n          border-color: var(--color3);\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n            color             :   var(--color5);\n            font-weight       :   900;\n            font-size         :   300%;\n            font-style        :   italic;        \n        }\n        .card-title-button\n        {\n            color             :   var(--color5) !important;\n            background-color  :   var(--color1) !important;\n            font-weight       :   900;\n            font-size         :   300%;\n            font-style        :   italic;        \n        }\n        .card-text\n        {\n          color: var(--color6);\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .medium-text\n        {\n            font-size: var(--medium-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n          color: black;\n          background-color: var(--color3);\n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n",
        "output": "str",
        "x": 310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "721e5b041cde047a",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n   <h1 style=\"text-align:center;color:#415c71;\">{{{payload.errorMsg}}}</h1>\n   <p></p>\n   <h1 style=\"text-align:center;color:#415c71;\">Redirecting to HTTPS...</h1>\n",
        "output": "str",
        "x": 770,
        "y": 80,
        "wires": [
            [
                "8c6be08c3d726f73"
            ]
        ]
    },
    {
        "id": "07bacb5b77262b3d",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Insecure Connection",
        "output": "str",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "3a39937ddaa75862"
            ]
        ]
    },
    {
        "id": "5129e0a4079ad82a",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        $( document ).ready(function()\n        {\n            setTimeout(function(){location.replace(\"{{{payload.httpsUrl}}}\");}, 3000);\n        });\n \n",
        "output": "str",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "07bacb5b77262b3d"
            ]
        ]
    },
    {
        "id": "3a39937ddaa75862",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 630,
        "y": 80,
        "wires": [
            [
                "721e5b041cde047a"
            ]
        ]
    },
    {
        "id": "8c6be08c3d726f73",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title\">\n                        <span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 900,
        "y": 80,
        "wires": [
            [
                "83802deb03eddd20"
            ]
        ]
    },
    {
        "id": "83802deb03eddd20",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 1050,
        "y": 80,
        "wires": [
            [
                "3e97c79390cf79f0"
            ]
        ]
    },
    {
        "id": "30495fc00067bd92",
        "type": "function",
        "z": "3fec913b325ae6ff",
        "name": "https check",
        "func": "let ireq = -1;\nfor (let ii = 0; ii < msg.req.rawHeaders.length; ++ii)\n{\n    if (msg.req.rawHeaders[ii] == \"X-Forwarded-Proto\") ireq = ii + 1;\n}\nif (ireq >= 0) \n{\n    if (msg.req.rawHeaders[ireq] == 'http')\n    {\n        msg.cookies = { };\n        let ireq2 = -1;\n        for (let ii = 0; ii < msg.req.rawHeaders.length; ++ii)\n        {\n            if (msg.req.rawHeaders[ii] == \"Host\") ireq2 = ii + 1;\n        }\n        if (ireq2 >= 0)\n        {\n            let host = msg.req.rawHeaders[ireq2];\n            let url = \"https://\" + host + msg.req.url;\n            msg.payload['httpsUrl'] = url;\n        }\n        else\n        {\n            msg.payload['httpsUrl'] = '';\n        }\n        msg.payload.errorMsg = \"Insecure Connection!\";\n        return [null,msg];\n    }\n}\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [],
            [
                "5129e0a4079ad82a"
            ]
        ]
    },
    {
        "id": "124220290623f310",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "155aa92c7a1b80ab"
            ]
        ]
    },
    {
        "id": "370b2570c9f1209a",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 530,
        "y": 220,
        "wires": [
            [
                "124220290623f310"
            ]
        ]
    },
    {
        "id": "3e97c79390cf79f0",
        "type": "template",
        "z": "3fec913b325ae6ff",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>\n",
        "output": "str",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "370b2570c9f1209a"
            ]
        ]
    },
    {
        "id": "155aa92c7a1b80ab",
        "type": "http response",
        "z": "3fec913b325ae6ff",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "03d904d46af609c9",
        "type": "mongodb3 in",
        "z": "30a1fe01775ecb93",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "appConfig",
        "operation": "findOne",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "7a10937ccd7aef93"
            ]
        ]
    },
    {
        "id": "7a10937ccd7aef93",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "name": "Parse config",
        "func": "let app = msg.req['_parsedUrl'].pathname.split('/')[1];\nglobal.set(app, msg.payload.trayUpdateFilter);\nlet config = JSON.stringify(msg.payload);\nlet trays = [];\nfor (let it = 0; it < msg.payload.trayTypes.length; ++it)\n{\n  let tray = { type: msg.payload.trayTypes[it], name: msg.urlInput.trayNames[it]};\n  trays.push(tray);\n}\nlet urlInput = JSON.stringify({ box: msg.urlInput.box, trayList: trays});\ndelete msg.urlInput;\n\nmsg.config = { config: config, urlInput: urlInput, title:msg.payload.title, allowedRoles : msg.payload.allowedRoles, userID:getRandomInt(32768)};\nmsg.payload = [{ styleSheetName: msg.payload.styleSheet }, { projection: { _id: 0 } }]\nreturn msg;\nfunction getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 200,
        "wires": [
            [
                "11eaf254b0683b73"
            ]
        ]
    },
    {
        "id": "301570926b166a61",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "name": "get Appconfig",
        "func": "let app = msg.req['_parsedUrl'].pathname.split('/')[1];\nmsg['urlInput'] = {};\nmsg['urlInput']['box'] = global.get('box');\nmsg['urlInput']['trayNames'] = msg.payload.trayNames.split(',');\nmsg.payload = [{ app: app},{projection  :{_id : 0} }]\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 120,
        "wires": [
            [
                "03d904d46af609c9"
            ]
        ]
    },
    {
        "id": "418f095f757062ea",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "onOffSetCube",
        "field": "payload.onOffSetCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//onOffSet\n        class OnOffSetCube extends CubeRowParameterView\n        {\n            addComponents(widgetColumns)\n            {\n\n                this.settingButton = document.createElement('button');\n                this.settingButton.setAttribute('class', 'btn btn-block onOffSetCube-button');\n                this.settingButton.innerHTML = '';\n                this.settingButton.onclick = event => {this.toggle()};\n                widgetColumns[0].appendChild(this.settingButton);\n            }\n            toggle()\n            {\n                let onOff = 0;\n                if (this.tray[this.config.cubeName].value === 0)\n                {\n                    onOff = 1;\n                }\n                else\n                {\n                    onOff = 0;\n                }\n                this.settingButton.setAttribute('style','background: var(--color3); color: var(--color3);');\n                let payload = {'cube': this.config.cubeName, 'value':onOff};\n                let actionMsg = \n                    {\n                        topic   : this.card.app.box + '/' +  this.tray.type + '/' +  this.tray.name + '/setting/setting',\n                        payload : payload\n                    };\n                this.card.app.sendActionMsg('setting','setting',actionMsg);\n            }\n            updateCubeValue()\n            {\n                if (this.tray[this.config.cubeName].value === 0)\n                {\n                    if ('onOffLabel' in this.config)\n                    {\n                        this.settingButton.innerHTML = this.config.onOffLabel[0];\n                    }\n                    else\n                    {\n                        this.settingButton.innerHTML = \"Off\";\n                    }\n                    \n                    this.settingButton.setAttribute('style','background:' + this.config.offColor + '; color: black;');\n                }\n                if (this.tray[this.config.cubeName].value === 1) \n                {   \n                    if ('onOffLabel' in this.config)\n                    {\n                        this.settingButton.innerHTML = this.config.onOffLabel[1];\n                    }\n                    else\n                    {\n                        this.settingButton.innerHTML = \"On\";\n                    }\n                    this.settingButton.setAttribute('style','background:' + this.config.onColor + '; color: black;');\n                }\n            }\n        }",
        "output": "str",
        "x": 1080,
        "y": 120,
        "wires": [
            [
                "c7b26de8397740b4"
            ]
        ]
    },
    {
        "id": "0a86ebd27d99d1a6",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "script",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// script\n{{{payload.cubeControlApp}}}\n{{{payload.navbar}}}\n{{{payload.alarmLimitDialog}}}\n{{{payload.okCancelDialog}}}\n{{{payload.cubeRowCard}}}\n{{{payload.cubeRowParameterView}}}\n{{{payload.onOffSetCube}}}\n{{{payload.numberSetCube}}}\n{{{payload.textSetCube}}}\n{{{payload.numberReadCube}}}\n{{{payload.timeStampReadCube}}}\n{{{payload.textReadCube}}}\n{{{payload.imageReadCube}}}\n{{{payload.labelReadCube}}}\n{{{payload.stateChoiceCube}}}\n{{{payload.dropChoiceCube}}}\n{{{payload.gaugeCube}}}\n{{{payload.hbarCube}}}\n{{{payload.archivePlotCard}}}\n{{{payload.timePlotCard}}}\n{{{payload.vectorPlotCard}}}\n{{{payload.iframeCard}}}\n{{{payload.userCard}}}\n{{{payload.dictionary}}}\n{{{payload.init}}}",
        "output": "str",
        "x": 1350,
        "y": 360,
        "wires": [
            [
                "9014c7a9a5d27c4b"
            ]
        ]
    },
    {
        "id": "c7b26de8397740b4",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "numberSetCube",
        "field": "payload.numberSetCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//numberSetCube\n        class NumberSetCube   extends CubeRowParameterView\n        {\n            addComponents(widgetColumns)\n            {\n                this.inputBox = document.createElement('input');\n                this.inputBox.setAttribute('class', 'numberSetCube-inputbox');\n                this.inputBox.setAttribute('type', 'text');\n                this.inputBox.setAttribute('value', '0');\n                this.inputBox.oninput = event => {this.inputChange()};\n                widgetColumns[0].appendChild(this.inputBox);\n\n                this.unitSpan  = document.createElement('span');\n                this.unitSpan.setAttribute('class', 'cubeRowParameterView-unit-span');\n                this.unitSpan.innerHTML = '';\n                widgetColumns[1].appendChild(this.unitSpan);\n\n                this.settingButton = document.createElement('button');\n                this.settingButton.setAttribute('class', 'btn btn-block numberSetCube-button');\n                this.settingButton.innerHTML = '&#10003;';\n                this.settingButton.onclick = event => {this.changeSetting()};\n                widgetColumns[2].appendChild(this.settingButton);\n\n                this.showSettingButton(false);\n            }\n\n            showSettingButton(showButton)\n            {\n                if (showButton)\n                {\n                    this.settingButton.style.display='block';\n                }\n                else\n                {\n                    this.settingButton.style.display='none';\n                }\n            }\n            inputChange()\n            {\n                this.changed = true;\n                this.showSettingButton(true);\n            }\n            changeSetting()\n            {\n                this.showSettingButton(false);\n                if (isNaN(this.inputBox.value))\n                {\n                    this.changed = false;\n                    return;\n                }\n                let payload = {'cube': this.config.cubeName, 'value':Number(this.inputBox.value)};\n                let actionMsg = \n                    {\n                        topic   : this.card.app.box + '/' +  this.tray.type + '/' +  this.tray.name + '/setting/setting',\n                        payload : payload\n                    };\n                this.card.app.sendActionMsg('setting','setting',actionMsg);\n                this.changed = false;\n            }\n            updateCubeValue()\n            {\n                if (!this.changed) \n                {\n                    this.inputBox.value = this.tray[this.config.cubeName].value.toString();\n                    this.unitSpan.innerHTML    = this.tray[this.config.cubeName].unit;\n                }\n\n            }\n        }",
        "output": "str",
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "9ff3df490651f2aa"
            ]
        ]
    },
    {
        "id": "4100d0c58cb16c81",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "cubeControlApp",
        "field": "payload.cubeControlApp",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// cubeControlApp\n        class CubeControlApp \n        {\n            constructor(trays, config, userID)\n            {\n                this.box = trays.box;\n                this.trays = trays.trayList;\n                this.config = config;\n                this.ws = null;\n                this.userID = userID;\n                this.wsUri = '';\n                this.wsConnected = false;\n                this.connectionTrys = 0;\n                this.route = '';\n                this.navBar = null;\n                this.alarmLimitDialog = new AlarmLimitDialog(this);\n                this.cubeCards = [];\n//                this.iframeCards = [];\n                this.cardOrder = [];\n                this.archiveCard = null;\n                this.appConnectedOnce = false;\n                this.traysLoaded = false;\n                this.timePlotCard = null;\n                this.userCard = null;\n                this.messageDialog     = new OkCancelDialog(this, 'Message', 0);\n                this.acknowledgeDialog = new OkCancelDialog(this, 'Acknowledge', 1);\n                this.okCancelDialog    = new OkCancelDialog(this, 'Acknowledge', 2);\n                \n                if (\"navbar\" in this.config)\n                {\n                    this.navBar = new (dict.get('NavBar'))(this,this.config.navbar.config);\n                }\n\n                for (let icard = 0; icard < config.cards.length; ++icard)\n                {\n                    switch (this.config.cards[icard].type)\n                    {\n                        case 'CubeRowCard':\n                            let cubeCard = new (dict.get(this.config.cards[icard].type))(this, this.config.cards[icard].config);\n                            this.cubeCards.push(cubeCard);\n                            this.cardOrder.push(cubeCard);\n                            break;\n                        case 'ArchivePlotCard':\n                            let archiveCard = new (dict.get(this.config.cards[icard].type))(this, this.config.cards[icard].config);\n                            this.archiveCard = archiveCard;\n                            this.cardOrder.push(this.archiveCard);\n                            break;\n                        case 'TimePlotCard':\n                            let timePlotCard = new (dict.get(this.config.cards[icard].type))(this, this.config.cards[icard].config);\n                            this.timePlotCard = timePlotCard;\n                            this.cardOrder.push(this.timePlotCard);\n                            break;\n                        case 'VectorPlotCard':\n                            let vectorPlotCard = new (dict.get(this.config.cards[icard].type))(this, this.config.cards[icard].config);\n                            this.vectorPlotCard = vectorPlotCard;\n                            this.cardOrder.push(this.vectorPlotCard);\n                            break;\n                        case 'IframeCard':\n                            let iframeCard = new (dict.get(this.config.cards[icard].type))(this, this.config.cards[icard].config);\n//                            this.iframeCards.push(iframeCard);\n                            this.cardOrder.push(iframeCard);\n                            break;\n                        case 'UserCard':\n                            let userCard = new (dict.get(this.config.cards[icard].type))(this, this.config.cards[icard].config);\n                            this.userCard = userCard;\n                            this.cardOrder.push(this.userCard);\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n            webSocketConnected()\n            {\n                return this.wsConnected;\n            }\n            wsConnectC()\n            {\n                if (this.wsUri.length < 1)\n                {\n                    let uri = window.location.href.split('://');\n                    let wslead = 'ws://';\n                    if (uri[0] == 'https') wslead = 'wss://';\n                    let questionLocation = uri[1].indexOf('?');\n                    if (questionLocation >= 0)\n                    {\n                        uri[1] = uri[1].substring(0,questionLocation);\n                    }\n                    this.route = uri[1].split('/')[1];\n                    if (uri[1].indexOf('/') < (uri[1].length - 1))\n                    {\n                        this.wsUri = wslead + uri[1] + '/websocket';\n                    }\n                    else\n                    {\n                        this.wsUri = wslead + uri[1] + 'websocket';\n                    }\n                }\n                \n                this.ws = new WebSocket(this.wsUri);\n                this.ws.onmessage  = event => {this.onWebSocketMessage(JSON.parse(event.data))};\n                this.ws.onopen     = event => \n                {\n                    this.onWebsocketOpen();\n                };\n                this.ws.onclose    = event => \n                {\n                    this.connectionTrys = this.connectionTrys + 1;\n                    console.log(\"Websocket closed\");\n                    this.wsConnected = false;\n                    if (this.connectionTrys < 20000)\n                    {\n                        console.log('Trying to reconnect...');\n                        setTimeout(()=>this.wsConnectC(),2000);\n                    }\n                    else\n                    {\n                        this.acknowledgeDialog.showDialog('Error: Websocket disconnect.',() => \n                        {\n                            this.connectionTrys = 0;\n                            console.log('Trying to reconnect...');\n                            setTimeout(()=>this.wsConnectC(),2000);\n                        });\n                    }\n                };\n            }\n            onWebsocketOpen()\n            {\n                console.log(\"Websocket connected\");\n                this.wsConnected = true;\n                if (!this.appConnectedOnce) this.readTraysFromDatabase();\n                if (!this.appConnectedOnce && (this.archiveCard != null)) this.archiveCard.buttonClicked(this.archiveCard.config.initButtonIndex);\n                this.appConnectedOnce = true;\n            }\n            onWebSocketMessage(msg)\n            {\n                switch(msg.topic)\n                {\n                    case 'getTraysFromDatabase':\n                        if (msg.userID != this.userID) return;\n                        for (let itray = 0; itray < this.trays.length; ++ itray)\n                        {\n                            for (let ipay = 0; ipay < msg.payload.length; ++ ipay)\n                            {\n                                if ((msg.payload[ipay].type == this.trays[itray].type) && (msg.payload[ipay].name == this.trays[itray].name) )\n                                {\n                                    this.trays[itray] = JSON.parse(JSON.stringify(msg.payload[ipay]));\n                                }\n                            }\n                        }\n                        for (let ic = 0; ic < this.cubeCards.length; ++ic)\n                        {\n                            this.cubeCards[ic].trayUpdate(this.trays);\n                        }\n                        if (this.timePlotCard != null) this.timePlotCard.addTracePointsToTimePlot();\n                        if (this.vectorPlotCard != null) this.vectorPlotCard.addVectorsToVectorPlot();\n                        this.traysLoaded = true;\n                        break;\n                    case 'mqttUpdate':\n                        if (!this.traysLoaded) return;\n                        for (let itray = 0; itray < this.trays.length; ++itray) \n                        {\n                            if ((msg.payload.type == this.trays[itray].type) && (msg.payload.name == this.trays[itray].name)) \n                            {\n                                this.trays[itray] = JSON.parse(JSON.stringify(msg.payload));\n                            }\n                        }\n                        for (let ic = 0; ic < this.cubeCards.length; ++ic) \n                        {\n                            this.cubeCards[ic].trayUpdate(this.trays);\n                        }\n                        if (this.timePlotCard != null) this.timePlotCard.addTracePointsToTimePlot();\n                        if (this.vectorPlotCard != null) this.vectorPlotCard.addVectorsToVectorPlot();\n                       break;\n                    case 'readDatabase':\n                        if (msg.userID != this.userID) return;\n                        let data = JSON.parse(JSON.stringify(msg.payload));\n                        if (this.archiveCard != null) this.archiveCard.putArchiveValues(data);\n                        break;\n                    case 'renew':\n                        if (msg.userID != this.userID) return;\n                        this.updateCookie(msg);\n                        break;\n                    case 'permissionError':\n                        if (msg.userID != this.userID) return;\n                        this.acknowledgeDialog.showDialog('Error: You do not have permission.',function(){});\n                        break;\n                    case 'loginExpired':\n                        if (msg.userID != this.userID) return;\n                         location.reload();\n                        break;\n                    default:\n                        break;\n                }\n            }\n            docReady()\n            {\n                if (this.navBar != null) this.navBar.onDocumentReady();\n                this.alarmLimitDialog.onDocumentReady(\"alarmLimitCardContainer\");\n                for (let ic = 0; ic < this.cardOrder.length; ++ic)\n                {\n                    this.cardOrder[ic].onDocumentReady();\n                }\n/*\n                for (let ic = 0; ic < this.cubeCards.length; ++ic)\n                {\n                    this.cubeCards[ic].onDocumentReady();\n                }\n                if (this.archiveCard != null) this.archiveCard.onDocumentReady();\n                if (this.timePlotCard != null) this.timePlotCard.onDocumentReady();\n                if (this.userCard != null) this.userCard.onDocumentReady();\n*/\n                this.messageDialog.onDocumentReady('messageCardContainer');\n                this.acknowledgeDialog.onDocumentReady('acknowledgeCardContainer');\n                this.okCancelDialog.onDocumentReady('okCancelCardContainer');\n                \n                this.wsConnectC();\n            }\n            readTraysFromDatabase()\n            {\n                let queryArray = [];\n                for (let ii = 0; ii < this.trays.length; ++ii)\n                {\n                    queryArray[ii] = {$and : [ {type: this.trays[ii].type}, {name: this.trays[ii].name} ]};\n                }\n                let actionMsg = { $or : queryArray };\n                this.sendActionMsg('getTraysFromDatabase','readDatabase', actionMsg);\n            }\n            getCookie(extension)\n            {\n                let cookies = document.cookie.split(';');\n                let token = null;\n                let cookieName = this.box + extension + \"=\";\n                for (let icookie = 0; icookie < cookies.length; ++icookie)\n                {\n                    let index = cookies[icookie].indexOf(cookieName);\n                    if (index >= 0)\n                    {\n                        token = cookies[icookie].substring(index + cookieName.length);\n                    }\n                }\n                return token;\n            }\n            updateCookie(msg)\n            {\n                document.cookie = this.box + \"Role=\" + msg.role;\n                document.cookie = this.box + \"ExpDate=\" + msg.expDate;\n                document.cookie = this.box + \"Username=\" + msg.username;\n            }\n            sendActionMsg(topic,role,actionMsg)\n            {\n                let roleToken = \"\";\n                roleToken  = this.getCookie('Role');\n                if (roleToken == null)\n                {\n                    location.reload();\n                    return;\n                }\n                let webSocketMsg = \n                {\n                    topic     : topic,\n                    payload   : actionMsg,\n                    route     : this.route,\n                    userID    : this.userID,\n                    token     : this.getCookie('Role'),\n                    role      : role\n                };\n                this.ws.send(JSON.stringify(webSocketMsg));\n            }\n        }",
        "output": "str",
        "x": 820,
        "y": 80,
        "wires": [
            [
                "2067814904de1fec"
            ]
        ]
    },
    {
        "id": "d41afc4ae8fe3b6b",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "numberReadCube",
        "field": "payload.numberReadCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//numberReadCube\n        class NumberReadCube  extends CubeRowParameterView\n        {\n            addComponents(widgetColumns)\n            {\n                this.readingSpan  = document.createElement('span');\n                this.readingSpan.setAttribute('class', 'numberReadCube-span');\n                this.readingSpan.innerHTML = '?';\n                widgetColumns[0].appendChild(this.readingSpan);\n\n                this.unitSpan  = document.createElement('span');\n                this.unitSpan.setAttribute('class', 'cubeRowParameterView-unit-span');\n                this.unitSpan.innerHTML = '';\n                widgetColumns[1].appendChild(this.unitSpan);\n            }\n\n            updateCubeValue()\n            {\n                this.readingSpan.innerHTML = this.tray[this.config.cubeName].value.toString();\n                this.unitSpan.innerHTML    = this.tray[this.config.cubeName].unit;\n            }\n\n        }",
        "output": "str",
        "x": 1090,
        "y": 280,
        "wires": [
            [
                "d5219c027ea403df"
            ]
        ]
    },
    {
        "id": "83a95f24de3b0a6d",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "cubeRowParameterView",
        "field": "payload.cubeRowParameterView",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//cubeRowParameterView\n        class CubeRowParameterView \n        {\n            constructor(card, config)\n            {\n                this.card = card;\n                this.config = JSON.parse(JSON.stringify(config));\n            }\n\n            onDocumentReady(parentElement)\n            {\n                let inLineTable = document.createElement('table');\n                inLineTable.setAttribute('width', '100%');\n                let inLineRow  = document.createElement('tr');\n                let labelColumn  = document.createElement('td');\n                labelColumn.setAttribute('class', 'cubeRowParameterView-label-column');\n\n                let labelSpan  = document.createElement('span');\n                if ('cubeLabel' in this.config)\n                {\n                    labelSpan.innerHTML = this.config.cubeLabel;\n                }\n                else\n                {\n                    labelSpan.innerHTML = this.card.app.trays[this.config.trayIndex].type + \".\" + this.card.app.trays[this.config.trayIndex].name + \".\" + this.config.cubeName;\n                }\n                labelColumn.appendChild(labelSpan);\n                inLineRow.appendChild(labelColumn);\n                \n                let widgetColumns = [];\n                for (let iw = 0; iw < 3; ++iw)\n                {\n                    let iwcol  = document.createElement('td');\n                    iwcol.setAttribute('class', 'cubeRowParameterView-widget-column-' + (iw + 1).toString());\n                    inLineRow.appendChild(iwcol);\n                    widgetColumns.push(iwcol);\n                }\n                \n                this.addComponents(widgetColumns);\n\n                let alarmColumn  = document.createElement('td');\n                alarmColumn.setAttribute('class', 'cubeRowParameterView-alarmConfig-column');\n                this.alarmButton = document.createElement('input');\n                this.alarmButton.setAttribute('type', 'image');\n                this.alarmButton.setAttribute('src', '/img/greenLight.png');\n                this.alarmButton.setAttribute('class', 'cubeRowParameterView-alarmConfig-button');\n                this.alarmButton.onclick = event => {this.changeAlarmConfig()};\n                alarmColumn.appendChild(this.alarmButton);\n                inLineRow.appendChild(alarmColumn);\n\n                inLineTable.appendChild(inLineRow);\n                parentElement.appendChild(inLineTable);\n            }\n\n            trayUpdate(trays)\n            {\n                this.tray = trays[this.config.trayIndex];\n                this.updateCubeValue();\n                switch(this.tray[this.config.cubeName].alarm.value)\n                {\n                    case 0:\n                        this.alarmButton.src=\"/img/greenLight.png\";\n                        break;\n                    case 1:\n                        this.alarmButton.src=\"/img/blueLight.png\";\n                        break;\n                    case 2:\n                        this.alarmButton.src=\"/img/yellowLight.png\";\n                        break;\n                    case 3:\n                        this.alarmButton.src=\"/img/purpleLight.png\";\n                        break;\n                    case 4:\n                        this.alarmButton.src=\"/img/redLight.png\";\n                        break;\n                    default:\n                        this.alarmButton.src=\"/img/greyLight.png\";\n                        break;\n                    \n                }\n            }\n            changeAlarmConfig()\n            {\n                this.card.app.alarmLimitDialog.editAlarmConfig(this.config.cubeName, this.tray);\n            }\n\n        }",
        "output": "str",
        "x": 1110,
        "y": 80,
        "wires": [
            [
                "418f095f757062ea"
            ]
        ]
    },
    {
        "id": "19e845b708d1807f",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "alarmLimitDialog",
        "field": "payload.alarmLimitDialog",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// alarmLimitDialog\n        class AlarmLimitDialog\n        {\n            constructor(app)\n            {\n                this.app = app;\n            }\n            onDocumentReady(cardContainerId)\n            {\n                this.cardContainer = document.getElementById(cardContainerId);\n                \n                let limitName = [\"LOLO\", \"LOW\", \"HIGH\", \"HIHI\", \"Name\", \"Phone\"];\n                this.limitInput = [];\n                \n                let limitTable = document.createElement('table');\n                limitTable.setAttribute('width', '100%');\n\n                for (let ii = 0; ii < 6; ++ii)\n                {\n                    let limitSpan  = document.createElement('span');\n                    limitSpan.setAttribute('class', 'alarmLimit-label-text');\n                    limitSpan.innerHTML = limitName[ii];\n                    \n                    let limitSpanTd = document.createElement('td');\n                    limitSpanTd.setAttribute('width', '50%');\n                    limitSpanTd.setAttribute('align', 'left');\n                    limitSpanTd.appendChild(limitSpan);\n    \n                    this.limitInput[ii] = document.createElement('input');\n                    this.limitInput[ii].setAttribute('class', 'alarmLimit-input-text');\n                    this.limitInput[ii].setAttribute('type', 'text');\n                    this.limitInput[ii].setAttribute('value', '0');\n\n                    let limitInputTd = document.createElement('td');\n                    limitInputTd.setAttribute('width', '50%');\n                    limitInputTd.setAttribute('align', 'right');\n                    limitInputTd.appendChild(this.limitInput[ii]);\n                    \n                    let limitTr = document.createElement('tr');\n                    limitTr.appendChild(limitSpanTd);\n                    limitTr.appendChild(limitInputTd);\n                    \n                    limitTable.appendChild(limitTr);\n                }\n                let holdingTable = document.createElement('table');\n                holdingTable.setAttribute('width', '100%');\n                let holdingTableTr1 = document.createElement('tr');\n                let holdingTableTr2 = document.createElement('tr');\n                let holdingTableTd1 = document.createElement('td');\n                let holdingTableTd2 = document.createElement('td');\n                holdingTableTr1.appendChild(holdingTableTd1);\n                holdingTableTr2.appendChild(holdingTableTd2);\n                holdingTable.appendChild(holdingTableTr1);\n                holdingTable.appendChild(holdingTableTr2);\n                holdingTableTd1.appendChild(limitTable);\n                \n                let buttonTable = document.createElement('table');\n                buttonTable.setAttribute('width', '100%');\n                let buttonTableTr1 = document.createElement('tr');\n                let buttonTableTd1 = document.createElement('td');\n                let buttonTableTd2 = document.createElement('td');\n                buttonTableTd1.setAttribute('width', '50%');\n                buttonTableTd1.setAttribute('align', 'center');\n                buttonTableTd1.setAttribute('style', 'padding-top:20px;');\n                buttonTableTd2.setAttribute('width', '50%');\n                buttonTableTd2.setAttribute('style', 'padding-top:20px;');\n                buttonTableTd2.setAttribute('align', 'center');\n                buttonTableTr1.appendChild(buttonTableTd1);\n                buttonTableTr1.appendChild(buttonTableTd2);\n                buttonTable.appendChild(buttonTableTr1);\n                holdingTable.appendChild(buttonTable);\n                \n                this.setButton = document.createElement('button');\n                this.setButton.setAttribute('class', 'btn alarmLimit-button');\n                this.setButton.innerHTML = 'Set';\n                this.setButton.onclick = event => {this.changeLimits()};\n                buttonTableTd1.appendChild(this.setButton);\n\n                this.cancelButton = document.createElement('button');\n                this.cancelButton.setAttribute('class', 'btn alarmLimit-button');\n                this.cancelButton.innerHTML = 'Cancel';\n                this.cancelButton.onclick = event => {this.cancel()};\n                buttonTableTd2.appendChild(this.cancelButton);\n                \n                let limitCardBody = document.createElement('div');\n                limitCardBody.setAttribute('class', 'alarmLimit-card-body');\n                limitCardBody.appendChild(limitTable);\n                \n                this.cardTitle = document.createElement('p');\n                this.cardTitle.setAttribute('class', 'alarmLimit-card-title');\n                this.cardTitle.innerHTML = \"Cube\";\n                \n                this.limitCard = document.createElement('div');\n                this.limitCard.setAttribute('class', 'dialog-modal-content card alarmLimit-card');\n                this.limitCard.appendChild(this.cardTitle);\n                this.limitCard.appendChild(limitCardBody);\n                this.limitCard.appendChild(holdingTable);\n\n                this.cardContainer.appendChild(this.limitCard);\n            }\n            showAlarmConfig(show)\n            {\n                if (show)\n                {\n                    this.cardContainer.style.display = \"block\";\n                    this.limitCard.style.display = \"block\";\n                }\n                else\n                {\n                    this.cardContainer.style.display = \"none\";\n                }\n            }\n            cancel()\n            {\n                this.cardContainer.style.display = \"none\";\n            }\n            changeLimits()\n            {\n                for (let ii = 0; ii < 4; ++ii) \n                {\n                    if (isNaN(this.limitInput[ii].value) )\n                    {\n                        this.cardContainer.style.display = \"none\";\n                        return;\n                    }\n                }\n                this.tray[this.cubeName].alarm.limits.lolo = Number(this.limitInput[0].value);\n                this.tray[this.cubeName].alarm.limits.low  = Number(this.limitInput[1].value);\n                this.tray[this.cubeName].alarm.limits.high = Number(this.limitInput[2].value);\n                this.tray[this.cubeName].alarm.limits.hihi = Number(this.limitInput[3].value);\n                this.tray[this.cubeName].alarm.notify.name = this.limitInput[4].value;\n                this.tray[this.cubeName].alarm.notify.number = this.limitInput[5].value;\n                let configInfo = \n                {\n                    cube : this.cubeName,\n                    limits: this.tray[this.cubeName].alarm.limits,\n                    notify: this.tray[this.cubeName].alarm.notify\n                };\n                this.updateTrayConfig(configInfo);\n                this.cardContainer.style.display = \"none\";\n            }\n            editAlarmConfig(cubeName, tray)\n            {\n                this.cubeName = cubeName;\n                this.tray = tray;\n                this.cardTitle.innerHTML = this.tray.type + \".\" + this.tray.name + \".\" + this.cubeName;\n                this.limitInput[0].value = this.tray[this.cubeName].alarm.limits.lolo.toString();\n                this.limitInput[1].value = this.tray[this.cubeName].alarm.limits.low.toString();\n                this.limitInput[2].value = this.tray[this.cubeName].alarm.limits.high.toString();\n                this.limitInput[3].value = this.tray[this.cubeName].alarm.limits.hihi.toString();\n                this.limitInput[4].value = this.tray[this.cubeName].alarm.notify.name;\n                this.limitInput[5].value = this.tray[this.cubeName].alarm.notify.number;\n                this.showAlarmConfig(true);\n\n            }\n            updateTrayConfig(configInfo)\n            {\n                let actionMsg = \n                {\n                    topic   : this.app.box + '/' +  this.tray.type + '/' +  this.tray.name + '/setting/config',\n                    payload : configInfo\n                };\n                this.app.sendActionMsg('config','setting',actionMsg);\n            }\n        }",
        "output": "str",
        "x": 830,
        "y": 160,
        "wires": [
            [
                "215e92ef1962458f"
            ]
        ]
    },
    {
        "id": "d129ed90bcad3114",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "cubeRowCard",
        "field": "payload.cubeRowCard",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//cubeRowCard\n        class CubeRowCard \n        {\n            constructor(app, config)\n            {\n                this.app = app;\n                this.config = config;\n                this.cubeRows = [];\n                for (let icube = 0; icube < this.config.cubeRows.length; ++icube)\n                {\n                    let cubeRow = new (dict.get(this.config.cubeRows[icube].type))(this, this.config.cubeRows[icube].config);\n                    this.cubeRows.push(cubeRow);\n                }\n            }\n            onDocumentReady()\n            {\n                let containerRowDiv = document.createElement('div');\n                containerRowDiv.setAttribute('class', 'row cubeRowCard-containerRow');\n                document.getElementById('appContent').appendChild(containerRowDiv);\n                \n                let containerColDiv = document.createElement('div');\n                containerColDiv.setAttribute('class', 'col-md-12');\n                containerColDiv.setAttribute('align', 'center');\n                containerRowDiv.appendChild(containerColDiv);\n                \n                let cardDiv = document.createElement('div');\n                cardDiv.setAttribute('class', 'card cubeRowCard');\n                containerColDiv.appendChild(cardDiv);\n\n                let titleTable = document.createElement('table');\n                titleTable.setAttribute('width', '100%');\n                let titleRow  = document.createElement('tr');\n                let titleCol  = document.createElement('td');\n                titleCol.setAttribute('width', '85%');\n                titleCol.setAttribute('align', 'left');\n                let titleSpan  = document.createElement('span');\n                titleSpan.setAttribute('class', 'cubeRowCard-title');\n                titleSpan.innerHTML = this.config.title;\n                titleCol.appendChild(titleSpan);\n                titleRow.appendChild(titleCol);\n                let buttonCol  = document.createElement('td');\n                buttonCol.setAttribute('width', '15%');\n\n                this.displayButton = document.createElement('button');\n                this.displayButton.setAttribute('class', 'btn btn-block cubeRowCard-title-button');\n                this.displayButton.innerHTML = '-';\n                this.displayButton.onclick = event => {this.toggle()};\n                buttonCol.appendChild(this.displayButton);\n                titleRow.appendChild(buttonCol);\n\n                this.cardBodyDiv = document.createElement('div');\n                this.cardBodyDiv.setAttribute('class', 'cubeRowCard-body');\n                this.cardBodyDiv.setAttribute('align', 'center');\n                let cardBodyTable = document.createElement('table');\n                cardBodyTable.setAttribute('width', '100%');\n                \n                for (let ic = 0; ic < this.cubeRows.length; ++ic)\n                {\n                    let cubeRowRow =  document.createElement('tr');\n                    let cubeRowCol  = document.createElement('td');\n                    cubeRowCol.setAttribute('width', '100%');\n                    this.cubeRows[ic].onDocumentReady(cubeRowCol);\n                    cubeRowRow.appendChild(cubeRowCol);\n                    cardBodyTable.appendChild(cubeRowRow);\n                }\n                this.cardBodyDiv.appendChild(cardBodyTable);\n\n                titleTable.appendChild(titleRow);\n                cardDiv.appendChild(titleTable);\n                cardDiv.appendChild(this.cardBodyDiv);\n                if (this.config.displayOnOpen)\n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                }\n                else\n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n            }\n            trayUpdate(trays)\n            {\n                for (let ic = 0; ic < this.cubeRows.length; ++ic)\n                {\n                    this.cubeRows[ic].trayUpdate(trays);\n                }\n            }\n            toggle()\n            {\n                if (this.cardBodyDiv.style.display === \"none\") \n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                } \n                else \n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                \n            }\n\n         }\n",
        "output": "str",
        "x": 820,
        "y": 400,
        "wires": [
            [
                "83a95f24de3b0a6d"
            ]
        ]
    },
    {
        "id": "215e92ef1962458f",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "okCancelDialog",
        "field": "payload.okCancelDialog",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// okCancelDialog\n        class OkCancelDialog\n        {\n            constructor(app, title, type) //type 0 message, 1 ok, 2 ok-cancel\n            {\n                this.app = app;\n                this.callback = null;\n                this.title = title;\n                this.type = type;\n            }\n            onDocumentReady(cardContainerId)\n            {\n                \n                let holdingTable = document.createElement('table');\n                holdingTable.setAttribute('width', '100%');\n                let holdingTableTr1 = document.createElement('tr');\n                let holdingTableTd1 = document.createElement('td');\n                holdingTableTd1.setAttribute('width', '100%');\n                holdingTableTr1.appendChild(holdingTableTd1);\n                holdingTable.appendChild(holdingTableTr1);\n\n                this.messageSpan  = document.createElement('span');\n                this.messageSpan.setAttribute('class', 'okCancelCard-text');\n                this.messageSpan.innerHTML = '';\n                holdingTableTd1.appendChild(this.messageSpan);\n                \n                if (this.type  > 0)\n                {\n                    let holdingTableTr2 = document.createElement('tr');\n                    let holdingTableTd2 = document.createElement('td');\n                    holdingTableTd2.setAttribute('width', '100%');\n                    holdingTableTr2.appendChild(holdingTableTd2);\n                    holdingTable.appendChild(holdingTableTr2);\n    \n                    let buttonTable = document.createElement('table');\n                    buttonTable.setAttribute('width', '100%');\n                    let buttonTableTr1 = document.createElement('tr');\n                    let buttonTableTd1 = document.createElement('td');\n                    let buttonWidth = '50%';\n                    if (this.type == 1) buttonWidth = '100%';\n                    buttonTableTd1.setAttribute('width', buttonWidth);\n                    buttonTableTd1.setAttribute('align', 'center');\n                    buttonTableTd1.setAttribute('style', 'padding-top:20px;');\n                    buttonTableTr1.appendChild(buttonTableTd1);\n                    buttonTable.appendChild(buttonTableTr1);\n                    holdingTableTd2.appendChild(buttonTable);\n    \n                    let setButton = document.createElement('button');\n                    setButton.setAttribute('class', 'btn okCancelCard-button');\n                    setButton.innerHTML = 'Ok';\n                    setButton.onclick = event => {this.okButtonPressed(true)};\n                    buttonTableTd1.appendChild(setButton);\n    \n                    if (this.type == 2)\n                    {\n                        let buttonTableTd2 = document.createElement('td');\n                        buttonTableTd2.setAttribute('width', '50%');\n                        buttonTableTd2.setAttribute('style', 'padding-top:20px;');\n                        buttonTableTd2.setAttribute('align', 'center');\n                        buttonTableTr1.appendChild(buttonTableTd2);\n    \n                        let cancelButton = document.createElement('button');\n                        cancelButton.setAttribute('class', 'btn okCancelCard-button');\n                        cancelButton.innerHTML = 'Cancel';\n                        cancelButton.onclick = event => {this.okButtonPressed(false)};\n                        buttonTableTd2.appendChild(cancelButton);\n                    }\n                }\n\n                let cardTitle = document.createElement('p');\n                cardTitle.setAttribute('class', 'okCancelCard-title');\n                cardTitle.innerHTML = this.title;\n                \n                let cardBody = document.createElement('div');\n                cardBody.setAttribute('class', 'okCancelCard-body');\n                cardBody.appendChild(holdingTable);\n\n                let card = document.createElement('div');\n                card.setAttribute('class', 'dialog-modal-content card okCancelCard');\n                card.appendChild(cardTitle);\n                card.appendChild(cardBody);\n\n                this.cardContainer = document.getElementById(cardContainerId);\n                this.cardContainer.appendChild(card);\n            }\n            showDialog(message, callback)\n            {\n                this.messageSpan.innerHTML = message;\n                this.callback = callback;\n                this.cardContainer.style.display = \"block\";\n            }\n            closeDialog()\n            {\n                this.cardContainer.style.display = \"none\";\n            }\n            okButtonPressed(okchoice)\n            {\n                this.cardContainer.style.display = \"none\";\n                this.callback(okchoice);\n            }\n        }",
        "output": "str",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "bfc12ff5080d5408"
            ]
        ]
    },
    {
        "id": "c397f4613dec0684",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "dictionary",
        "field": "payload.dictionary",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// dictionary\n        const dict = new Map([\n            ['NavBar',              NavBar              ],\n            ['CubeRowCard',         CubeRowCard         ],\n            ['OnOffSetCube',        OnOffSetCube        ],\n            ['NumberSetCube',       NumberSetCube       ],\n            ['TextSetCube',         TextSetCube         ],\n            ['NumberReadCube',      NumberReadCube      ],\n            ['TimeStampReadCube',   TimeStampReadCube   ],\n            ['TextReadCube',        TextReadCube        ],\n            ['ImageReadCube',       ImageReadCube       ],\n            ['LabelReadCube',       LabelReadCube       ],\n            ['StateChoiceCube',     StateChoiceCube     ],\n            ['DropChoiceCube',      DropChoiceCube      ],\n            ['GaugeCube',           GaugeCube           ],\n            ['HbarCube',            HbarCube            ],\n            ['ArchivePlotCard',     ArchivePlotCard     ],\n            ['TimePlotCard',        TimePlotCard        ],\n            ['VectorPlotCard',      VectorPlotCard      ],\n            ['IframeCard',          IframeCard          ],\n            ['UserCard',            UserCard            ]]);\n",
        "output": "str",
        "x": 1360,
        "y": 280,
        "wires": [
            [
                "b1e1a1fcc7d8bcec"
            ]
        ]
    },
    {
        "id": "b1e1a1fcc7d8bcec",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "init",
        "field": "payload.init",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// init\n        let app = new CubeControlApp(JSON.parse('{{{payload.urlInput}}}'), JSON.parse('{{{payload.config}}}') , JSON.parse('{{{payload.userID}}}'));\n\n        docReady(function() \n        {\n            app.docReady();\n        });\n        function docReady(fn) \n        {\n            // see if DOM is already available\n            if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n                // call on next available tick\n                setTimeout(fn, 1);\n            } else {\n                document.addEventListener(\"DOMContentLoaded\", fn);\n            }\n        }            \n//Finished Init App",
        "output": "str",
        "x": 1350,
        "y": 320,
        "wires": [
            [
                "0a86ebd27d99d1a6"
            ]
        ]
    },
    {
        "id": "9014c7a9a5d27c4b",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "appContent",
        "field": "payload.appContent",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div id=\"appContent\" width=\"100%\"></div>\n    <div id=\"alarmLimitCardContainer\" class=\"row dialog-modal\"></div>\n    <div id=\"messageCardContainer\" class=\"row dialog-modal\"></div>\n    <div id=\"acknowledgeCardContainer\" class=\"row dialog-modal\"></div>\n    <div id=\"okCancelCardContainer\" class=\"row dialog-modal\"></div>",
        "output": "str",
        "x": 1370,
        "y": 400,
        "wires": [
            [
                "6457136c1f664692"
            ]
        ]
    },
    {
        "id": "d5219c027ea403df",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "stateChoiceCube",
        "field": "payload.stateChoiceCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//stateChoiceCube\n        class StateChoiceCube \n        {\n            constructor(card, config)\n            {\n                this.card = card;\n                this.config = JSON.parse(JSON.stringify(config));\n                this.stateButtons = [];\n            }\n            toggle(newState)\n            {\n                if (this.tray[this.config.cubeName].value != newState)\n                {\n                    let payload = {'cube': this.config.cubeName, 'value':newState};\n                    let actionMsg = \n                        {\n                            topic   : this.card.app.box + '/' +  this.tray.type + '/' +  this.tray.name + '/setting/setting',\n                            payload : payload\n                        };\n                    this.card.app.sendActionMsg('setting','setting',actionMsg);\n                }\n            }\n            updateCubeValue()\n            {\n                for (let ib = 0; ib < this.config.states.length; ++ib)\n                {\n                    if (this.tray[this.config.cubeName].value == this.config.states[ib].value)\n                    {\n                        this.stateButtons[ib].setAttribute('style','background:' + this.config.states[ib].color + ';color: black;');\n                    }\n                    else\n                    {\n                        this.stateButtons[ib].setAttribute('style','background:grey;color: black;');\n\n                    }\n                }\n            }\n            onDocumentReady(parentElement)\n            {\n                let inLineTable = document.createElement('table');\n                inLineTable.setAttribute('width', '100%');\n                let inLineRow  = document.createElement('tr');\n                let statesColumn  = document.createElement('td');\n                statesColumn.setAttribute('class', 'stateChoiceCube-stateColumn-column');\n                inLineRow.appendChild(statesColumn);\n                let stateTable = document.createElement('table');\n                stateTable.setAttribute('width', '100%');\n                statesColumn.appendChild(stateTable);\n                let r1  = document.createElement('tr');\n                stateTable.appendChild(r1);\n                let r1c1  = document.createElement('td');\n                r1c1.setAttribute('width', '100%');\n                r1c1.setAttribute('style','padding-bottom:20px;');\n                r1.appendChild(r1c1);\n                let labelSpan  = document.createElement('span');\n                if ('cubeLabel' in this.config)\n                {\n                    labelSpan.innerHTML = this.config.cubeLabel;\n                }\n                else\n                {\n                    labelSpan.innerHTML = this.card.app.trays[this.config.trayIndex].type + \".\" + this.card.app.trays[this.config.trayIndex].name + \".\" + this.config.cubeName;\n                }\n                r1c1.appendChild(labelSpan);\n                for (let ib = 0; ib < this.config.states.length; ++ib)\n                {\n                    let stateRow = document.createElement('tr');\n                    stateTable.appendChild(stateRow);\n                    let stateCol = document.createElement('td');\n                    stateCol.setAttribute('width', '100%');\n                    stateCol.setAttribute('style','padding-bottom:20px;');\n                    stateRow.appendChild(stateCol);\n                    let stateButton = document.createElement('button');\n                    stateButton.setAttribute('class', 'btn btn-block stateChoiceCube-button');\n                    stateButton.setAttribute('style','background:grey;color: black;');\n                    stateButton.innerHTML = this.config.states[ib].text;\n                    stateButton.onclick = event => {this.toggle(this.config.states[ib].value)};\n                    this.stateButtons.push(stateButton);\n                    stateCol.appendChild(stateButton);\n                    \n                }\n                let alarmColumn  = document.createElement('td');\n                alarmColumn.setAttribute('class', 'stateChoiceCube-alarmConfig-column');\n                this.alarmButton = document.createElement('input');\n                this.alarmButton.setAttribute('type', 'image');\n                this.alarmButton.setAttribute('src', '/img/greenLight.png');\n                this.alarmButton.setAttribute('class', 'stateChoiceCube-alarmConfig-button');\n                this.alarmButton.onclick = event => {this.changeAlarmConfig()};\n                alarmColumn.appendChild(this.alarmButton);\n                inLineRow.appendChild(alarmColumn);\n\n                inLineTable.appendChild(inLineRow);\n                parentElement.appendChild(inLineTable);\n            }\n\n            trayUpdate(trays)\n            {\n                this.tray = trays[this.config.trayIndex];\n                this.updateCubeValue();\n                switch(this.tray[this.config.cubeName].alarm.value)\n                {\n                    case 0:\n                        this.alarmButton.src=\"/img/greenLight.png\";\n                        break;\n                    case 1:\n                        this.alarmButton.src=\"/img/blueLight.png\";\n                        break;\n                    case 2:\n                        this.alarmButton.src=\"/img/yellowLight.png\";\n                        break;\n                    case 3:\n                        this.alarmButton.src=\"/img/purpleLight.png\";\n                        break;\n                    case 4:\n                        this.alarmButton.src=\"/img/redLight.png\";\n                        break;\n                    default:\n                        this.alarmButton.src=\"/img/greyLight.png\";\n                        break;\n                    \n                }\n            }\n            changeAlarmConfig()\n            {\n                this.card.app.alarmLimitDialog.editAlarmConfig(this.config.cubeName, this.tray);\n            }\n\n        }",
        "output": "str",
        "x": 1090,
        "y": 320,
        "wires": [
            [
                "f962411e6017d6af"
            ]
        ]
    },
    {
        "id": "9ff3df490651f2aa",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "imageReadCube",
        "field": "payload.imageReadCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//ImageRead\n        class ImageReadCube extends CubeRowParameterView\n        {\n            addComponents(widgetColumns)\n            {\n                this.image = document.createElement('img');\n                this.image.setAttribute('src', this.config.images[0]);\n                this.image.setAttribute('class', 'imageReadCube');\n                widgetColumns[0].appendChild(this.image);\n            }\n            updateCubeValue()\n            {\n                for (let ival = 0; ival < this.config.values.length; ++ival)\n                {\n                    if (this.tray[this.config.cubeName].value == this.config.values[ival])\n                    {\n                        this.image.src = this.config.images[ival];\n                    }\n                }\n            }\n        }",
        "output": "str",
        "x": 1090,
        "y": 200,
        "wires": [
            [
                "5c26e6f2752ddd2d"
            ]
        ]
    },
    {
        "id": "bfc12ff5080d5408",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "archivePlotCard",
        "field": "payload.archivePlotCard",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//archivePlotCard\n        class ArchivePlotCard \n        {\n            constructor(app, config)\n            {\n                this.app = app;\n                this.config = config;\n                this.archiveButtonList = [];\n                this.archiveRequestList = [];\n                this.archiveList = [];\n                this.buttonPressed = -1;\n                this.archivePlotTraces = [];\n            }\n            onDocumentReady()\n            {\n                let containerRowDiv = document.createElement('div');\n                containerRowDiv.setAttribute('class', 'row archivePlotCard-containerRow');\n                document.getElementById('appContent').appendChild(containerRowDiv);\n                \n                let containerColDiv = document.createElement('div');\n                containerColDiv.setAttribute('class', 'col-md-12');\n                containerColDiv.setAttribute('align', 'center');\n                containerRowDiv.appendChild(containerColDiv);\n\n                let cardDiv = document.createElement('div');\n                cardDiv.setAttribute('class', 'card archivePlotCard');\n                containerColDiv.appendChild(cardDiv);\n\n                let titleTable = document.createElement('table');\n                titleTable.setAttribute('width', '100%');\n                let titleRow  = document.createElement('tr');\n                let titleCol  = document.createElement('td');\n                titleCol.setAttribute('width', '85%');\n                titleCol.setAttribute('align', 'left');\n                let titleSpan  = document.createElement('span');\n                titleSpan.setAttribute('class', 'archivePlotCard-title');\n                titleSpan.innerHTML = this.config.title;\n                titleCol.appendChild(titleSpan);\n                titleRow.appendChild(titleCol);\n                let buttonCol  = document.createElement('td');\n                buttonCol.setAttribute('width', '15%');\n\n                this.displayButton = document.createElement('button');\n                this.displayButton.setAttribute('class', 'btn btn-block archivePlotCard-title-button');\n                this.displayButton.innerHTML = '-';\n                this.displayButton.onclick = event => {this.toggle()};\n                buttonCol.appendChild(this.displayButton);\n                titleRow.appendChild(buttonCol);\n\n                this.cardBodyDiv = document.createElement('div');\n                this.cardBodyDiv.setAttribute('class', 'archivePlotCard-body');\n                this.cardBodyDiv.setAttribute('align', 'center');\n                let cardBodyTable = document.createElement('table');\n                cardBodyTable.setAttribute('width', '100%');\n                let cardBodyR1 = document.createElement('tr');\n                cardBodyTable.appendChild(cardBodyR1);\n                let cardBodyR1C1 = document.createElement('td');\n                cardBodyR1C1.setAttribute('width', '100%');\n                cardBodyR1.appendChild(cardBodyR1C1);\n\n                let archiveTable = document.createElement('table');\n                archiveTable.setAttribute('width', '100%');\n                cardBodyR1C1.appendChild(archiveTable);\n                let archiveTableR1 = document.createElement('tr');\n                archiveTable.appendChild(archiveTableR1);\n                for (let ib = 0; ib < 6; ++ib)\n                {\n                    let atcol =  document.createElement('td');\n                    atcol.setAttribute('width', '14%');\n                    atcol.setAttribute('align', 'center');\n                    archiveTableR1.appendChild(atcol);\n                    let atbut = document.createElement('button');\n                    atbut.setAttribute('class', 'btn btn-block archive-button');\n                    atbut.innerHTML = this.config.buttonNumbers[ib].toString();\n                    atbut.onclick = event => {this.buttonClicked(ib)};\n                    atcol.appendChild(atbut);\n                    this.archiveButtonList.push(atbut);\n                }\n                let atTimecol =  document.createElement('td');\n                atTimecol.setAttribute('width', '16%');\n                atTimecol.setAttribute('align', 'center');\n                archiveTableR1.appendChild(atTimecol);\n                let atTimeSpan =  document.createElement('span');\n                atTimeSpan.setAttribute('class', 'archiveCard-timeType-span');\n                atTimecol.appendChild(atTimeSpan);\n                if (this.config.timeUnit == \"hour\")\n                {\n                    atTimeSpan.innerHTML = \"Hours\";\n                } \n                else \n                {\n                    if (this.config.timeUnit == \"day\")\n                    {\n                        atTimeSpan.innerHTML = \"Days\";\n                    }\n                    else\n                    {\n                        atTimeSpan.innerHTML = \"?\";\n                    }\n                }\n\n                let cardBodyR2 = document.createElement('tr');\n                cardBodyTable.appendChild(cardBodyR2);\n                let cardBodyR2C1 = document.createElement('td');\n                cardBodyR2C1.setAttribute('width', '100%');\n                cardBodyR2C1.setAttribute('align', 'center');\n                cardBodyR2.appendChild(cardBodyR2C1);\n                this.archiveChartDiv = document.createElement('div');\n                this.archiveChartDiv.setAttribute('width', '100%');\n                this.archiveChartDiv.setAttribute('id', 'archiveChart');\n                this.archiveChartDiv.setAttribute('style', 'padding-bottom:20px;');\n                cardBodyR2C1.appendChild(this.archiveChartDiv);\n\n                this.cardBodyDiv.appendChild(cardBodyTable);\n\n                titleTable.appendChild(titleRow);\n                cardDiv.appendChild(titleTable);\n                cardDiv.appendChild(this.cardBodyDiv);\n \n                if (this.config.displayOnOpen)\n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                }\n                else\n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                window.addEventListener(\"resize\", event => {this.resize()});\n            }\n            buttonClicked(button)\n            {\n                if (this.buttonPressed >= 0)\n                {\n                    this.archiveButtonList[this.buttonPressed].classList.remove('archive-button-pressed');\n                    this.archiveButtonList[this.buttonPressed].classList.add('archive-button');\n                }\n                this.buttonPressed = button;\n\n                for (let ib = 0; ib < 6; ++ib)  this.archiveButtonList[ib].disabled = true;\n                this.archiveButtonList[button].classList.remove('archive-button');\n                this.archiveButtonList[button].classList.add('archive-button-pressed');\n\n                this.archiveRequestList = [];\n                this.archiveList = [];\n                let stopDate = new Date().getTime();\n                let startDate = this.config.buttonNumbers[button] * 3600000;\n                if (this.config.timeUnit == 'day') startDate = 24 * startDate; \n                startDate = stopDate - startDate;\n                this.archiveRequestList = [];\n                this.archiveList = [];\n\n                for (let itray = 0; itray < this.app.trays.length; ++itray)\n                {\n                    let cubeNameList = [];\n                    for (let icube = 0; icube < this.config.cubeList[itray].length; ++icube) \n                        cubeNameList.push(this.config.cubeList[itray][icube].name);\n                    this.archiveRequestList[itray] = \n                    {\n                        type : this.app.trays[itray].type,\n                        name : this.app.trays[itray].name, \n//need to test what happens when cubeList is empty\n                        cube : cubeNameList,\n                        startDate: startDate, \n                        stopDate: stopDate,\n                    };\n                    \n                }\n                this.getArchiveValues();\n            }\n            getArchiveValues()\n            {\n                let actionMsg = \n                {\n                    tray      : this.archiveRequestList[0]\n                };\n                this.app.sendActionMsg('readDatabase','readDatabase', actionMsg);\n                this.archiveRequestList.shift();\n                return;\n            }\n            putArchiveValues(data)\n            {\n                this.archiveList.push(data);\n                if (this.archiveRequestList.length > 0)\n                {\n                    this.getArchiveValues();\n                }\n                else\n                {\n                    this.plotArchive();\n                }\n            }\n            toggle()\n            {\n                \n                if (this.cardBodyDiv.style.display === \"none\") \n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                    if (this.archivePlotTraces.length > 0)\n                    {\n                        this.config.plotlyLayout.width =  (this.cardBodyDiv.offsetWidth - 40).toString();\n                        Plotly.newPlot('archiveChart', this.archivePlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                    }\n                } \n                else \n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                \n            }\n            resize()\n            {\n                if ((this.cardBodyDiv.style.display != \"none\") && (this.archivePlotTraces.length > 0) )\n                {\n                    this.config.plotlyLayout.width =  (this.cardBodyDiv.offsetWidth - 40).toString();\n                    Plotly.newPlot('archiveChart', this.archivePlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                }\n            }\n            plotArchive()\n            {\n                this.archivePlotTraces = [];\n                for (let itray = 0; itray < this.archiveList.length; ++itray)\n                {\n                    if (this.archiveList[itray].trace != null)\n                    {\n                        for (let icube = 0; icube < this.archiveList[itray].tray.cube.length; ++icube)\n                        {\n                            let traceType = 'scatter';\n                            if (\"type\" in this.config.cubeList[itray][icube]) \n                            {\n                                traceType = this.config.cubeList[itray][icube].type;\n                            }\n                            let lineMode = 'lines';\n                            let markerSize = 12;\n                            if (\"mode\" in this.config.cubeList[itray][icube]) lineMode = this.config.cubeList[itray][icube].mode;\n                            if (\"size\" in this.config.cubeList[itray][icube]) markerSize = this.config.cubeList[itray][icube].size;\n                            let trace =\n                            {\n                                x: [],\n                                y: [],\n                                name: this.archiveList[itray].tray.type + '.' + this.archiveList[itray].tray.name + '.' + this.archiveList[itray].tray.cube[icube],\n                                yaxis: this.config.cubeList[itray][icube].yaxis,\n                                type: traceType,\n                                mode: lineMode,\n                                marker: { size: markerSize },\n                                line: { color: this.config.cubeList[itray][icube].color }\n                            };\n                            for (let ipt = 0; ipt < this.archiveList[itray].trace.length; ++ipt)\n                            {\n                                trace.x.push(this.archiveList[itray].trace[ipt].timeStamp);\n                                trace.y.push(this.archiveList[itray].trace[ipt][this.archiveList[itray].tray.cube[icube]]);\n                            }\n                            this.archivePlotTraces.push(trace);\n                        }\n                    }\n                }\n                if (this.archivePlotTraces.length > 0)\n                {\n                    this.config.plotlyLayout.width =  (this.cardBodyDiv.offsetWidth - 40).toString();\n                    Plotly.newPlot('archiveChart', this.archivePlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                }\n                for (let ib = 0; ib < 6; ++ib) \n                {\n                    this.archiveButtonList[ib].disabled = false;\n                }\n            }\n\n        }\n",
        "output": "str",
        "x": 820,
        "y": 240,
        "wires": [
            [
                "1d66fe75a002f9e6"
            ]
        ]
    },
    {
        "id": "1d66fe75a002f9e6",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "timePlotCard",
        "field": "payload.timePlotCard",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//timePlotCard\n        class TimePlotCard \n        {\n            constructor(app, config)\n            {\n                this.app = app;\n                this.config = config;\n            }\n            onDocumentReady()\n            {\n                let containerRowDiv = document.createElement('div');\n                containerRowDiv.setAttribute('class', 'row timePlotCard-containerRow');\n                document.getElementById('appContent').appendChild(containerRowDiv);\n                \n                let containerColDiv = document.createElement('div');\n                containerColDiv.setAttribute('class', 'col-md-12');\n                containerColDiv.setAttribute('align', 'center');\n                containerRowDiv.appendChild(containerColDiv);\n\n                let cardDiv = document.createElement('div');\n                cardDiv.setAttribute('class', 'card timePlotCard');\n                containerColDiv.appendChild(cardDiv);\n\n                let titleTable = document.createElement('table');\n                titleTable.setAttribute('width', '100%');\n                let titleRow  = document.createElement('tr');\n                let titleCol  = document.createElement('td');\n                titleCol.setAttribute('width', '85%');\n                titleCol.setAttribute('align', 'left');\n                let titleSpan  = document.createElement('span');\n                titleSpan.setAttribute('class', 'timePlotCard-title');\n                titleSpan.innerHTML = this.config.title;\n                titleCol.appendChild(titleSpan);\n                titleRow.appendChild(titleCol);\n                let buttonCol  = document.createElement('td');\n                buttonCol.setAttribute('width', '15%');\n\n                this.displayButton = document.createElement('button');\n                this.displayButton.setAttribute('class', 'btn btn-block timePlotCard-title-button');\n                this.displayButton.innerHTML = '-';\n                this.displayButton.onclick = event => {this.toggle()};\n                buttonCol.appendChild(this.displayButton);\n                titleRow.appendChild(buttonCol);\n\n                this.cardBodyDiv = document.createElement('div');\n                this.cardBodyDiv.setAttribute('class', 'timePlotCard-body');\n                this.cardBodyDiv.setAttribute('align', 'center');\n                let cardBodyTable = document.createElement('table');\n                cardBodyTable.setAttribute('width', '100%');\n\n                let cardBodyR1 = document.createElement('tr');\n                cardBodyTable.appendChild(cardBodyR1);\n                let cardBodyR1C1 = document.createElement('td');\n                cardBodyR1C1.setAttribute('width', '100%');\n                cardBodyR1.appendChild(cardBodyR1C1);\n                this.timePlotChartDiv = document.createElement('div');\n                this.timePlotChartDiv.setAttribute('width', '100%');\n                this.timePlotChartDiv.setAttribute('id', 'timePlotChart');\n                this.timePlotChartDiv.setAttribute('style', 'padding:20px;');\n                cardBodyR1C1.appendChild(this.timePlotChartDiv);\n\n                this.cardBodyDiv.appendChild(cardBodyTable);\n\n                titleTable.appendChild(titleRow);\n                cardDiv.appendChild(titleTable);\n                cardDiv.appendChild(this.cardBodyDiv);\n\n                if (this.config.displayOnOpen)\n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                }\n                else\n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                this.setupPlot();\n                window.addEventListener(\"resize\", event => {this.resize()});\n            }\n            toggle()\n            {\n                if (this.cardBodyDiv.style.display === \"none\") \n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                    if (this.timePlotTraces.length > 0)\n                    {\n                        this.config.plotlyLayout.width =  (this.cardBodyDiv.offsetWidth - 40).toString();\n                        Plotly.newPlot('timePlotChart', this.timePlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                    }\n                } \n                else \n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                \n            }\n            resize()\n            {\n                if ((this.cardBodyDiv.style.display != \"none\") && (this.timePlotTraces.length > 0) )\n                {\n                    this.config.plotlyLayout.width =  (this.cardBodyDiv.offsetWidth - 40).toString();\n                    Plotly.newPlot('timePlotChart', this.timePlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                }\n            }\n            setupPlot()\n            {\n                this.timePlotTraces = [];\n                for (let itray = 0; itray < this.config.cubeList.length; ++itray)\n                {\n                    for (let icube = 0; icube < this.config.cubeList[itray].length; ++icube)\n                    {\n                        let trace = \n                        {\n                            x: [],\n                            y: [],\n                            name:  this.app.trays[itray].type + '.' + this.app.trays[itray].name + '.' + this.config.cubeList[itray][icube].name,\n                            yaxis: this.config.cubeList[itray][icube].yaxis,\n                            type: 'scatter',\n                            mode: 'lines',\n                            line: {color: this.config.cubeList[itray][icube].color}\n                        };\n                        this.timePlotTraces.push(trace);\n                    }\n                }\n            }\n            addTracePointsToTimePlot()\n            {\n                let now = new Date().getTime();\n                let plotBeginning = now - this.config.timePlotLength;\n                let removeDone = false;\n                if (this.timePlotTraces.length < 1) return;\n                if (this.timePlotTraces[0].x.length < 1) removeDone = true;\n                while(!removeDone)\n                {\n                    if (this.timePlotTraces[0].x[0] < plotBeginning)\n                    {\n                        for (let ii = 0; ii < this.timePlotTraces.length; ++ii)\n                        {\n                            this.timePlotTraces[ii].x.shift();\n                            this.timePlotTraces[ii].y.shift();\n                        }\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                let itray = 0;\n                let icube = 0;\n                for (let ii = 0; ii < this.timePlotTraces.length; ++ii)\n                {\n                    while (this.config.cubeList[itray].length == 0) \n                    {\n                        ++itray;\n                        if (itray == this.config.cubeList.length) return;\n                    }\n                    this.timePlotTraces[ii].x.push(now);\n                    this.timePlotTraces[ii].y.push(this.app.trays[itray][this.config.cubeList[itray][icube].name].value);\n                    ++icube;\n                    if (icube >= this.config.cubeList[itray].length)\n                    {\n                        icube = 0;\n                        ++itray;\n                    }\n                }    \n                Plotly.newPlot('timePlotChart', this.timePlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                this.resize();\n            }\n        }\n",
        "output": "str",
        "x": 810,
        "y": 280,
        "wires": [
            [
                "eb4a741d322caed8"
            ]
        ]
    },
    {
        "id": "f962411e6017d6af",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "gaugeCube",
        "field": "payload.gaugeCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//gaugeCube\n        class GaugeCube \n        {\n            constructor(card, config)\n            {\n                this.card = card;\n                this.config = JSON.parse(JSON.stringify(config));\n                this.htmlId = 'gaugePlot' + Math.floor(Math.random() * 32768).toString();\n            }\n            onDocumentReady(parentElement)\n            {\n                let t1 = document.createElement('table');\n                parentElement.appendChild(t1);\n                t1.setAttribute('width', '100%');\n                let r1  = document.createElement('tr');\n                t1.appendChild(r1);\n                let r1c1  = document.createElement('td');\n                r1.appendChild(r1c1);\n                r1c1.setAttribute('width', '100%');\n                r1c1.setAttribute('align', 'center');\n                let labelSpan  = document.createElement('span');\n                labelSpan.setAttribute('class', 'gaugeCube-label');\n                if ('cubeLabel' in this.config)\n                {\n                    labelSpan.innerHTML = this.config.cubeLabel;\n                }\n                else\n                {\n                    labelSpan.innerHTML = this.card.app.trays[this.config.trayIndex].type + \".\" + this.card.app.trays[this.config.trayIndex].name + \".\" + this.config.cubeName;\n                }\n                r1c1.appendChild(labelSpan);\n                let r2  = document.createElement('tr');\n                t1.appendChild(r2);\n                let r2c1  = document.createElement('td');\n                r2.appendChild(r2c1);\n                let t2 = document.createElement('table');\n                r2c1.appendChild(t2);\n                t2.setAttribute('width', '100%');\n                let r3  = document.createElement('tr');\n                t2.appendChild(r3);\n                let r3c1  = document.createElement('td');\n                r3.appendChild(r3c1);\n                r3c1.setAttribute('class', 'gaugeCube-column');\n\n                this.gaugeDiv = document.createElement('div');\n                this.gaugeDiv.setAttribute('id', this.htmlId);\n                this.gaugeDiv.setAttribute('class', 'gaugeCube-div');\n                this.gaugeDiv.setAttribute('style', 'max-height: calc(' + (this.config.size / 2).toString() + 'px + 20px) !important;');\n\n                r3c1.appendChild(this.gaugeDiv);\n\n                let alarmColumn  = document.createElement('td');\n                alarmColumn.setAttribute('class', 'gaugeCube-alarmConfig-column');\n                this.alarmButton = document.createElement('input');\n                this.alarmButton.setAttribute('type', 'image');\n                this.alarmButton.setAttribute('src', '/img/greenLight.png');\n                this.alarmButton.setAttribute('class', 'gaugeCube-alarmConfig-button');\n                this.alarmButton.onclick = event => {this.changeAlarmConfig()};\n                alarmColumn.appendChild(this.alarmButton);\n\n                r3.appendChild(alarmColumn);\n            }\n\n            trayUpdate(trays)\n            {\n                this.tray = trays[this.config.trayIndex];\n                this.setGaugeWidget(this.tray[this.config.cubeName]);\n                switch(this.tray[this.config.cubeName].alarm.value)\n                {\n                    case 0:\n                        this.alarmButton.src=\"/img/greenLight.png\";\n                        break;\n                    case 1:\n                        this.alarmButton.src=\"/img/blueLight.png\";\n                        break;\n                    case 2:\n                        this.alarmButton.src=\"/img/yellowLight.png\";\n                        break;\n                    case 3:\n                        this.alarmButton.src=\"/img/purpleLight.png\";\n                        break;\n                    case 4:\n                        this.alarmButton.src=\"/img/redLight.png\";\n                        break;\n                    default:\n                        this.alarmButton.src=\"/img/greyLight.png\";\n                        break;\n                    \n                }\n            }\n            changeAlarmConfig()\n            {\n                this.card.app.alarmLimitDialog.editAlarmConfig(this.config.cubeName, this.tray);\n            }\n            setGaugeWidget(cubeObj)\n            {\n                let degrees = 180.0 * (cubeObj.alarm.limits.hihi - cubeObj.value) / (cubeObj.alarm.limits.hihi - cubeObj.alarm.limits.lolo);\n                if (degrees < 0.0 )   degrees = 0.0;\n                if (degrees > 180.0 ) degrees = 180.0;\n                // Trig to calc meter point\n                let radius = 0.50;\n                let radians = degrees * Math.PI / 180;\n                let x = radius * Math.cos(radians);\n                let y = radius * Math.sin(radians);\n                var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n                // Path: may have to change to create a better triangle\n                let mainPath = path1,\n                    pathX = String(x),\n                    space = ' ',\n                    pathY = String(y),\n                    pathEnd = ' Z';\n                let rotation = (180.0 * (cubeObj.alarm.limits.high - cubeObj.alarm.limits.lolo) / (cubeObj.alarm.limits.hihi - cubeObj.alarm.limits.lolo)) - 90.0;\n                let path = mainPath.concat(pathX,space,pathY,pathEnd);\n            \n                let valueColor = this.config.backgroundColor; \n                \n                if ( (cubeObj.alarm.limits.lolo <= cubeObj.value) && (cubeObj.value < cubeObj.alarm.limits.low) )\n                {\n                    valueColor = this.config.lowColor;\n                }\n                if ( (cubeObj.alarm.limits.low  <= cubeObj.value) && (cubeObj.value < cubeObj.alarm.limits.high) )\n                {\n                    valueColor = this.config.mediumColor;\n                }\n                if ( (cubeObj.alarm.limits.high <= cubeObj.value) && (cubeObj.value < cubeObj.alarm.limits.hihi) )\n                {\n                  valueColor = this.config.highColor;\n                }\n                if ( cubeObj.alarm.limits.hihi <= cubeObj.value)\n                {\n                    valueColor = this.config.highColor;\n                }\n\n                let data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        text: cubeObj.value.toString(),\n                        hoverinfo: 'text',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                cubeObj.alarm.limits.hihi - cubeObj.alarm.limits.high, \n                                cubeObj.alarm.limits.high - cubeObj.alarm.limits.low, \n                                cubeObj.alarm.limits.low  - cubeObj.alarm.limits.lolo, \n                                cubeObj.alarm.limits.hihi - cubeObj.alarm.limits.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                cubeObj.alarm.limits.high.toString() + '-' + cubeObj.alarm.limits.hihi.toString(), \n                                cubeObj.alarm.limits.low.toString()  + '-' + cubeObj.alarm.limits.high.toString(), \n                                cubeObj.alarm.limits.lolo.toString() + '-' + cubeObj.alarm.limits.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: this.config.labelColor, size:this.config.textsize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        this.config.highColor,\n                                        this.config.mediumColor,\n                                        this.config.lowColor, \n                                        this.config.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n                let layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: this.config.size,\n                    width: this.config.size,\n                    title: \n                        {\n                            text: cubeObj.value.toString() + ' ' + cubeObj.unit,\n                            font: {color: this.config.labelColor, size:this.config.textsize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:this.config.backgroundColor,\n                    paper_bgcolor:this.config.backgroundColor\n            \n                };\n\n                Plotly.newPlot(this.htmlId, data, layout, {'displayModeBar': false});\n            }\n        }",
        "output": "str",
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "f2433cc41035445d"
            ]
        ]
    },
    {
        "id": "f2433cc41035445d",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "hbarCube",
        "field": "payload.hbarCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//hbarCube\n        class HbarCube \n        {\n            constructor(card, config)\n            {\n                this.card = card;\n                this.config = JSON.parse(JSON.stringify(config));\n                this.htmlId = 'hbarPlot' + Math.floor(Math.random() * 32768).toString();\n            }\n            onDocumentReady(parentElement)\n            {\n                let t1 = document.createElement('table');\n                parentElement.appendChild(t1);\n                t1.setAttribute('width', '100%');\n                let r1  = document.createElement('tr');\n                t1.appendChild(r1);\n                let r1c1  = document.createElement('td');\n                r1.appendChild(r1c1);\n                r1c1.setAttribute('width', '100%');\n                r1c1.setAttribute('align', 'center');\n                let labelSpan  = document.createElement('span');\n                labelSpan.setAttribute('class', 'hbarCube-label');\n                if ('cubeLabel' in this.config)\n                {\n                    labelSpan.innerHTML = this.config.cubeLabel;\n                }\n                else\n                {\n                    labelSpan.innerHTML = this.card.app.trays[this.config.trayIndex].type + \".\" + this.card.app.trays[this.config.trayIndex].name + \".\" + this.config.cubeName;\n                }\n                r1c1.appendChild(labelSpan);\n                let r2  = document.createElement('tr');\n                t1.appendChild(r2);\n                let r2c1  = document.createElement('td');\n                r2.appendChild(r2c1);\n                let t2 = document.createElement('table');\n                r2c1.appendChild(t2);\n                t2.setAttribute('width', '100%');\n                let r3  = document.createElement('tr');\n                t2.appendChild(r3);\n                let r3c1  = document.createElement('td');\n                r3.appendChild(r3c1);\n                r3c1.setAttribute('class', 'hbarCube-column');\n\n                this.gaugeDiv = document.createElement('div');\n                this.gaugeDiv.setAttribute('id', this.htmlId);\n                this.gaugeDiv.setAttribute('class', 'hbarCube-div');\n                this.gaugeDiv.setAttribute('style', 'max-height: calc(' + (this.config.size / 2).toString() + 'px + 20px) !important;');\n\n                r3c1.appendChild(this.gaugeDiv);\n\n                let alarmColumn  = document.createElement('td');\n                alarmColumn.setAttribute('class', 'hbarCube-alarmConfig-column');\n                this.alarmButton = document.createElement('input');\n                this.alarmButton.setAttribute('type', 'image');\n                this.alarmButton.setAttribute('src', '/img/greenLight.png');\n                this.alarmButton.setAttribute('class', 'hbarCube-alarmConfig-button');\n                this.alarmButton.onclick = event => {this.changeAlarmConfig()};\n                alarmColumn.appendChild(this.alarmButton);\n\n                r3.appendChild(alarmColumn);\n            }\n\n            trayUpdate(trays)\n            {\n                this.tray = trays[this.config.trayIndex];\n                this.setHorzBarWidget(this.tray[this.config.cubeName]);\n                switch(this.tray[this.config.cubeName].alarm.value)\n                {\n                    case 0:\n                        this.alarmButton.src=\"/img/greenLight.png\";\n                        break;\n                    case 1:\n                        this.alarmButton.src=\"/img/blueLight.png\";\n                        break;\n                    case 2:\n                        this.alarmButton.src=\"/img/yellowLight.png\";\n                        break;\n                    case 3:\n                        this.alarmButton.src=\"/img/purpleLight.png\";\n                        break;\n                    case 4:\n                        this.alarmButton.src=\"/img/redLight.png\";\n                        break;\n                    default:\n                        this.alarmButton.src=\"/img/greyLight.png\";\n                        break;\n                    \n                }\n            }\n            changeAlarmConfig()\n            {\n                this.card.app.alarmLimitDialog.editAlarmConfig(this.config.cubeName, this.tray);\n            }\n            setHorzBarWidget(cubeObj)\n            {\n                let lowValue = 0;\n                let mediumValue = 0;\n                let highValue = 0;\n            \n                let lowColor = this.config.backgroundColor;\n                let mediumColor = this.config.backgroundColor;\n                let highColor = this.config.backgroundColor;\n                let valueColor = this.config.backgroundColor; \n                \n                if ( cubeObj.value <= cubeObj.alarm.limits.lolo)\n                {\n                    lowValue = cubeObj.alarm.limits.lolo;\n                    lowColor = this.config.lowColor;\n                    valueColor = lowColor;\n                }\n                if ( (cubeObj.alarm.limits.lolo <= cubeObj.value) && (cubeObj.value < cubeObj.alarm.limits.low) )\n                {\n                    lowValue = cubeObj.value;\n                    lowColor = this.config.lowColor;\n                    valueColor = lowColor;\n                }\n                if ( (cubeObj.alarm.limits.low  <= cubeObj.value) && (cubeObj.value < cubeObj.alarm.limits.high) )\n                {\n                    lowValue = cubeObj.alarm.limits.low;\n                    mediumValue = cubeObj.value - cubeObj.alarm.limits.low; \n                    lowColor = this.config.mediumColor;\n                    mediumColor = this.config.mediumColor;\n                    valueColor = mediumColor;\n            \n                }\n                if ( (cubeObj.alarm.limits.high <= cubeObj.value) && (cubeObj.value < cubeObj.alarm.limits.hihi) )\n                {\n                    lowValue = cubeObj.alarm.limits.low;\n                    mediumValue = cubeObj.alarm.limits.high - cubeObj.alarm.limits.low;\n                    highValue = cubeObj.value - cubeObj.alarm.limits.high;\n                    lowColor = this.config.highColor;\n                    mediumColor = this.config.highColor;\n                    highColor = this.config.highColor;\n                    valueColor = highColor;\n                }\n                if ( cubeObj.alarm.limits.hihi <= cubeObj.value)\n                {\n                    lowValue = cubeObj.alarm.limits.low;\n                    mediumValue = cubeObj.alarm.limits.high - cubeObj.alarm.limits.low; \n                    highValue = cubeObj.alarm.limits.hihi - cubeObj.alarm.limits.high; \n                    lowColor = this.config.highColor;\n                    mediumColor = this.config.highColor;\n                    highColor = this.config.highColor;\n                    valueColor = highColor;\n                }\n                \n                let lowBar = \n                {\n                    y: ['', '-'],\n                    x: [ cubeObj.alarm.limits.low, lowValue],\n                    type: 'bar',\n                    orientation: 'h',\n                    showlegend: false,\n                    marker:{color: [this.config.lowColor, lowColor]},\n                    width: [0.1, 1.0],\n                };\n                let mediumBar = \n                {\n                    y: ['', '-'],\n                    x: [cubeObj.alarm.limits.high - cubeObj.alarm.limits.low, mediumValue],\n                    type: 'bar',\n                    orientation: 'h',\n                    showlegend: false,\n                    marker:{color: [this.config.mediumColor, mediumColor]},\n                    width: [0.1, 1.0],\n                };\n                let highBar = \n                {\n                    y: ['', '-'],\n                    x: [cubeObj.alarm.limits.hihi - cubeObj.alarm.limits.high, highValue],\n                    orientation: 'h',\n                    type: 'bar',\n                    showlegend: false,\n                    marker:{color: [this.config.highColor, highColor]},\n                    width: [0.1, 1.0],\n                };\n                let layout = \n                {\n                    barmode: 'relative',\n                    plot_bgcolor:this.config.backgroundColor,\n                    paper_bgcolor:this.config.backgroundColor,\n                    margin: \n                    {\n                        t: 70, //top margin\n                        l: 20, //left margin\n                        r: 20, //right margin\n                        b: 70 //bottom margin\n                    },\n \n                    height: this.config.height,\n                    title: \n                    {\n                        text: cubeObj.value.toString() + ' ' + cubeObj.unit,\n                        font: {color: this.config.labelColor, size:this.config.textsize},\n                    },\n                    yaxis: \n                    {\n                        tickfont: {color:valueColor, size:this.config.textsize}\n                    },\n                    xaxis: \n                    {\n                        range: [cubeObj.alarm.limits.lolo, cubeObj.alarm.limits.hihi],\n                        tickfont: {color:this.config.labelColor, size:this.config.textsize},\n                        gridcolor       : this.config.gridColor\n\n                    },\n                };\n               Plotly.newPlot(this.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n            }\n        }\n        ",
        "output": "str",
        "x": 1060,
        "y": 400,
        "wires": [
            [
                "87da82c24d3adeb0"
            ]
        ]
    },
    {
        "id": "eb4a741d322caed8",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "vectorPlotCard",
        "field": "payload.vectorPlotCard",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//vectorPlotCard\n        class VectorPlotCard \n        {\n            constructor(app, config)\n            {\n                this.app = app;\n                this.config = config;\n            }\n            onDocumentReady()\n            {\n                let containerRowDiv = document.createElement('div');\n                containerRowDiv.setAttribute('class', 'row vectorPlotCard-containerRow');\n                document.getElementById('appContent').appendChild(containerRowDiv);\n                \n                let containerColDiv = document.createElement('div');\n                containerColDiv.setAttribute('class', 'col-md-12');\n                containerColDiv.setAttribute('align', 'center');\n                containerRowDiv.appendChild(containerColDiv);\n\n                let cardDiv = document.createElement('div');\n                cardDiv.setAttribute('class', 'card vectorPlotCard');\n                containerColDiv.appendChild(cardDiv);\n\n                let titleTable = document.createElement('table');\n                titleTable.setAttribute('width', '100%');\n                let titleRow  = document.createElement('tr');\n                let titleCol  = document.createElement('td');\n                titleCol.setAttribute('width', '85%');\n                titleCol.setAttribute('align', 'left');\n                let titleSpan  = document.createElement('span');\n                titleSpan.setAttribute('class', 'vectorPlotCard-title');\n                titleSpan.innerHTML = this.config.title;\n                titleCol.appendChild(titleSpan);\n                titleRow.appendChild(titleCol);\n                let buttonCol  = document.createElement('td');\n                buttonCol.setAttribute('width', '15%');\n\n                this.displayButton = document.createElement('button');\n                this.displayButton.setAttribute('class', 'btn btn-block vectorPlotCard-title-button');\n                this.displayButton.innerHTML = '-';\n                this.displayButton.onclick = event => {this.toggle()};\n                buttonCol.appendChild(this.displayButton);\n                titleRow.appendChild(buttonCol);\n\n                this.cardBodyDiv = document.createElement('div');\n                this.cardBodyDiv.setAttribute('class', 'vectorPlotCard-body');\n                this.cardBodyDiv.setAttribute('align', 'center');\n                let cardBodyTable = document.createElement('table');\n                cardBodyTable.setAttribute('width', '100%');\n\n                let cardBodyR1 = document.createElement('tr');\n                cardBodyTable.appendChild(cardBodyR1);\n                let cardBodyR1C1 = document.createElement('td');\n                cardBodyR1C1.setAttribute('width', '100%');\n                cardBodyR1.appendChild(cardBodyR1C1);\n                this.vectorPlotChartDiv = document.createElement('div');\n                this.vectorPlotChartDiv.setAttribute('width', '100%');\n                this.vectorPlotChartDiv.setAttribute('id', 'vectorPlotChart');\n                this.vectorPlotChartDiv.setAttribute('style', 'padding:20px;');\n                cardBodyR1C1.appendChild(this.vectorPlotChartDiv);\n\n                this.cardBodyDiv.appendChild(cardBodyTable);\n\n                titleTable.appendChild(titleRow);\n                cardDiv.appendChild(titleTable);\n                cardDiv.appendChild(this.cardBodyDiv);\n\n                if (this.config.displayOnOpen)\n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                }\n                else\n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                this.setupPlot();\n                window.addEventListener(\"resize\", event => {this.resize()});\n            }\n            toggle()\n            {\n                if (this.cardBodyDiv.style.display === \"none\") \n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                    if (this.vectorPlotTraces.length > 0)\n                    {\n                        this.config.plotlyLayout.width =  (this.cardBodyDiv.offsetWidth - 40).toString();\n                        Plotly.newPlot('vectorPlotChart', this.vectorPlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                    }\n                } \n                else \n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                \n            }\n            resize()\n            {\n                if ((this.cardBodyDiv.style.display != \"none\") && (this.vectorPlotTraces.length > 0) )\n                {\n                    this.config.plotlyLayout.width =  (this.cardBodyDiv.offsetWidth - 40).toString();\n                    Plotly.newPlot('vectorPlotChart', this.vectorPlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                }\n            }\n            setupPlot()\n            {\n                this.vectorPlotTraces = [];\n                for (let itray = 0; itray < this.config.cubeList.length; ++itray)\n                {\n                    for (let icube = 0; icube < this.config.cubeList[itray].length; ++icube)\n                    {\n                        let trace = \n                        {\n                            x: [],\n                            y: [],\n                            name:  this.app.trays[itray].type + '.' + this.app.trays[itray].name + '.' + this.config.cubeList[itray][icube].name,\n                            yaxis: this.config.cubeList[itray][icube].yaxis,\n                            type: 'scatter',\n                            mode: 'lines',\n                            line: {color: this.config.cubeList[itray][icube].color}\n                        };\n                        this.vectorPlotTraces.push(trace);\n                    }\n                }\n            }\n            addVectorsToVectorPlot()\n            {\n                let itray = 0;\n                let icube = 0;\n                for (let ii = 0; ii < this.vectorPlotTraces.length; ++ii)\n                {\n                    while (this.config.cubeList[itray].length == 0) \n                    {\n                        ++itray;\n                        if (itray == this.config.cubeList.length) return;\n                    }\n                    this.vectorPlotTraces[ii].x = this.app.trays[itray][this.config.cubeList[itray][icube].name].value[0];\n                    this.vectorPlotTraces[ii].y = this.app.trays[itray][this.config.cubeList[itray][icube].name].value[1];\n                    ++icube;\n                    if (icube >= this.config.cubeList[itray].length)\n                    {\n                        icube = 0;\n                        ++itray;\n                    }\n                }    \n                Plotly.newPlot('vectorPlotChart', this.vectorPlotTraces, this.config.plotlyLayout, this.config.plotlyDisplay);\n                this.resize();\n            }\n        }\n",
        "output": "str",
        "x": 820,
        "y": 320,
        "wires": [
            [
                "5f2408e71ac5f2bb"
            ]
        ]
    },
    {
        "id": "6c3ba5e52620f7d6",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "iframeCard",
        "field": "payload.iframeCard",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//iframeCard\n        class IframeCard \n        {\n            constructor(app, config)\n            {\n                this.app = app;\n                this.config = config;\n            }\n            onDocumentReady()\n            {\n                let containerRowDiv = document.createElement('div');\n                containerRowDiv.setAttribute('class', 'row iframeCard-containerRow');\n                document.getElementById('appContent').appendChild(containerRowDiv);\n                \n                let containerColDiv = document.createElement('div');\n                containerColDiv.setAttribute('class', 'col-md-12');\n                containerColDiv.setAttribute('align', 'center');\n                containerRowDiv.appendChild(containerColDiv);\n\n                let cardDiv = document.createElement('div');\n                cardDiv.setAttribute('class', 'card iframeCard');\n                containerColDiv.appendChild(cardDiv);\n                \n                let titleTable = document.createElement('table');\n                titleTable.setAttribute('width', '100%');\n                let titleRow  = document.createElement('tr');\n                let titleCol  = document.createElement('td');\n                titleCol.setAttribute('width', '85%');\n                titleCol.setAttribute('align', 'left');\n                let titleSpan  = document.createElement('span');\n                titleSpan.setAttribute('class', 'iframeCard-title');\n                titleSpan.innerHTML = this.config.title;\n                titleCol.appendChild(titleSpan);\n                titleRow.appendChild(titleCol);\n                let buttonCol  = document.createElement('td');\n                buttonCol.setAttribute('width', '15%');\n\n                this.displayButton = document.createElement('button');\n                this.displayButton.setAttribute('class', 'btn btn-block iframeCard-title-button');\n                this.displayButton.innerHTML = '-';\n                this.displayButton.onclick = event => {this.toggle()};\n                buttonCol.appendChild(this.displayButton);\n                titleRow.appendChild(buttonCol);\n\n                this.cardBodyDiv = document.createElement('div');\n\n                titleTable.appendChild(titleRow);\n                cardDiv.appendChild(titleTable);\n                cardDiv.appendChild(this.cardBodyDiv);\n\n                this.cardBodyDiv.setAttribute('style', \"width:100%; height: \" + this.config.height +  \";\");\n                this.iframe = document.createElement('iframe');\n                let keys = Object.keys(this.config.extraAttr);\n                for (var ii = 0; ii < keys.length; ++ii)\n                {\n                    this.iframe.setAttribute(keys[ii], this.config.extraAttr[keys[ii]]);\n                }\n\n                this.cardBodyDiv.appendChild(this.iframe);\n\n                if (this.config.displayOnOpen)\n                {\n                    let tsText = \"ts=\" + new Date().getTime().toString();\n                    if (this.config.url.indexOf(\"?\") > -1) \n                    {\n                        this.iframe.src = this.config.url + \"&\" + tsText;\n                    }\n                    else \n                    {\n                        this.iframe.src = this.config.url + \"?\" + tsText;\n                    }\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                }\n                else\n                {\n                    this.iframe.src = '/img/blmc-logo.png';\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n            }\n            toggle()\n            {\n                if (this.cardBodyDiv.style.display === \"none\") \n                {\n                    let tsText = \"ts=\" + new Date().getTime().toString();\n                    if (this.config.url.indexOf(\"?\") > -1)\n                    {\n                        this.iframe.src = this.config.url + \"&\" + tsText;\n                    }\n                    else\n                    {\n                        this.iframe.src = this.config.url + \"?\" + tsText;\n                    }\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                } \n                else \n                {\n                    this.iframe.src = '/img/bl-mc-icon.png';\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                \n            }\n        }\n",
        "output": "str",
        "x": 1370,
        "y": 240,
        "wires": [
            [
                "c397f4613dec0684"
            ]
        ]
    },
    {
        "id": "1ea7cffebed6852b",
        "type": "subflow:3fec913b325ae6ff",
        "z": "30a1fe01775ecb93",
        "name": "",
        "x": 260,
        "y": 80,
        "wires": [
            [
                "301570926b166a61"
            ]
        ]
    },
    {
        "id": "5c26e6f2752ddd2d",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "labelReadCube",
        "field": "payload.labelReadCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//ImageRead\n        class LabelReadCube extends CubeRowParameterView\n        {\n            addComponents(widgetColumns)\n            {\n                this.readingSpan  = document.createElement('span');\n                this.readingSpan.setAttribute('class', 'numberReadCube-span');\n                this.readingSpan.innerHTML = '?';\n                widgetColumns[0].appendChild(this.readingSpan);\n            }\n            updateCubeValue()\n            {\n                for (let ival = 0; ival < this.config.values.length; ++ival)\n                {\n                    if (this.tray[this.config.cubeName].value == this.config.values[ival])\n                    {\n                        this.readingSpan.innerHTML = this.config.labels[ival];\n                        if ('colors' in this.config)\n                        {\n                            this.readingSpan.style.color = this.config.colors[ival];\n                        }\n                    }\n                }\n            }\n        }",
        "output": "str",
        "x": 1080,
        "y": 240,
        "wires": [
            [
                "d41afc4ae8fe3b6b"
            ]
        ]
    },
    {
        "id": "f1b304d471d694ce",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "name": "Parse css",
        "func": "let cssObj = JSON.stringify(msg.payload);\nlet cssString = \"\";\nfor (let istyle = 0; istyle < msg.payload.sheets.length; ++istyle)\n{\n    for (let icss = 0; icss < msg.payload.sheets[istyle].css.length; ++icss)\n    {\n        cssString = cssString + jsonToCss(msg.payload.sheets[istyle].css[icss]);\n    }\n}\nmsg.config['css'] = cssString;\nmsg.payload = JSON.parse(JSON.stringify(msg.config));\ndelete msg.config;\nreturn msg;\n\n// From http://www.featureblend.com/css-json.html\nfunction jsonToCss(cssjson)\n{\n    var styleStr = \"\\t\\t\";\n    for(var i in cssjson)\n    {\n        styleStr += i + \"\\n\\t\\t{\\n\"\n        for(var j in cssjson[i]){\n            styleStr += \"\\t\\t\\t\" + j + \"\\t\\t:\\t\" + cssjson[i][j] + \";\\n\"     \n        }\n        styleStr += \"\\t\\t}\\n\"  \n    }\n    return styleStr;\n}\nfunction getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 280,
        "wires": [
            [
                "0bc62f15c96819ca"
            ]
        ]
    },
    {
        "id": "11eaf254b0683b73",
        "type": "mongodb3 in",
        "z": "30a1fe01775ecb93",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "appStyleSheets",
        "operation": "findOne",
        "x": 320,
        "y": 240,
        "wires": [
            [
                "f1b304d471d694ce"
            ]
        ]
    },
    {
        "id": "1f629cd5da57341d",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "dropChoiceCube",
        "field": "payload.dropChoiceCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//dropChoiceCube\n        class DropChoiceCube   extends CubeRowParameterView\n        {\n            addComponents(widgetColumns)\n            {\n                this.select = document.createElement('select');\n                this.select.setAttribute('class', 'dropChoiceCube-select');\n                for (let ii = 0; ii < this.config.choices.length; ++ii)\n                {\n                    let option = document.createElement('option');\n                    option.innerHTML = this.config.choices[ii].text;\n                    option.value = this.config.choices[ii].value;\n                    option.style.background = 'white';\n                    option.setAttribute('class', 'dropChoiceCube-select');\n                    this.select.appendChild(option);\n                }\n \n                widgetColumns[0].appendChild(this.select);\n                this.select.value = this.config.choices[0].value;\n                this.select.style.background = this.config.choices[0].color;\n                this.select.onchange = event => {this.inputChange()};\n\n                this.unitSpan  = document.createElement('span');\n                this.unitSpan.setAttribute('class', 'cubeRowParameterView-unit-span');\n                this.unitSpan.innerHTML = '';\n                widgetColumns[1].appendChild(this.unitSpan);\n\n                this.settingButton = document.createElement('button');\n                this.settingButton.setAttribute('class', 'btn btn-block dropChoiceSetCube-button');\n                this.settingButton.innerHTML = '&#10003;';\n                this.settingButton.onclick = event => {this.changeSetting()};\n                widgetColumns[2].appendChild(this.settingButton);\n\n                this.showSettingButton(false);\n\n            }\n\n            showSettingButton(showButton)\n            {\n                if (showButton)\n                {\n                    this.settingButton.style.display='block';\n                }\n                else\n                {\n                    this.settingButton.style.display='none';\n                }\n            }\n            inputChange()\n            {\n                this.changed = true;\n                this.showSettingButton(true);\n\n                for (let ii = 0; ii < this.config.choices.length; ++ii)\n                {\n                    if (this.select.value == this.config.choices[ii].value)\n                    {\n                        this.select.style.background = this.config.choices[ii].color;\n                    }\n                }\n            }\n            changeSetting()\n            {\n\n                this.showSettingButton(false);\n                let payload = {'cube': this.config.cubeName, 'value':this.select.value};\n                let actionMsg = \n                    {\n                        topic   : this.card.app.box + '/' +  this.tray.type + '/' +  this.tray.name + '/setting/setting',\n                        payload : payload\n                    };\n                this.card.app.sendActionMsg('setting','setting',actionMsg);\n                this.changed = false;\n            }\n            updateCubeValue()\n            {\n\n                if (!this.changed) \n                {\n                    this.select.value = this.tray[this.config.cubeName].value;\n                    this.unitSpan.innerHTML    = this.tray[this.config.cubeName].unit;\n                    for (let ii = 0; ii < this.config.choices.length; ++ii)\n                    {\n                        if (this.select.value == this.config.choices[ii].value)\n                        {\n                            this.select.style.background = this.config.choices[ii].color;\n                        }\n                    }\n                }\n\n            }\n        }",
        "output": "str",
        "x": 1390,
        "y": 200,
        "wires": [
            [
                "6c3ba5e52620f7d6"
            ]
        ]
    },
    {
        "id": "2067814904de1fec",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "navbar",
        "field": "payload.navbar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//navbar\n        class NavBar \n        {\n            constructor(app, config)\n            {\n                this.app = app;\n                this.config = config;\n            }\n            onDocumentReady()\n            {\n                let navbarDiv = document.createElement('div');\n                navbarDiv.setAttribute('class', 'jumbotron navbar');\n                navbarDiv.setAttribute('width', '100%');\n                document.getElementById('appContent').appendChild(navbarDiv);\n                \n                let navbarTable = document.createElement('table');\n                navbarTable.setAttribute('width', '100%');\n                navbarDiv.appendChild(navbarTable);\n                let row = document.createElement('tr');\n                navbarTable.appendChild(row);\n\n                let col1 = document.createElement('td');\n                col1.setAttribute('width', '20%');\n                col1.setAttribute('style', 'text-align:left; vertical-align:middle;');\n                row.appendChild(col1);\n                \n                let col1Link = document.createElement('a');\n                col1Link.setAttribute('href', this.config.leftLink);\n                col1.appendChild(col1Link);\n                \n                let col1Image = document.createElement('img');\n                col1Image.setAttribute('src', this.config.leftImage);\n                col1Image.setAttribute('height', this.config.imageHeight);\n                col1Link.appendChild(col1Image);\n\n                let col2 = document.createElement('td');\n                col2.setAttribute('width', '60%');\n                col2.setAttribute('style', 'text-align:center; vertical-align:middle;');\n                row.appendChild(col2);\n\n                let col2Header = document.createElement('h1');\n                col2Header.setAttribute('class', 'navbar-title');\n                col2.appendChild(col2Header);\n\n                let col2Image = document.createElement('img');\n                col2Image.setAttribute('src', this.config.centerImage);\n                col2Image.setAttribute('height', this.config.imageHeight);\n                col2Image.setAttribute('style', \"padding-right:20px;\");\n                col2Header.appendChild(col2Image);\n\n                let col2Span = document.createElement('span');\n                col2Span.innerHTML = this.app.config.title;\n                col2Header.appendChild(col2Span);\n\n                let col3 = document.createElement('td');\n                col3.setAttribute('width', '20%');\n                col3.setAttribute('style', 'text-align:right; vertical-align:middle;');\n                row.appendChild(col3);\n\n                let col3Link = document.createElement('a');\n                col3Link.setAttribute('href', this.config.rightLink);\n                col3.appendChild(col3Link);\n                \n                let col3Image = document.createElement('img');\n                col3Image.setAttribute('src', this.config.rightImage);\n                col3Image.setAttribute('height', this.config.imageHeight);\n                col3Link.appendChild(col3Image);\n            }\n        }\n",
        "output": "str",
        "x": 790,
        "y": 120,
        "wires": [
            [
                "19e845b708d1807f"
            ]
        ]
    },
    {
        "id": "5f2408e71ac5f2bb",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "userCard",
        "field": "payload.userCard",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//userCard\n        class UserCard \n        {\n            constructor(app, config)\n            {\n                this.app = app;\n                this.config = config;\n            }\n            onDocumentReady()\n            {\n                let containerRowDiv = document.createElement('div');\n                containerRowDiv.setAttribute('class', 'row userCard-containerRow');\n                document.getElementById('appContent').appendChild(containerRowDiv);\n                \n                let containerColDiv = document.createElement('div');\n                containerColDiv.setAttribute('class', 'col-md-12');\n                containerColDiv.setAttribute('align', 'center');\n                containerRowDiv.appendChild(containerColDiv);\n\n                let cardDiv = document.createElement('div');\n                cardDiv.setAttribute('class', 'card userCard');\n                containerColDiv.appendChild(cardDiv);\n\n                let titleTable = document.createElement('table');\n                titleTable.setAttribute('width', '100%');\n                let titleRow  = document.createElement('tr');\n                let titleCol  = document.createElement('td');\n                titleCol.setAttribute('width', '85%');\n                titleCol.setAttribute('align', 'left');\n                let titleSpan  = document.createElement('span');\n                titleSpan.setAttribute('class', 'userCard-title');\n                titleSpan.innerHTML = this.config.title;\n                titleCol.appendChild(titleSpan);\n                titleRow.appendChild(titleCol);\n                let buttonCol  = document.createElement('td');\n                buttonCol.setAttribute('width', '15%');\n\n                this.displayButton = document.createElement('button');\n                this.displayButton.setAttribute('class', 'btn btn-block userCard-title-button');\n                this.displayButton.innerHTML = '-';\n                this.displayButton.onclick = event => {this.toggle()};\n                buttonCol.appendChild(this.displayButton);\n                titleRow.appendChild(buttonCol);\n\n                this.cardBodyDiv = document.createElement('div');\n                this.cardBodyDiv.setAttribute('class', 'userCard-body');\n                this.cardBodyDiv.setAttribute('align', 'center');\n                let cardBodyTable = document.createElement('table');\n                cardBodyTable.setAttribute('width', '100%');\n\n                let cardBodyR1 = document.createElement('tr');\n                cardBodyTable.appendChild(cardBodyR1);\n                let cardBodyR1C1 = document.createElement('td');\n                cardBodyR1C1.setAttribute('width', '100%');\n                cardBodyR1.appendChild(cardBodyR1C1);\n                \n                let usrT1 = document.createElement('table');\n                usrT1.setAttribute('width', '100%');\n                cardBodyR1C1.appendChild(usrT1);\n\n                let usrT1R1 = document.createElement('tr');\n                usrT1.appendChild(usrT1R1);\n\n                let usrT1R1C1 = document.createElement('td');\n                usrT1R1C1.setAttribute('width', '50%');\n                usrT1R1C1.setAttribute('align', 'left');\n                usrT1R1.appendChild(usrT1R1C1);\n\n                let usrT1R1C1Span = document.createElement('span');               \n                usrT1R1C1Span.setAttribute('class', 'userCard-label');\n                usrT1R1C1Span.innerHTML = 'User:';\n                usrT1R1C1.appendChild(usrT1R1C1Span);\n                \n                let usrT1R1C2 = document.createElement('td');\n                usrT1R1C2.setAttribute('width', '50%');\n                usrT1R1C2.setAttribute('align', 'right');\n                usrT1R1.appendChild(usrT1R1C2);\n\n                this.userNameSpan = document.createElement('span');               \n                this.userNameSpan.setAttribute('class', 'userCard-data');\n                this.userNameSpan.innerHTML = '?';\n                usrT1R1C2.appendChild(this.userNameSpan);\n\n                let usrT1R2 = document.createElement('tr');\n                usrT1.appendChild(usrT1R2);\n\n                let usrT1R2C1 = document.createElement('td');\n                usrT1R2C1.setAttribute('width', '50%');\n                usrT1R2C1.setAttribute('align', 'left');\n                usrT1R2.appendChild(usrT1R2C1);\n\n                let usrT1R2C1Span = document.createElement('span');               \n                usrT1R2C1Span.setAttribute('class', 'userCard-label');\n                usrT1R2C1Span.innerHTML = 'Time left:';\n                usrT1R2C1.appendChild(usrT1R2C1Span);\n                \n                let usrT1R2C2 = document.createElement('td');\n                usrT1R2C2.setAttribute('width', '50%');\n                usrT1R2C2.setAttribute('align', 'right');\n                usrT1R2.appendChild(usrT1R2C2);\n\n                this.expTimeSpan = document.createElement('span');               \n                this.expTimeSpan.setAttribute('class', 'userCard-data');\n                this.expTimeSpan.innerHTML = '?';\n                usrT1R2C2.appendChild(this.expTimeSpan);\n\n                let cardBodyR2 = document.createElement('tr');\n                cardBodyTable.appendChild(cardBodyR2);\n                let cardBodyR2C1 = document.createElement('td');\n                cardBodyR2C1.setAttribute('width', '100%');\n                cardBodyR2.appendChild(cardBodyR2C1);\n                \n                let usrT2 = document.createElement('table');\n                usrT2.setAttribute('width', '100%');\n                cardBodyR2C1.appendChild(usrT2);\n\n                let usrT2R1 = document.createElement('tr');\n                usrT2.appendChild(usrT2R1);\n\n                let usrT2R1C1 = document.createElement('td');\n                usrT2R1C1.setAttribute('width', '40%');\n                usrT2R1C1.setAttribute('align', 'center');\n                usrT2R1.appendChild(usrT2R1C1);\n\n                let renewButton = document.createElement('button');\n                renewButton.setAttribute('class', 'btn btn-block userCard-button');\n                renewButton.innerHTML = 'Renew';\n                renewButton.onclick = event => {this.renew()};\n                usrT2R1C1.appendChild(renewButton);\n\n                let usrT2R1C2 = document.createElement('td');\n                usrT2R1C2.setAttribute('width', '10%');\n                usrT2R1.appendChild(usrT2R1C2);\n\n                let usrT2R1C3 = document.createElement('td');\n                usrT2R1C3.setAttribute('width', '40%');\n                usrT2R1C3.setAttribute('align', 'center');\n                usrT2R1.appendChild(usrT2R1C3);\n\n                let logoutButton = document.createElement('button');\n                logoutButton.setAttribute('class', 'btn btn-block userCard-button');\n                logoutButton.innerHTML = 'Logout';\n                logoutButton.onclick = event => {this.logout()};\n                usrT2R1C3.appendChild(logoutButton);\n\n                this.cardBodyDiv.appendChild(cardBodyTable);\n\n                titleTable.appendChild(titleRow);\n                cardDiv.appendChild(titleTable);\n                cardDiv.appendChild(this.cardBodyDiv);\n                if (this.config.displayOnOpen)\n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                }\n                else\n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                this.getCreds();\n                setInterval(() => {this.getCreds()}, 1000);\n\n            }\n            toggle()\n            {\n                if (this.cardBodyDiv.style.display === \"none\") \n                {\n                    this.cardBodyDiv.style.display = \"block\";\n                    this.displayButton.innerHTML = '-';\n                } \n                else \n                {\n                    this.cardBodyDiv.style.display = \"none\";\n                    this.displayButton.innerHTML = '+';\n                }\n                \n            }\n            getCreds()\n            {\n                let now = new Date().getTime();\n                let expDate = Number(this.app.getCookie('ExpDate'));\n                if (expDate > 0)\n                {\n                    expDate = expDate - now;\n                    if(expDate < 0)\n                    {\n                        logout();\n                    }\n                    else\n                    {\n                        let hours = Math.floor(expDate / 3600000);\n                        let minutes = expDate - hours * 3600000;\n                        minutes = Math.floor(minutes / 60000);\n                        let seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                        seconds = Math.floor(seconds / 1000);\n                        hours = hours.toString();\n                        if (hours.length == 1) hours = '0' + hours; \n                        minutes = minutes.toString();\n                        if (minutes.length == 1) minutes = '0' + minutes; \n                        seconds = seconds.toString();\n                        if (seconds.length == 1) seconds = '0' + seconds; \n                        let timeString = hours + ':' + minutes + ':' + seconds;\n                        this.userNameSpan.innerHTML = this.app.getCookie('Username');\n                        this.expTimeSpan.innerHTML = timeString;\n                    }\n                }\n                else\n                {\n                    this.userNameSpan.innerHTML = this.app.getCookie('Username');\n                    this.expTimeSpan.innerHTML = 'Forever';\n                }\n            }\n            logout()\n            {\n                document.cookie = this.app.box + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n                document.cookie = this.app.box + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n                document.cookie = this.app.box + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n                window.location.href = \"/\";\n            }\n            renew()\n            {\n                let actionMsg = {};\n                this.app.sendActionMsg('renew', 'renew', actionMsg);\n            }\n            downloadToken()\n            {\n                downloadString(this.getCookie(\"Role\"), \"text/plain\", box + \"-token.txt\");\n            }\n    // from https://gist.github.com/danallison/3ec9d5314788b337b682\n            downloadString(text, fileType, fileName) \n            {\n                let blob = new Blob([text], { type: fileType });\n                \n                let a = document.createElement('a');\n                a.download = fileName;\n                a.href = URL.createObjectURL(blob);\n                a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n                a.style.display = \"none\";\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n            }    \n        }\n",
        "output": "str",
        "x": 800,
        "y": 360,
        "wires": [
            [
                "d129ed90bcad3114"
            ]
        ]
    },
    {
        "id": "7f6f0675815e73bb",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.script}}}\n    </script>\n  </head>\n  <body>\n{{{payload.appContent}}}\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>\n  </body>\n</html>",
        "output": "str",
        "x": 1670,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6457136c1f664692",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 400,
        "wires": [
            [
                "7f6f0675815e73bb",
                "5d902b1df5c99c69"
            ]
        ]
    },
    {
        "id": "176adeb96b9237b0",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\ndata['user'] = msg.extraInfo.user;\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 520,
        "wires": [
            [
                "dde9f21e727b41e0"
            ]
        ]
    },
    {
        "id": "3e7577fc68373d2a",
        "type": "http request",
        "z": "30a1fe01775ecb93",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1550,
        "y": 480,
        "wires": [
            [
                "176adeb96b9237b0"
            ]
        ]
    },
    {
        "id": "5d902b1df5c99c69",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nvar header = {};\nheader['User-Agent'] = 'keycdn-tools:' + global.get('ipRefWeb');\nvar user = \"anon\"\nif (msg.hasOwnProperty(\"token\"))\n{\n    user = msg.token.username;\n}\nreturn {\n    topic:'clientInfo', \n    headers: header,\n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID, user:user},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 440,
        "wires": [
            [
                "3e7577fc68373d2a"
            ]
        ]
    },
    {
        "id": "dde9f21e727b41e0",
        "type": "mongodb3 in",
        "z": "30a1fe01775ecb93",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1610,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5779624beb268003",
        "type": "subflow:c57c2f9e65e6cb70",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "d0260c8ea77d4e25"
            ]
        ]
    },
    {
        "id": "d0260c8ea77d4e25",
        "type": "subflow:ca529822.9112f8",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "",
        "x": 830,
        "y": 680,
        "wires": []
    },
    {
        "id": "076f1767072eede2",
        "type": "JsonWebToken",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 520,
        "y": 480,
        "wires": [
            [
                "ba16137993039be6"
            ]
        ]
    },
    {
        "id": "0bc62f15c96819ca",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "Check for Box Cookies",
        "func": "var boxCookie = msg.req.cookies[global.get('box') + 'Role'];\nif(boxCookie == undefined)\n{\n    msg.cookies = { };\n    msg.payload.errorMsg = \"Credentials needed\";\n    return [null,msg];\n}\nmsg.token = boxCookie;\nmsg.payload['roleToken'] = msg.token;\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 520,
        "wires": [
            [
                "076f1767072eede2"
            ],
            [
                "90bbed9530ae7e20"
            ]
        ]
    },
    {
        "id": "ba16137993039be6",
        "type": "function",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload.errorMsg = tokenError;\n    msg.cookies = { };\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload.errorMsg = 'Login Expired. Please login again';\n        msg.cookies = { };\n        return [null,msg];\n    }\n}\nlet permittedRole = false;\n\nfor (let irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (let itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole) return credsNotValid(msg, 'Credentials not valid for App');\n\nlet trayList = JSON.parse(msg.payload.urlInput).trayList;\nlet trayOk = [];\nfor (let il = 0; il < trayList.length; ++il)\n{\n    let trayPermitted = false;\n    for (let itray = 0; itray < msg.token.trays.length; ++itray)\n    {\n        if (msg.token.trays[itray].type == '*')\n        {\n            trayPermitted = true;\n            break;\n        }\n        if (msg.token.trays[itray].type == trayList[il].type)\n        {\n            if (msg.token.trays[itray].name == '*')\n            {\n                trayPermitted = true;\n                break;\n            }\n            if (msg.token.trays[itray].name == trayList[il].name)\n            {\n                trayPermitted = true;\n                break;\n            }\n        }\n    }\n    trayOk.push(trayPermitted);\n}\nlet trayPermitted = true;\nfor (let il = 0; il < trayOk.length; ++il)\n{\n    if (!trayOk[il]) trayPermitted = false;\n}\nif (!trayPermitted) return credsNotValid(msg, 'Credentials not valid for data');\n\nmsg.payload['profile'] = JSON.stringify(msg.token);\nreturn [msg,null];\n\nfunction credsNotValid(messgage, notification)\n{\n    messgage.payload.errorMsg = notification;\n    messgage.cookies = { };\n    return [null,messgage];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 520,
        "wires": [
            [
                "4100d0c58cb16c81"
            ],
            [
                "90bbed9530ae7e20"
            ]
        ]
    },
    {
        "id": "bb893a73edae94da",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n        <div class='card'>\n            <p class='card-title' >{{{payload.errorMsg}}}</p>\n            <div class='card-body' align=\"center\">\n                <form action=\"/process-login\" method=\"POST\">\n                <table align='center'>\n                    <tr>\n                        <td>\n                            <label for=\"username\" class=\"big-text\">User</label>\n                        </td>\n                        <td>\n                            <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label for=\"password\" class=\"big-text\">Password</label>\n                        </td>\n                        <td>\n                            <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                        </td>\n                        <td>\n                            <input type=\"submit\" class=\"btn jumbotron-button btn-block big-text bold-text\"/>\n                        </td>\n                    </tr>\n                </table>    \n                <input type=\"hidden\" name=\"url\" value=\"{{{req.url}}}\" />\n            </form>  \n        </div>\n    </div>",
        "output": "str",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "5779624beb268003"
            ]
        ]
    },
    {
        "id": "c8019dd5e274d99f",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Log-in",
        "output": "str",
        "x": 490,
        "y": 600,
        "wires": [
            [
                "7f15f975996b6128"
            ]
        ]
    },
    {
        "id": "90bbed9530ae7e20",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 510,
        "y": 560,
        "wires": [
            [
                "c8019dd5e274d99f"
            ]
        ]
    },
    {
        "id": "7f15f975996b6128",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "g": "55cd6f49bccbac2c",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basic.png",
        "output": "str",
        "x": 510,
        "y": 640,
        "wires": [
            [
                "bb893a73edae94da"
            ]
        ]
    },
    {
        "id": "75ae84f40c62406c",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "timeStampReadCube",
        "field": "payload.timeStampReadCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//timeStampReadCube\n        class TimeStampReadCube \n        {\n            constructor(card, config)\n            {\n                this.card = card;\n                this.config = JSON.parse(JSON.stringify(config));\n            }\n            onDocumentReady(parentElement)\n            {\n                let inLineTable = document.createElement('table');\n                inLineTable.setAttribute('width', '100%');\n                let inLineRow  = document.createElement('tr');\n                let labelColumn  = document.createElement('td');\n                labelColumn.setAttribute('class', 'cubeRowParameterView-label-column');\n\n                let labelSpan  = document.createElement('span');\n                if ('cubeLabel' in this.config)\n                {\n                    labelSpan.innerHTML = this.config.cubeLabel;\n                }\n                else\n                {\n                    labelSpan.innerHTML = this.card.app.trays[this.config.trayIndex].type + \".\" + this.card.app.trays[this.config.trayIndex].name + \".\" + this.config.cubeName;\n                }\n                labelColumn.appendChild(labelSpan);\n                inLineRow.appendChild(labelColumn);\n                \n                let widgetColumns = [];\n                for (let iw = 0; iw < 3; ++iw)\n                {\n                    let iwcol  = document.createElement('td');\n                    iwcol.setAttribute('class', 'cubeRowParameterView-widget-column-' + (iw + 1).toString());\n                    inLineRow.appendChild(iwcol);\n                    widgetColumns.push(iwcol);\n                }\n                \n                this.addComponents(widgetColumns);\n\n                let alarmColumn  = document.createElement('td');\n                alarmColumn.setAttribute('class', 'cubeRowParameterView-alarmConfig-column');\n                this.alarmButton = document.createElement('img');\n                this.alarmButton.setAttribute('src', '/img/clearLight.png');\n                this.alarmButton.setAttribute('class', 'cubeRowParameterView-alarmConfig-button');\n                alarmColumn.appendChild(this.alarmButton);\n                inLineRow.appendChild(alarmColumn);\n\n                inLineTable.appendChild(inLineRow);\n                parentElement.appendChild(inLineTable);\n            }\n            addComponents(widgetColumns)\n            {\n                this.readingSpan  = document.createElement('span');\n                this.readingSpan.setAttribute('class', 'numberReadCube-span');\n                this.readingSpan.innerHTML = '?';\n                widgetColumns[0].appendChild(this.readingSpan);\n\n                this.unitSpan  = document.createElement('span');\n                this.unitSpan.setAttribute('class', 'cubeRowParameterView-unit-span');\n                this.unitSpan.innerHTML = '';\n                widgetColumns[1].appendChild(this.unitSpan);\n            }\n            trayUpdate(trays)\n            {\n                this.tray = trays[this.config.trayIndex];\n                let now = new Date(this.tray.timeStamp);\n                let timeString = now.toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit', second: '2-digit'}).replace(',','');\n                this.readingSpan.innerHTML = timeString;\n            }\n        }",
        "output": "str",
        "x": 1400,
        "y": 160,
        "wires": [
            [
                "1f629cd5da57341d"
            ]
        ]
    },
    {
        "id": "5aa99c468197af77",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "textReadCube",
        "field": "payload.textReadCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//textReadCube\n        class TextReadCube \n        {\n            constructor(card, config)\n            {\n                this.card = card;\n                this.config = JSON.parse(JSON.stringify(config));\n            }\n            onDocumentReady(parentElement)\n            {\n                let inLineTable = document.createElement('table');\n                inLineTable.setAttribute('width', '100%');\n                let inLineRow  = document.createElement('tr');\n                let labelColumn  = document.createElement('td');\n                labelColumn.setAttribute('class', 'cubeRowParameterView-label-column');\n\n                let labelSpan  = document.createElement('span');\n                if ('cubeLabel' in this.config)\n                {\n                    labelSpan.innerHTML = this.config.cubeLabel;\n                }\n                else\n                {\n                    labelSpan.innerHTML = this.card.app.trays[this.config.trayIndex].type + \".\" + this.card.app.trays[this.config.trayIndex].name + \".\" + this.config.cubeName;\n                }\n                labelColumn.appendChild(labelSpan);\n                inLineRow.appendChild(labelColumn);\n                \n                let widgetColumns = [];\n                for (let iw = 0; iw < 3; ++iw)\n                {\n                    let iwcol  = document.createElement('td');\n                    iwcol.setAttribute('class', 'cubeRowParameterView-widget-column-' + (iw + 1).toString());\n                    inLineRow.appendChild(iwcol);\n                    widgetColumns.push(iwcol);\n                }\n                \n                this.addComponents(widgetColumns);\n\n                let alarmColumn  = document.createElement('td');\n                alarmColumn.setAttribute('class', 'cubeRowParameterView-alarmConfig-column');\n                this.alarmButton = document.createElement('img');\n                this.alarmButton.setAttribute('src', '/img/clearLight.png');\n                this.alarmButton.setAttribute('class', 'cubeRowParameterView-alarmConfig-button');\n                alarmColumn.appendChild(this.alarmButton);\n                inLineRow.appendChild(alarmColumn);\n\n                inLineTable.appendChild(inLineRow);\n                parentElement.appendChild(inLineTable);\n            }\n            addComponents(widgetColumns)\n            {\n                this.readingSpan  = document.createElement('span');\n                this.readingSpan.setAttribute('class', 'numberReadCube-span');\n                this.readingSpan.innerHTML = '?';\n                widgetColumns[0].appendChild(this.readingSpan);\n\n                this.unitSpan  = document.createElement('span');\n                this.unitSpan.setAttribute('class', 'cubeRowParameterView-unit-span');\n                this.unitSpan.innerHTML = '';\n                widgetColumns[1].appendChild(this.unitSpan);\n            }\n\n            trayUpdate(trays)\n            {\n                this.tray = trays[this.config.trayIndex];\n                this.readingSpan.innerHTML = this.tray[this.config.cubeName].value;\n            }\n        }",
        "output": "str",
        "x": 1380,
        "y": 120,
        "wires": [
            [
                "75ae84f40c62406c"
            ]
        ]
    },
    {
        "id": "87da82c24d3adeb0",
        "type": "template",
        "z": "30a1fe01775ecb93",
        "name": "textSetCube",
        "field": "payload.textSetCube",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "//textSetCube\n        class TextSetCube  \n        {\n            constructor(card, config)\n            {\n                this.card = card;\n                this.config = JSON.parse(JSON.stringify(config));\n            }\n\n            onDocumentReady(parentElement)\n            {\n                let inLineTable = document.createElement('table');\n                inLineTable.setAttribute('width', '100%');\n                let inLineRow  = document.createElement('tr');\n                let labelColumn  = document.createElement('td');\n                labelColumn.setAttribute('class', 'cubeRowParameterView-label-column');\n\n                let labelSpan  = document.createElement('span');\n                if ('cubeLabel' in this.config)\n                {\n                    labelSpan.innerHTML = this.config.cubeLabel;\n                }\n                else\n                {\n                    labelSpan.innerHTML = this.card.app.trays[this.config.trayIndex].type + \".\" + this.card.app.trays[this.config.trayIndex].name + \".\" + this.config.cubeName;\n                }\n                labelColumn.appendChild(labelSpan);\n                inLineRow.appendChild(labelColumn);\n                \n                let widgetColumns = [];\n                for (let iw = 0; iw < 3; ++iw)\n                {\n                    let iwcol  = document.createElement('td');\n                    iwcol.setAttribute('class', 'cubeRowParameterView-widget-column-' + (iw + 1).toString());\n                    inLineRow.appendChild(iwcol);\n                    widgetColumns.push(iwcol);\n                }\n                \n                this.addComponents(widgetColumns);\n\n                let alarmColumn  = document.createElement('td');\n                alarmColumn.setAttribute('class', 'cubeRowParameterView-alarmConfig-column');\n                this.alarmButton = document.createElement('img');\n                this.alarmButton.setAttribute('src', '/img/clearLight.png');\n                this.alarmButton.setAttribute('class', 'cubeRowParameterView-alarmConfig-button');\n                alarmColumn.appendChild(this.alarmButton);\n                inLineRow.appendChild(alarmColumn);\n\n                inLineTable.appendChild(inLineRow);\n                parentElement.appendChild(inLineTable);\n            }\n\n            trayUpdate(trays)\n            {\n                this.tray = trays[this.config.trayIndex];\n                this.updateCubeValue();\n            }\n            addComponents(widgetColumns)\n            {\n                this.inputBox = document.createElement('input');\n                this.inputBox.setAttribute('class', 'numberSetCube-inputbox');\n                this.inputBox.setAttribute('type', 'text');\n                this.inputBox.setAttribute('value', '0');\n                this.inputBox.oninput = event => {this.inputChange()};\n                widgetColumns[0].appendChild(this.inputBox);\n\n                this.unitSpan  = document.createElement('span');\n                this.unitSpan.setAttribute('class', 'cubeRowParameterView-unit-span');\n                this.unitSpan.innerHTML = '';\n                widgetColumns[1].appendChild(this.unitSpan);\n\n                this.settingButton = document.createElement('button');\n                this.settingButton.setAttribute('class', 'btn btn-block numberSetCube-button');\n                this.settingButton.innerHTML = '&#10003;';\n                this.settingButton.onclick = event => {this.changeSetting()};\n                widgetColumns[2].appendChild(this.settingButton);\n\n                this.showSettingButton(false);\n            }\n\n            showSettingButton(showButton)\n            {\n                if (showButton)\n                {\n                    this.settingButton.style.display='block';\n                }\n                else\n                {\n                    this.settingButton.style.display='none';\n                }\n            }\n            inputChange()\n            {\n                this.changed = true;\n                this.showSettingButton(true);\n            }\n            changeSetting()\n            {\n                this.showSettingButton(false);\n                let payload = {'cube': this.config.cubeName, 'value':this.inputBox.value};\n                let actionMsg = \n                    {\n                        topic   : this.card.app.box + '/' +  this.tray.type + '/' +  this.tray.name + '/setting/setting',\n                        payload : payload\n                    };\n                this.card.app.sendActionMsg('setting','setting',actionMsg);\n                this.changed = false;\n            }\n            updateCubeValue()\n            {\n                if (!this.changed) \n                {\n                    this.inputBox.value = this.tray[this.config.cubeName].value;\n                }\n\n            }\n        }",
        "output": "str",
        "x": 1370,
        "y": 80,
        "wires": [
            [
                "5aa99c468197af77"
            ]
        ]
    },
    {
        "id": "51435faf6b40f465",
        "type": "template",
        "z": "74b74739cc6e49af",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n            --color1          :   #083357;\n            --color2          :   #c6c2bb;\n            --color3          :   #e7e7e7;\n            --color4          :   #c6c2bb;\n            --color5          :   #ffffff;\n            --color6          :   #487895;\n          --big-text-size :300%;\n          --medium-text-size :200%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: var(--color1) !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: white;\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color1) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color1) !important;\n          text-align: center;\n          border-style: solid;\n          border-width: 2px;\n          border-color: var(--color3);\n        }\n        .card-body\n        {\n          background-color: var(--color2);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n            color             :   var(--color5);\n            font-weight       :   900;\n            font-size         :   300%;\n        }\n        .card-title-button\n        {\n            color             :   var(--color5) !important;\n            background-color  :   var(--color1) !important;\n            font-weight       :   900;\n            font-size         :   300%;\n            font-style        :   italic;        \n        }\n        .card-text\n        {\n          color: var(--color6);\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .medium-text\n        {\n            font-size: var(--medium-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n        .hovertext text\n        {\n          font-size:30px !important;\n        }",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5f51ed9b0871e1a7",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "/app01",
        "url": "/app01",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "b02a9d73642aac97"
            ]
        ]
    },
    {
        "id": "981a189bd66aa323",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "b02a9d73642aac97",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "x": 690,
        "y": 80,
        "wires": [
            [
                "981a189bd66aa323"
            ]
        ]
    },
    {
        "id": "5cf746775e09c51a",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "/app01/websocket",
        "server": "38860699418f46ab",
        "client": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "9b8003862051043d"
            ]
        ]
    },
    {
        "id": "2e1a7303f8b9636a",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "/app01/websocket",
        "server": "38860699418f46ab",
        "client": "",
        "x": 1230,
        "y": 80,
        "wires": []
    },
    {
        "id": "9b8003862051043d",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "app01/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 80,
        "wires": []
    },
    {
        "id": "c4305416805ce150",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "app01/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "406fb374e596c7f4",
            "59778395ede5a4c7"
        ],
        "x": 1095,
        "y": 80,
        "wires": [
            [
                "2e1a7303f8b9636a"
            ]
        ]
    },
    {
        "id": "e928c1d6d05dd339",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "Subscribe Readings In for app01/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 140,
        "wires": [
            [
                "6e5fe8f4665ee2fd"
            ]
        ]
    },
    {
        "id": "6e5fe8f4665ee2fd",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "0ec09de0b6aaf66b",
        "name": "app01 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app01');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "2e1a7303f8b9636a"
            ]
        ]
    },
    {
        "id": "5ce7ac7243af19c9",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Init app mqtt filters",
        "func": "global.set('app01', []);\nglobal.set('app02', []);\nglobal.set('app03', []);\nglobal.set('app04', []);\nglobal.set('app05', []);\nglobal.set('app06', []);\nglobal.set('app07', []);\nglobal.set('app08', []);\nglobal.set('app09', []);\nglobal.set('app10', []);\nglobal.set('app11', []);\nglobal.set('app12', []);\nglobal.set('app13', []);\nglobal.set('app14', []);\nglobal.set('app15', []);\nglobal.set('app16', []);\nglobal.set('app17', []);\nglobal.set('app18', []);\nglobal.set('app19', []);\nglobal.set('app20', []);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 60,
        "wires": []
    },
    {
        "id": "1d021adf4408b378",
        "type": "inject",
        "z": "9c854ea3.68416",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1690,
        "y": 60,
        "wires": [
            [
                "5ce7ac7243af19c9"
            ]
        ]
    },
    {
        "id": "fb1cbda08964d2c4",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "/app02",
        "url": "/app02",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "cea2875827e63d5b"
            ]
        ]
    },
    {
        "id": "1928603ca153df67",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "cea2875827e63d5b",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "x": 690,
        "y": 260,
        "wires": [
            [
                "1928603ca153df67"
            ]
        ]
    },
    {
        "id": "f63b0fcec3bd6b3c",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "/app02/websocket",
        "server": "7ece631ea50177fc",
        "client": "",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "38c6c636e8332a69"
            ]
        ]
    },
    {
        "id": "0ce5c07cfdb5f54e",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "/app02/websocket",
        "server": "7ece631ea50177fc",
        "client": "",
        "x": 1230,
        "y": 260,
        "wires": []
    },
    {
        "id": "38c6c636e8332a69",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "app02/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 260,
        "wires": []
    },
    {
        "id": "1b18ffef25aa4c35",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "app02/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "4e7534812ece0188",
            "517badda418a1087"
        ],
        "x": 1095,
        "y": 260,
        "wires": [
            [
                "0ce5c07cfdb5f54e"
            ]
        ]
    },
    {
        "id": "3c5ab7eda412bc5c",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "Subscribe Readings In for app02/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 320,
        "wires": [
            [
                "c4e92c75751127a2"
            ]
        ]
    },
    {
        "id": "c4e92c75751127a2",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "222f7527456f431b",
        "name": "app02 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app02');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "0ce5c07cfdb5f54e"
            ]
        ]
    },
    {
        "id": "c998ed82e3c5192d",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "/app03",
        "url": "/app03",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "e42d975ba6da1072"
            ]
        ]
    },
    {
        "id": "aba265fffa92daf6",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "e42d975ba6da1072",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "x": 690,
        "y": 440,
        "wires": [
            [
                "aba265fffa92daf6"
            ]
        ]
    },
    {
        "id": "cccd608b3a365086",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "/app03/websocket",
        "server": "921961d7ced20a6b",
        "client": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "0eee0874c7a22b2b"
            ]
        ]
    },
    {
        "id": "bd6e0506563a8d43",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "/app03/websocket",
        "server": "921961d7ced20a6b",
        "client": "",
        "x": 1230,
        "y": 440,
        "wires": []
    },
    {
        "id": "0eee0874c7a22b2b",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "app03/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 440,
        "wires": []
    },
    {
        "id": "505e5bfda43f39a4",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "app03/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "606b8a8d9e46c3a3",
            "bb850a8861b13a5b"
        ],
        "x": 1095,
        "y": 440,
        "wires": [
            [
                "bd6e0506563a8d43"
            ]
        ]
    },
    {
        "id": "4e4453e4f560ffd7",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "Subscribe Readings In for app03/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 500,
        "wires": [
            [
                "b690e92951ea57f3"
            ]
        ]
    },
    {
        "id": "b690e92951ea57f3",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "8513d2368ac7161f",
        "name": "app03 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app03');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 500,
        "wires": [
            [
                "bd6e0506563a8d43"
            ]
        ]
    },
    {
        "id": "f282dbb78dca19fd",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "/app04",
        "url": "/app04",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 620,
        "wires": [
            [
                "5e8768d08571a1ad"
            ]
        ]
    },
    {
        "id": "56391ae4bbe459c3",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 620,
        "wires": []
    },
    {
        "id": "5e8768d08571a1ad",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "56391ae4bbe459c3"
            ]
        ]
    },
    {
        "id": "6d6068c8dfd2a20c",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "/app04/websocket",
        "server": "460c02f928e0dc14",
        "client": "",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "5a8fcfe3f536d31f"
            ]
        ]
    },
    {
        "id": "d490148fcda8b2dd",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "/app04/websocket",
        "server": "460c02f928e0dc14",
        "client": "",
        "x": 1230,
        "y": 620,
        "wires": []
    },
    {
        "id": "5a8fcfe3f536d31f",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "app04/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 620,
        "wires": []
    },
    {
        "id": "d662030dd2e155d4",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "app04/websocket in",
        "links": [
            "1dda53064a09cd78",
            "1e710224.de723e",
            "224d9b05.f92104",
            "8c6eb81005ea0844"
        ],
        "x": 1095,
        "y": 620,
        "wires": [
            [
                "d490148fcda8b2dd"
            ]
        ]
    },
    {
        "id": "9800371cca717e58",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "Subscribe Readings In for app04/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 680,
        "wires": [
            [
                "4f5138b1c21ad771"
            ]
        ]
    },
    {
        "id": "4f5138b1c21ad771",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "e02813d59f160a5c",
        "name": "app04 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app04');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "d490148fcda8b2dd"
            ]
        ]
    },
    {
        "id": "6aadddd9cdc56a54",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "/app05",
        "url": "/app05",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 800,
        "wires": [
            [
                "e76fb9a94d1ede44"
            ]
        ]
    },
    {
        "id": "c6a1dd8dfbfbf55d",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 800,
        "wires": []
    },
    {
        "id": "e76fb9a94d1ede44",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "x": 690,
        "y": 800,
        "wires": [
            [
                "c6a1dd8dfbfbf55d"
            ]
        ]
    },
    {
        "id": "92e082c38ae2714c",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "/app05/websocket",
        "server": "f0fb7ee16f4dd869",
        "client": "",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "c3fe489d56f32ea2"
            ]
        ]
    },
    {
        "id": "85141a8bbce60dec",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "/app05/websocket",
        "server": "f0fb7ee16f4dd869",
        "client": "",
        "x": 1230,
        "y": 800,
        "wires": []
    },
    {
        "id": "c3fe489d56f32ea2",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "app05/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 800,
        "wires": []
    },
    {
        "id": "b06f19970285e6f3",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "app05/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "e4135511c1cc5969",
            "fce6b0dd552bb18e"
        ],
        "x": 1095,
        "y": 800,
        "wires": [
            [
                "85141a8bbce60dec"
            ]
        ]
    },
    {
        "id": "296ce089db74a1b5",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "Subscribe Readings In for app05/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 860,
        "wires": [
            [
                "66ce09a4d677808a"
            ]
        ]
    },
    {
        "id": "66ce09a4d677808a",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "e0c14b4f190836c9",
        "name": "app05 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app05');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 860,
        "wires": [
            [
                "85141a8bbce60dec"
            ]
        ]
    },
    {
        "id": "087f9c69acbf3512",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "/app06",
        "url": "/app06",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 980,
        "wires": [
            [
                "28b89ce6ba89047f"
            ]
        ]
    },
    {
        "id": "f64d2514e5563624",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 980,
        "wires": []
    },
    {
        "id": "28b89ce6ba89047f",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "x": 690,
        "y": 980,
        "wires": [
            [
                "f64d2514e5563624"
            ]
        ]
    },
    {
        "id": "23d96e36f5ca36c8",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "/app06/websocket",
        "server": "a27ec2d09ee18085",
        "client": "",
        "x": 150,
        "y": 980,
        "wires": [
            [
                "7dfa3bab90cbde7c"
            ]
        ]
    },
    {
        "id": "b9322a0d86de860d",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "/app06/websocket",
        "server": "a27ec2d09ee18085",
        "client": "",
        "x": 1230,
        "y": 980,
        "wires": []
    },
    {
        "id": "7dfa3bab90cbde7c",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "app06/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 980,
        "wires": []
    },
    {
        "id": "0821d52b1aa36b97",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "app06/websocket in",
        "links": [
            "01e3449414173d74",
            "1e710224.de723e",
            "224d9b05.f92104",
            "8599baab899f7150"
        ],
        "x": 1095,
        "y": 980,
        "wires": [
            [
                "b9322a0d86de860d"
            ]
        ]
    },
    {
        "id": "f29c301276738c5e",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "Subscribe Readings In for app06/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 1040,
        "wires": [
            [
                "6ab0f551657f68ec"
            ]
        ]
    },
    {
        "id": "6ab0f551657f68ec",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "674af16debdd8f0f",
        "name": "app06 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app06');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1040,
        "wires": [
            [
                "b9322a0d86de860d"
            ]
        ]
    },
    {
        "id": "4850577351e99876",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "/app07",
        "url": "/app07",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "95d14e6ed1ade66c"
            ]
        ]
    },
    {
        "id": "7ef0378b377047c5",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1160,
        "wires": []
    },
    {
        "id": "95d14e6ed1ade66c",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "7ef0378b377047c5"
            ]
        ]
    },
    {
        "id": "92d6a490a77b5671",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "/app07/websocket",
        "server": "ee9bcfa3d93b3114",
        "client": "",
        "x": 150,
        "y": 1160,
        "wires": [
            [
                "14d04246c9a34554"
            ]
        ]
    },
    {
        "id": "3cb10a30aca6f7ad",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "/app07/websocket",
        "server": "ee9bcfa3d93b3114",
        "client": "",
        "x": 1230,
        "y": 1160,
        "wires": []
    },
    {
        "id": "14d04246c9a34554",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "app07/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 1160,
        "wires": []
    },
    {
        "id": "a09b8b36e675cd9a",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "app07/websocket in",
        "links": [
            "0bcad73efaae1910",
            "1e710224.de723e",
            "224d9b05.f92104",
            "96cf06f0a2d89cd0"
        ],
        "x": 1095,
        "y": 1160,
        "wires": [
            [
                "3cb10a30aca6f7ad"
            ]
        ]
    },
    {
        "id": "1512243435a0ec2c",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "Subscribe Readings In for app07/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 1220,
        "wires": [
            [
                "25f8c290f03f8dce"
            ]
        ]
    },
    {
        "id": "25f8c290f03f8dce",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "9e9aab81c0c1e479",
        "name": "app07 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app07');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1220,
        "wires": [
            [
                "3cb10a30aca6f7ad"
            ]
        ]
    },
    {
        "id": "aab5d9e098098fac",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "/app08",
        "url": "/app08",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 1340,
        "wires": [
            [
                "e2bb6c99031d8ae0"
            ]
        ]
    },
    {
        "id": "a6133561d1a9ddb9",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e2bb6c99031d8ae0",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "x": 690,
        "y": 1340,
        "wires": [
            [
                "a6133561d1a9ddb9"
            ]
        ]
    },
    {
        "id": "bbc09ef9da4c5bdc",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "/app08/websocket",
        "server": "edc1f81b727a64e5",
        "client": "",
        "x": 150,
        "y": 1340,
        "wires": [
            [
                "2d05b8d1e252e87e"
            ]
        ]
    },
    {
        "id": "1b5253263cb324c1",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "/app08/websocket",
        "server": "edc1f81b727a64e5",
        "client": "",
        "x": 1230,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2d05b8d1e252e87e",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "app08/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6654b362727148d8",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "app08/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "e323f5659177d346",
            "f0c819a5ef3c22b3"
        ],
        "x": 1095,
        "y": 1340,
        "wires": [
            [
                "1b5253263cb324c1"
            ]
        ]
    },
    {
        "id": "2a1d3ff91d11ab9b",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "Subscribe Readings In for app08/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 1400,
        "wires": [
            [
                "bb3bc9ccb4b7ccfa"
            ]
        ]
    },
    {
        "id": "bb3bc9ccb4b7ccfa",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "ff1586c44763ab25",
        "name": "app08 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app08');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1400,
        "wires": [
            [
                "1b5253263cb324c1"
            ]
        ]
    },
    {
        "id": "7b34f03f643a50ce",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "/app09",
        "url": "/app09",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "9ad714955045f27b"
            ]
        ]
    },
    {
        "id": "bb9626aa9649b40a",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1520,
        "wires": []
    },
    {
        "id": "9ad714955045f27b",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "x": 690,
        "y": 1520,
        "wires": [
            [
                "bb9626aa9649b40a"
            ]
        ]
    },
    {
        "id": "620b57cf9594e0d9",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "/app09/websocket",
        "server": "eb8ce1e25de6ea1c",
        "client": "",
        "x": 150,
        "y": 1520,
        "wires": [
            [
                "d2e21cd7ddfe525b"
            ]
        ]
    },
    {
        "id": "298a15070a189152",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "/app09/websocket",
        "server": "eb8ce1e25de6ea1c",
        "client": "",
        "x": 1230,
        "y": 1520,
        "wires": []
    },
    {
        "id": "d2e21cd7ddfe525b",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "app09/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 1520,
        "wires": []
    },
    {
        "id": "741eb3ceb69c8ec4",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "app09/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "c61ec847cccfd263",
            "e04da5697a7de522"
        ],
        "x": 1095,
        "y": 1520,
        "wires": [
            [
                "298a15070a189152"
            ]
        ]
    },
    {
        "id": "229914f7347d04d8",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "Subscribe Readings In for app09/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 1580,
        "wires": [
            [
                "ddd27203e99450e3"
            ]
        ]
    },
    {
        "id": "ddd27203e99450e3",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "e61434d43b450009",
        "name": "app09 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app09');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1580,
        "wires": [
            [
                "298a15070a189152"
            ]
        ]
    },
    {
        "id": "a506e1f4f5daab86",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "/app10",
        "url": "/app10",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "506c949381b4bcbf"
            ]
        ]
    },
    {
        "id": "28c91b1ca0db0865",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1700,
        "wires": []
    },
    {
        "id": "506c949381b4bcbf",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "x": 690,
        "y": 1700,
        "wires": [
            [
                "28c91b1ca0db0865"
            ]
        ]
    },
    {
        "id": "945bb557b7e18367",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "/app10/websocket",
        "server": "fa368f238bb0fcf0",
        "client": "",
        "x": 150,
        "y": 1700,
        "wires": [
            [
                "7f1b3a8b331f1606"
            ]
        ]
    },
    {
        "id": "e8fd6e6a3d81cdd3",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "/app10/websocket",
        "server": "fa368f238bb0fcf0",
        "client": "",
        "x": 1230,
        "y": 1700,
        "wires": []
    },
    {
        "id": "7f1b3a8b331f1606",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "app10/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 1700,
        "wires": []
    },
    {
        "id": "b2dfe30f5e99e502",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "app10/websocket in",
        "links": [
            "05c19b636cfa20c7",
            "1e710224.de723e",
            "224d9b05.f92104",
            "9a529efa5d2f7fb9"
        ],
        "x": 1095,
        "y": 1700,
        "wires": [
            [
                "e8fd6e6a3d81cdd3"
            ]
        ]
    },
    {
        "id": "4c23b1c0444fdca5",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "Subscribe Readings In for app10/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 1760,
        "wires": [
            [
                "17ea133e78cd791e"
            ]
        ]
    },
    {
        "id": "17ea133e78cd791e",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "8b1ca40e143d36e4",
        "name": "app10 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app10');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1760,
        "wires": [
            [
                "e8fd6e6a3d81cdd3"
            ]
        ]
    },
    {
        "id": "a6cc925ad1f66d3f",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "/app11",
        "url": "/app11",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 1880,
        "wires": [
            [
                "209533dee81d03e6"
            ]
        ]
    },
    {
        "id": "754dedb067f13c82",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1880,
        "wires": []
    },
    {
        "id": "209533dee81d03e6",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "x": 690,
        "y": 1880,
        "wires": [
            [
                "754dedb067f13c82"
            ]
        ]
    },
    {
        "id": "ff1b4ea12df1cc86",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "/app11/websocket",
        "server": "50615d2a2028c321",
        "client": "",
        "x": 150,
        "y": 1880,
        "wires": [
            [
                "6b00666abab453cc"
            ]
        ]
    },
    {
        "id": "f0b6f83beefd9fdf",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "/app11/websocket",
        "server": "50615d2a2028c321",
        "client": "",
        "x": 1230,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6b00666abab453cc",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "app11/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 1880,
        "wires": []
    },
    {
        "id": "f9bb75fa3e0a41d6",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "app11/websocket in",
        "links": [
            "15cf5ad2963f839e",
            "1e710224.de723e",
            "224d9b05.f92104",
            "88b57c024289a59d"
        ],
        "x": 1095,
        "y": 1880,
        "wires": [
            [
                "f0b6f83beefd9fdf"
            ]
        ]
    },
    {
        "id": "636b1a8af11c5553",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "Subscribe Readings In for app11/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 1940,
        "wires": [
            [
                "e1806fc6647b30e4"
            ]
        ]
    },
    {
        "id": "e1806fc6647b30e4",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "64d7785b86bd0e78",
        "name": "app11 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app11');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1940,
        "wires": [
            [
                "f0b6f83beefd9fdf"
            ]
        ]
    },
    {
        "id": "67a3c6661ff874ed",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "/app12",
        "url": "/app12",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 2060,
        "wires": [
            [
                "f698f96664dd325d"
            ]
        ]
    },
    {
        "id": "0dbdd03ac72ff952",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 2060,
        "wires": []
    },
    {
        "id": "f698f96664dd325d",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "x": 690,
        "y": 2060,
        "wires": [
            [
                "0dbdd03ac72ff952"
            ]
        ]
    },
    {
        "id": "7cf03a1a75d84c20",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "/app12/websocket",
        "server": "e86ac9e1573678c6",
        "client": "",
        "x": 150,
        "y": 2060,
        "wires": [
            [
                "90e701d7432d9cf2"
            ]
        ]
    },
    {
        "id": "82c4f512f0be7bb5",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "/app12/websocket",
        "server": "e86ac9e1573678c6",
        "client": "",
        "x": 1230,
        "y": 2060,
        "wires": []
    },
    {
        "id": "90e701d7432d9cf2",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "app12/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 2060,
        "wires": []
    },
    {
        "id": "5bc80b04a8d619a7",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "app12/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "9accc45be888abb9",
            "36157422c764c912"
        ],
        "x": 1095,
        "y": 2060,
        "wires": [
            [
                "82c4f512f0be7bb5"
            ]
        ]
    },
    {
        "id": "116ea6c7ce824cb1",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "Subscribe Readings In for app12/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 2120,
        "wires": [
            [
                "9ee70b7f7567a0d3"
            ]
        ]
    },
    {
        "id": "9ee70b7f7567a0d3",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "17d8aee66ef5f14b",
        "name": "app12 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app12');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2120,
        "wires": [
            [
                "82c4f512f0be7bb5"
            ]
        ]
    },
    {
        "id": "72e1e4cba224fc5b",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "/app13",
        "url": "/app13",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 2240,
        "wires": [
            [
                "ddd48aef144781dc"
            ]
        ]
    },
    {
        "id": "1be1405a5680e587",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 2240,
        "wires": []
    },
    {
        "id": "ddd48aef144781dc",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "x": 690,
        "y": 2240,
        "wires": [
            [
                "1be1405a5680e587"
            ]
        ]
    },
    {
        "id": "a962ed0c7054ed71",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "/app13/websocket",
        "server": "c5c525098f27f298",
        "client": "",
        "x": 150,
        "y": 2240,
        "wires": [
            [
                "b21c2249ae0ed814"
            ]
        ]
    },
    {
        "id": "3d5c59b4f93a26f2",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "/app13/websocket",
        "server": "c5c525098f27f298",
        "client": "",
        "x": 1230,
        "y": 2240,
        "wires": []
    },
    {
        "id": "b21c2249ae0ed814",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "app13/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 2240,
        "wires": []
    },
    {
        "id": "9d02f123c6e784d3",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "app13/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "4cb55259556245ac",
            "e58d7a2963dda9fe"
        ],
        "x": 1095,
        "y": 2240,
        "wires": [
            [
                "3d5c59b4f93a26f2"
            ]
        ]
    },
    {
        "id": "7bce085f8052ef7b",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "Subscribe Readings In for app13/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 2300,
        "wires": [
            [
                "14fc94d6d31cb660"
            ]
        ]
    },
    {
        "id": "14fc94d6d31cb660",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "6c2db529cbe5190a",
        "name": "app13 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app13');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2300,
        "wires": [
            [
                "3d5c59b4f93a26f2"
            ]
        ]
    },
    {
        "id": "0b091f9b74befd18",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "/app14",
        "url": "/app14",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 2420,
        "wires": [
            [
                "c51f082bed3ae121"
            ]
        ]
    },
    {
        "id": "8c3fe5f1c25985bd",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 2420,
        "wires": []
    },
    {
        "id": "c51f082bed3ae121",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "x": 690,
        "y": 2420,
        "wires": [
            [
                "8c3fe5f1c25985bd"
            ]
        ]
    },
    {
        "id": "abb02cea97a760ed",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "/app14/websocket",
        "server": "651902e91786db62",
        "client": "",
        "x": 150,
        "y": 2420,
        "wires": [
            [
                "9b871f6a4e75c8cf"
            ]
        ]
    },
    {
        "id": "a1a17b8442456722",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "/app14/websocket",
        "server": "651902e91786db62",
        "client": "",
        "x": 1230,
        "y": 2420,
        "wires": []
    },
    {
        "id": "9b871f6a4e75c8cf",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "app14/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 2420,
        "wires": []
    },
    {
        "id": "562b375d7d0b06bf",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "app14/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "6814a9929d16adc9",
            "7512b0dc86195537"
        ],
        "x": 1095,
        "y": 2420,
        "wires": [
            [
                "a1a17b8442456722"
            ]
        ]
    },
    {
        "id": "95d0d0d4392ae158",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "Subscribe Readings In for app14/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 2480,
        "wires": [
            [
                "989ba4dd6a4ca183"
            ]
        ]
    },
    {
        "id": "989ba4dd6a4ca183",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "a732e8657f5583e1",
        "name": "app14 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app14');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2480,
        "wires": [
            [
                "a1a17b8442456722"
            ]
        ]
    },
    {
        "id": "ed535f85fa4fb799",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "/app15",
        "url": "/app15",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 2600,
        "wires": [
            [
                "48d93bf30e1bde16"
            ]
        ]
    },
    {
        "id": "b05fbd7092ce8364",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 2600,
        "wires": []
    },
    {
        "id": "48d93bf30e1bde16",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "x": 690,
        "y": 2600,
        "wires": [
            [
                "b05fbd7092ce8364"
            ]
        ]
    },
    {
        "id": "f52e852190ece6a6",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "/app15/websocket",
        "server": "78ca934fe41cbe98",
        "client": "",
        "x": 150,
        "y": 2600,
        "wires": [
            [
                "ae0f6f2e0ceb62ce"
            ]
        ]
    },
    {
        "id": "3a38524baf317f6f",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "/app15/websocket",
        "server": "78ca934fe41cbe98",
        "client": "",
        "x": 1230,
        "y": 2600,
        "wires": []
    },
    {
        "id": "ae0f6f2e0ceb62ce",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "app15/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 2600,
        "wires": []
    },
    {
        "id": "f2cd4d12b66320a4",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "app15/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "61d469f49355a05b",
            "be0cbc5bf5ef80c7"
        ],
        "x": 1095,
        "y": 2600,
        "wires": [
            [
                "3a38524baf317f6f"
            ]
        ]
    },
    {
        "id": "a056eb265fb4061a",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "Subscribe Readings In for app15/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 2660,
        "wires": [
            [
                "e879f75c0e5c3ca1"
            ]
        ]
    },
    {
        "id": "e879f75c0e5c3ca1",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "16d44c3cfa3101e4",
        "name": "app15 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app15');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2660,
        "wires": [
            [
                "3a38524baf317f6f"
            ]
        ]
    },
    {
        "id": "8c1fa6fa61d6952e",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "/app16",
        "url": "/app16",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 2780,
        "wires": [
            [
                "5a19619ad25bad5e"
            ]
        ]
    },
    {
        "id": "e9b18d4ccf8b50c9",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 2780,
        "wires": []
    },
    {
        "id": "5a19619ad25bad5e",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "x": 690,
        "y": 2780,
        "wires": [
            [
                "e9b18d4ccf8b50c9"
            ]
        ]
    },
    {
        "id": "6c0a34bc94774552",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "/app16/websocket",
        "server": "fd07e0543438dc40",
        "client": "",
        "x": 150,
        "y": 2780,
        "wires": [
            [
                "51ba731db5e7cd81"
            ]
        ]
    },
    {
        "id": "6ce7c37eca6f51c6",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "/app16/websocket",
        "server": "fd07e0543438dc40",
        "client": "",
        "x": 1230,
        "y": 2780,
        "wires": []
    },
    {
        "id": "51ba731db5e7cd81",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "app16/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 2780,
        "wires": []
    },
    {
        "id": "06a0be334fa92f23",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "app16/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "23ec125ff56af02d",
            "a2437ec9be6ba631"
        ],
        "x": 1095,
        "y": 2780,
        "wires": [
            [
                "6ce7c37eca6f51c6"
            ]
        ]
    },
    {
        "id": "966d1e458cf5d07d",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "Subscribe Readings In for app16/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 2840,
        "wires": [
            [
                "d9e2848941f56361"
            ]
        ]
    },
    {
        "id": "d9e2848941f56361",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "1ea74c70db7a8d4c",
        "name": "app16 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app16');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2840,
        "wires": [
            [
                "6ce7c37eca6f51c6"
            ]
        ]
    },
    {
        "id": "d2e22693b149b445",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "/app17",
        "url": "/app17",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 2960,
        "wires": [
            [
                "53d1f3b8dbc47a60"
            ]
        ]
    },
    {
        "id": "5f5f068b153cd88b",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 2960,
        "wires": []
    },
    {
        "id": "53d1f3b8dbc47a60",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "x": 690,
        "y": 2960,
        "wires": [
            [
                "5f5f068b153cd88b"
            ]
        ]
    },
    {
        "id": "c58992ddb1de7697",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "/app17/websocket",
        "server": "06c57e288dbd7e6f",
        "client": "",
        "x": 150,
        "y": 2960,
        "wires": [
            [
                "cc72650eba9a8cf5"
            ]
        ]
    },
    {
        "id": "d092e4ad2237db5b",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "/app17/websocket",
        "server": "06c57e288dbd7e6f",
        "client": "",
        "x": 1230,
        "y": 2960,
        "wires": []
    },
    {
        "id": "cc72650eba9a8cf5",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "app17/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 2960,
        "wires": []
    },
    {
        "id": "2ea36d7022a308c8",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "app17/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "4906f26e99f72586",
            "7872c4f66d7f3cfd"
        ],
        "x": 1095,
        "y": 2960,
        "wires": [
            [
                "d092e4ad2237db5b"
            ]
        ]
    },
    {
        "id": "8c3b6088b7f5ebfd",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "Subscribe Readings In for app17/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 3020,
        "wires": [
            [
                "59f2b833ab020772"
            ]
        ]
    },
    {
        "id": "59f2b833ab020772",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "52e9056d6e8207fb",
        "name": "app17 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app17');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3020,
        "wires": [
            [
                "d092e4ad2237db5b"
            ]
        ]
    },
    {
        "id": "23e8b162dc60c777",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "/app18",
        "url": "/app18",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 3140,
        "wires": [
            [
                "ddfc2463688af896"
            ]
        ]
    },
    {
        "id": "209f11cf198e4d3d",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 3140,
        "wires": []
    },
    {
        "id": "ddfc2463688af896",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "x": 690,
        "y": 3140,
        "wires": [
            [
                "209f11cf198e4d3d"
            ]
        ]
    },
    {
        "id": "525bb017b978f6bf",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "/app18/websocket",
        "server": "8e360f8158697f7f",
        "client": "",
        "x": 150,
        "y": 3140,
        "wires": [
            [
                "4dd9dfe6ec66ea8a"
            ]
        ]
    },
    {
        "id": "4e5971eff340c315",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "/app18/websocket",
        "server": "8e360f8158697f7f",
        "client": "",
        "x": 1230,
        "y": 3140,
        "wires": []
    },
    {
        "id": "4dd9dfe6ec66ea8a",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "app18/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 3140,
        "wires": []
    },
    {
        "id": "d160f59369c8659d",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "app18/websocket in",
        "links": [
            "140cb3ab0326c48f",
            "1e710224.de723e",
            "224d9b05.f92104",
            "4bd9c85d44dcc83a"
        ],
        "x": 1095,
        "y": 3140,
        "wires": [
            [
                "4e5971eff340c315"
            ]
        ]
    },
    {
        "id": "33e54de74dad3417",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "Subscribe Readings In for app18/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 3200,
        "wires": [
            [
                "273db2592695c0d2"
            ]
        ]
    },
    {
        "id": "273db2592695c0d2",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "09dbbd36ba9b70c2",
        "name": "app18 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app18');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3200,
        "wires": [
            [
                "4e5971eff340c315"
            ]
        ]
    },
    {
        "id": "0de5b2a7bba9fe24",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "/app19",
        "url": "/app19",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 3320,
        "wires": [
            [
                "0ec795b80f6ed805"
            ]
        ]
    },
    {
        "id": "3876b9b86a450189",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 3320,
        "wires": []
    },
    {
        "id": "0ec795b80f6ed805",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "x": 690,
        "y": 3320,
        "wires": [
            [
                "3876b9b86a450189"
            ]
        ]
    },
    {
        "id": "1bb80a15b718f88f",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "/app19/websocket",
        "server": "851ad1139712421a",
        "client": "",
        "x": 150,
        "y": 3320,
        "wires": [
            [
                "6ad67f70424638d1"
            ]
        ]
    },
    {
        "id": "4da35451d3c25c99",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "/app19/websocket",
        "server": "851ad1139712421a",
        "client": "",
        "x": 1230,
        "y": 3320,
        "wires": []
    },
    {
        "id": "6ad67f70424638d1",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "app19/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 3320,
        "wires": []
    },
    {
        "id": "e56768527bdb29b5",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "app19/websocket in",
        "links": [
            "17911d7b243b53d8",
            "1e710224.de723e",
            "224d9b05.f92104",
            "c5a8d7a5c40cfe1f"
        ],
        "x": 1095,
        "y": 3320,
        "wires": [
            [
                "4da35451d3c25c99"
            ]
        ]
    },
    {
        "id": "150740e7cd0865cd",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "Subscribe Readings In for app19/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 3380,
        "wires": [
            [
                "9438da355fd08b18"
            ]
        ]
    },
    {
        "id": "9438da355fd08b18",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "727f4fbbc86c2387",
        "name": "app19 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app19');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3380,
        "wires": [
            [
                "4da35451d3c25c99"
            ]
        ]
    },
    {
        "id": "216bf465233b443c",
        "type": "http in",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "/app20",
        "url": "/app20",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 3500,
        "wires": [
            [
                "1f526f1dd1f88429"
            ]
        ]
    },
    {
        "id": "d3fa7f22ef77fe01",
        "type": "http response",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 3500,
        "wires": []
    },
    {
        "id": "1f526f1dd1f88429",
        "type": "subflow:30a1fe01775ecb93",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "x": 690,
        "y": 3500,
        "wires": [
            [
                "d3fa7f22ef77fe01"
            ]
        ]
    },
    {
        "id": "be6653b36220dd08",
        "type": "websocket in",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "/app20/websocket",
        "server": "38ebe4f99de3a030",
        "client": "",
        "x": 150,
        "y": 3500,
        "wires": [
            [
                "50fdf86cd18d40c9"
            ]
        ]
    },
    {
        "id": "bda6fa2a53fe3889",
        "type": "websocket out",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "/app20/websocket",
        "server": "38ebe4f99de3a030",
        "client": "",
        "x": 1230,
        "y": 3500,
        "wires": []
    },
    {
        "id": "50fdf86cd18d40c9",
        "type": "link out",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "app20/websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e"
        ],
        "x": 295,
        "y": 3500,
        "wires": []
    },
    {
        "id": "81a9e955be282bd7",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "app20/websocket in",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "28b324e672050559",
            "d860f470e71bb7bc"
        ],
        "x": 1095,
        "y": 3500,
        "wires": [
            [
                "bda6fa2a53fe3889"
            ]
        ]
    },
    {
        "id": "c68eed5750b7484a",
        "type": "link in",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "Subscribe Readings In for app20/websocket",
        "links": [
            "4ffc61b266cd720c"
        ],
        "x": 1095,
        "y": 3560,
        "wires": [
            [
                "3621238135f38bc8"
            ]
        ]
    },
    {
        "id": "3621238135f38bc8",
        "type": "function",
        "z": "9c854ea3.68416",
        "g": "49dd55f9fc61ca4b",
        "name": "app20 filterMqtt",
        "func": "let trayUpdateFilter = global.get('app20');\nlet sendTray = false;\nfor (let ii = 0; ii < trayUpdateFilter.length; ++ii)\n{\n    if (\"type\" in trayUpdateFilter[ii])\n    {\n        if (\"name\" in trayUpdateFilter[ii])\n        {\n            if ((msg.tray.type == trayUpdateFilter[ii].type) && (msg.tray.name == trayUpdateFilter[ii].name)) sendTray = true;\n        }\n        else\n        {\n            if (msg.tray.type == trayUpdateFilter[ii].type) sendTray = true;\n        }\n    }\n}\nif (!sendTray) return null;\nreturn {topic:'mqttUpdate',payload:{topic:'mqttUpdate',payload:msg.tray}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3560,
        "wires": [
            [
                "bda6fa2a53fe3889"
            ]
        ]
    },
    {
        "id": "2132a017.ba23f",
        "type": "mqtt out",
        "z": "8475ab9.3d26058",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1000,
        "y": 280,
        "wires": []
    },
    {
        "id": "ee0ee61b.770a18",
        "type": "subflow:e13648d6.d698c8",
        "z": "8475ab9.3d26058",
        "x": 990,
        "y": 240,
        "wires": []
    },
    {
        "id": "b6b8b063.9f62f",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        type                        :   1,  \n        name                        :   1,  \n        timeStamp                   :   1 \n    } \n};\nfor (var ii = 0; ii < msg.payload.tray.cube.length; ++ii)\n{\n    projectionFilter.projection[msg.payload.tray.cube[ii]] = 1;\n}\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            type: msg.payload.tray.type\n        },\n        {\n            name: msg.payload.tray.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.tray.startDate,\n                $lte: msg.payload.tray.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : msg.topic,\n    userID          : msg.userID,\n    route           : msg.route,\n    payload         : [queryFilter, projectionFilter],\n    tray            : msg.payload.tray,\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 740,
        "wires": [
            [
                "2a414756808bdf75"
            ]
        ]
    },
    {
        "id": "28d7885b.29ba58",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.route,\n        payload:{\n            topic           : msg.topic,\n            payload         : {tray: msg.tray, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nfor (var ii = 0; ii < numRecords; ++ii)\n{\n    trace[ii] = {timeStamp: records[ii].timeStamp};\n    for (var ij = 0; ij < msg.tray.cube.length; ++ij)\n    {\n        trace[ii][msg.tray.cube[ij]] = records[ii][msg.tray.cube[ij]];\n    }\n}\n\nreturn {\n    topic : msg.route,\n    payload:{\n        topic           : msg.topic,\n        payload         : {tray: msg.tray, trace: trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 740,
        "wires": [
            [
                "36088082.3139d"
            ]
        ]
    },
    {
        "id": "36088082.3139d",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "App slot",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "app01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app04",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app05",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app06",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app07",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app08",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app09",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app13",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app15",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app16",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app17",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app18",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app19",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app20",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 20,
        "x": 960,
        "y": 740,
        "wires": [
            [
                "59778395ede5a4c7"
            ],
            [
                "4e7534812ece0188"
            ],
            [
                "bb850a8861b13a5b"
            ],
            [
                "1dda53064a09cd78"
            ],
            [
                "e4135511c1cc5969"
            ],
            [
                "8599baab899f7150"
            ],
            [
                "96cf06f0a2d89cd0"
            ],
            [
                "f0c819a5ef3c22b3"
            ],
            [
                "c61ec847cccfd263"
            ],
            [
                "9a529efa5d2f7fb9"
            ],
            [
                "88b57c024289a59d"
            ],
            [
                "9accc45be888abb9"
            ],
            [
                "4cb55259556245ac"
            ],
            [
                "6814a9929d16adc9"
            ],
            [
                "61d469f49355a05b"
            ],
            [
                "a2437ec9be6ba631"
            ],
            [
                "4906f26e99f72586"
            ],
            [
                "140cb3ab0326c48f"
            ],
            [
                "c5a8d7a5c40cfe1f"
            ],
            [
                "28b324e672050559"
            ]
        ]
    },
    {
        "id": "4bda293b.6a4c38",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "Action Switch",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "renew",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getTraysFromDatabase",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 560,
        "y": 320,
        "wires": [
            [
                "d6984859.a267c8"
            ],
            [
                "332bf8c3d3829b95"
            ],
            [
                "332bf8c3d3829b95"
            ],
            [
                "332bf8c3d3829b95"
            ],
            [
                "cc1f29ab.67bb78"
            ],
            [
                "14b7f9da.2d7c86"
            ],
            [
                "6ec3b7fdba80c6cd"
            ]
        ]
    },
    {
        "id": "1e710224.de723e",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "Action Error Message Out",
        "mode": "link",
        "links": [
            "0821d52b1aa36b97",
            "1b18ffef25aa4c35",
            "505e5bfda43f39a4",
            "5bc80b04a8d619a7",
            "650bcc05cb5af395",
            "6654b362727148d8",
            "741eb3ceb69c8ec4",
            "a09b8b36e675cd9a",
            "b06f19970285e6f3",
            "b2dfe30f5e99e502",
            "c4305416805ce150",
            "d662030dd2e155d4",
            "f9bb75fa3e0a41d6",
            "9d02f123c6e784d3",
            "562b375d7d0b06bf",
            "f2cd4d12b66320a4",
            "06a0be334fa92f23",
            "2ea36d7022a308c8",
            "d160f59369c8659d",
            "e56768527bdb29b5",
            "81a9e955be282bd7"
        ],
        "x": 695,
        "y": 460,
        "wires": []
    },
    {
        "id": "cc1f29ab.67bb78",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "readDatabase out",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 695,
        "y": 340,
        "wires": []
    },
    {
        "id": "c4595efc.a717b",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive in",
        "links": [
            "cc1f29ab.67bb78",
            "8257a0f.6bb886",
            "a66aeb44.77e748",
            "e826b9af.41ca18",
            "38378280.30819e",
            "1ba08149.e5642f",
            "c7ccca02.902f08",
            "8a054338.b6be3",
            "7ceba2d4.4dcf3c",
            "721a7865.6ff7e8",
            "3d600dd.1fe0cf2",
            "d958fbdd.fe1e48",
            "a92d4c9a.7f5e4"
        ],
        "x": 95,
        "y": 740,
        "wires": [
            [
                "b6b8b063.9f62f"
            ]
        ]
    },
    {
        "id": "e6d1a4ad.2186e8",
        "type": "subflow:fee416c.fb205e8",
        "z": "8475ab9.3d26058",
        "x": 250,
        "y": 420,
        "wires": [
            [
                "4bda293b.6a4c38"
            ],
            [
                "1e710224.de723e"
            ]
        ]
    },
    {
        "id": "28ebc7b7.46b498",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Renew Token",
        "func": "msg.token.expDate = new Date().getTime() + msg.token.timeoutMin * 60000;\ndelete msg.token['iat']\nmsg.payload = JSON.parse(JSON.stringify(msg.token));\ndelete msg['token'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 820,
        "wires": [
            [
                "5b671f90.f02c1"
            ]
        ]
    },
    {
        "id": "5b671f90.f02c1",
        "type": "JsonWebToken",
        "z": "8475ab9.3d26058",
        "name": "encrypt token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 400,
        "y": 820,
        "wires": [
            [
                "7569e60e.54a608"
            ]
        ]
    },
    {
        "id": "7569e60e.54a608",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Renew Cookies",
        "func": "var newMsg = \n{\n    topic : 'renew',\n    payload: \n    {\n        topic       : 'renew',\n        userID      : msg.userID,\n        role        : msg.token,\n        expDate     : msg.payload.expDate.toString(),\n        username    : msg.payload.username\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 820,
        "wires": [
            [
                "224d9b05.f92104"
            ]
        ]
    },
    {
        "id": "f4326ad5.3e47e8",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Setup Renew in",
        "links": [
            "14b7f9da.2d7c86",
            "ca97d41d99a6b5df"
        ],
        "x": 95,
        "y": 820,
        "wires": [
            [
                "28ebc7b7.46b498"
            ]
        ]
    },
    {
        "id": "14b7f9da.2d7c86",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "renew out",
        "links": [
            "f4326ad5.3e47e8"
        ],
        "x": 695,
        "y": 380,
        "wires": []
    },
    {
        "id": "224d9b05.f92104",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "renew out",
        "mode": "link",
        "links": [
            "0821d52b1aa36b97",
            "1b18ffef25aa4c35",
            "505e5bfda43f39a4",
            "5bc80b04a8d619a7",
            "650bcc05cb5af395",
            "6654b362727148d8",
            "741eb3ceb69c8ec4",
            "a09b8b36e675cd9a",
            "b06f19970285e6f3",
            "b2dfe30f5e99e502",
            "c4305416805ce150",
            "d662030dd2e155d4",
            "f9bb75fa3e0a41d6",
            "9d02f123c6e784d3",
            "562b375d7d0b06bf",
            "f2cd4d12b66320a4",
            "06a0be334fa92f23",
            "2ea36d7022a308c8",
            "d160f59369c8659d",
            "e56768527bdb29b5",
            "81a9e955be282bd7"
        ],
        "x": 695,
        "y": 820,
        "wires": []
    },
    {
        "id": "d6984859.a267c8",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID;\nnewMsg.username = msg.token.username;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": [
            [
                "2132a017.ba23f",
                "ee0ee61b.770a18"
            ]
        ]
    },
    {
        "id": "332bf8c3d3829b95",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "2132a017.ba23f"
            ]
        ]
    },
    {
        "id": "be962d884f5fbb6e",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Action Permission Input",
        "links": [
            "246b55ad701ee2b8",
            "304709e94e922540",
            "9b8003862051043d",
            "f98a5f3af7f7dbe8",
            "38c6c636e8332a69",
            "0eee0874c7a22b2b",
            "5a8fcfe3f536d31f",
            "c3fe489d56f32ea2",
            "7dfa3bab90cbde7c",
            "14d04246c9a34554",
            "2d05b8d1e252e87e",
            "d2e21cd7ddfe525b",
            "7f1b3a8b331f1606",
            "6b00666abab453cc",
            "90e701d7432d9cf2",
            "ca97d41d99a6b5df",
            "b21c2249ae0ed814",
            "9b871f6a4e75c8cf",
            "ae0f6f2e0ceb62ce",
            "51ba731db5e7cd81",
            "cc72650eba9a8cf5",
            "4dd9dfe6ec66ea8a",
            "6ad67f70424638d1",
            "50fdf86cd18d40c9"
        ],
        "x": 95,
        "y": 420,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "6ec3b7fdba80c6cd",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "getTray Out",
        "links": [
            "99b8a5b80e635f1f"
        ],
        "x": 695,
        "y": 420,
        "wires": []
    },
    {
        "id": "d58c386de0bd067c",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Parse Tray",
        "func": "var trays = [];\nfor( var key in msg.payload ) \n{\n    if( msg.payload.hasOwnProperty(key) ) \n    {\n        delete msg.payload[key][\"_id\"];\n        trays.push(msg.payload[key]);    \n    }\n}\nvar newMsg = \n{\n    topic   :   msg.route,\n    payload:\n    {\n        topic   :   msg.topic,\n        userID  :   msg.userID,\n        payload :   trays\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 740,
        "wires": [
            [
                "91c50f4c4fdcb5ce"
            ]
        ]
    },
    {
        "id": "99b8a5b80e635f1f",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "find Tray In",
        "links": [
            "6ec3b7fdba80c6cd"
        ],
        "x": 1235,
        "y": 740,
        "wires": [
            [
                "eaba8e41ba4397d9"
            ]
        ]
    },
    {
        "id": "91c50f4c4fdcb5ce",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "App Slot ",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "app01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app04",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app05",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app06",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app07",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app08",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app09",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app13",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app15",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app16",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app17",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app18",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app19",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app20",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 20,
        "x": 1800,
        "y": 740,
        "wires": [
            [
                "406fb374e596c7f4"
            ],
            [
                "517badda418a1087"
            ],
            [
                "606b8a8d9e46c3a3"
            ],
            [
                "8c6eb81005ea0844"
            ],
            [
                "fce6b0dd552bb18e"
            ],
            [
                "01e3449414173d74"
            ],
            [
                "0bcad73efaae1910"
            ],
            [
                "e323f5659177d346"
            ],
            [
                "e04da5697a7de522"
            ],
            [
                "05c19b636cfa20c7"
            ],
            [
                "15cf5ad2963f839e"
            ],
            [
                "36157422c764c912"
            ],
            [
                "e58d7a2963dda9fe"
            ],
            [
                "7512b0dc86195537"
            ],
            [
                "be0cbc5bf5ef80c7"
            ],
            [
                "23ec125ff56af02d"
            ],
            [
                "7872c4f66d7f3cfd"
            ],
            [
                "4bd9c85d44dcc83a"
            ],
            [
                "17911d7b243b53d8"
            ],
            [
                "d860f470e71bb7bc"
            ]
        ]
    },
    {
        "id": "2a414756808bdf75",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 510,
        "y": 740,
        "wires": [
            [
                "28d7885b.29ba58"
            ]
        ]
    },
    {
        "id": "eaba8e41ba4397d9",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "trays",
        "operation": "find.toArray",
        "x": 1400,
        "y": 740,
        "wires": [
            [
                "d58c386de0bd067c"
            ]
        ]
    },
    {
        "id": "406fb374e596c7f4",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app01-getTray",
        "mode": "link",
        "links": [
            "c4305416805ce150",
            "03a7a95165e7cdab"
        ],
        "x": 1955,
        "y": 400,
        "wires": []
    },
    {
        "id": "59778395ede5a4c7",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app01-archive",
        "mode": "link",
        "links": [
            "c4305416805ce150",
            "03a7a95165e7cdab"
        ],
        "x": 1115,
        "y": 400,
        "wires": []
    },
    {
        "id": "4e7534812ece0188",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app02-archive",
        "mode": "link",
        "links": [
            "1b18ffef25aa4c35"
        ],
        "x": 1115,
        "y": 440,
        "wires": []
    },
    {
        "id": "517badda418a1087",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app02-getTray",
        "mode": "link",
        "links": [
            "1b18ffef25aa4c35"
        ],
        "x": 1955,
        "y": 440,
        "wires": []
    },
    {
        "id": "bb850a8861b13a5b",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app03-archive",
        "mode": "link",
        "links": [
            "505e5bfda43f39a4"
        ],
        "x": 1115,
        "y": 480,
        "wires": []
    },
    {
        "id": "1dda53064a09cd78",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app04-archive",
        "mode": "link",
        "links": [
            "d662030dd2e155d4"
        ],
        "x": 1115,
        "y": 520,
        "wires": []
    },
    {
        "id": "e4135511c1cc5969",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app05-archive",
        "mode": "link",
        "links": [
            "b06f19970285e6f3"
        ],
        "x": 1115,
        "y": 560,
        "wires": []
    },
    {
        "id": "8599baab899f7150",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app06-archive",
        "mode": "link",
        "links": [
            "0821d52b1aa36b97"
        ],
        "x": 1115,
        "y": 600,
        "wires": []
    },
    {
        "id": "606b8a8d9e46c3a3",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app03-getTray",
        "mode": "link",
        "links": [
            "505e5bfda43f39a4"
        ],
        "x": 1955,
        "y": 480,
        "wires": []
    },
    {
        "id": "8c6eb81005ea0844",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app04-getTray",
        "mode": "link",
        "links": [
            "d662030dd2e155d4"
        ],
        "x": 1955,
        "y": 520,
        "wires": []
    },
    {
        "id": "fce6b0dd552bb18e",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app05-getTray",
        "mode": "link",
        "links": [
            "b06f19970285e6f3"
        ],
        "x": 1955,
        "y": 560,
        "wires": []
    },
    {
        "id": "01e3449414173d74",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app06-getTray",
        "mode": "link",
        "links": [
            "0821d52b1aa36b97"
        ],
        "x": 1955,
        "y": 600,
        "wires": []
    },
    {
        "id": "96cf06f0a2d89cd0",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app07-archive",
        "mode": "link",
        "links": [
            "a09b8b36e675cd9a"
        ],
        "x": 1115,
        "y": 640,
        "wires": []
    },
    {
        "id": "f0c819a5ef3c22b3",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app08-archive",
        "mode": "link",
        "links": [
            "6654b362727148d8"
        ],
        "x": 1115,
        "y": 680,
        "wires": []
    },
    {
        "id": "c61ec847cccfd263",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app09-archive",
        "mode": "link",
        "links": [
            "741eb3ceb69c8ec4"
        ],
        "x": 1115,
        "y": 720,
        "wires": []
    },
    {
        "id": "9a529efa5d2f7fb9",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app10-archive",
        "mode": "link",
        "links": [
            "b2dfe30f5e99e502"
        ],
        "x": 1115,
        "y": 760,
        "wires": []
    },
    {
        "id": "0bcad73efaae1910",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app07-getTray",
        "mode": "link",
        "links": [
            "a09b8b36e675cd9a"
        ],
        "x": 1955,
        "y": 640,
        "wires": []
    },
    {
        "id": "e323f5659177d346",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app08-getTray",
        "mode": "link",
        "links": [
            "6654b362727148d8"
        ],
        "x": 1955,
        "y": 680,
        "wires": []
    },
    {
        "id": "e04da5697a7de522",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app09-getTray",
        "mode": "link",
        "links": [
            "741eb3ceb69c8ec4"
        ],
        "x": 1955,
        "y": 720,
        "wires": []
    },
    {
        "id": "05c19b636cfa20c7",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app10-getTray",
        "mode": "link",
        "links": [
            "b2dfe30f5e99e502"
        ],
        "x": 1955,
        "y": 760,
        "wires": []
    },
    {
        "id": "46783f1b68148717",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 190,
        "y": 260,
        "wires": [
            [
                "0caca95977060f80"
            ]
        ]
    },
    {
        "id": "0caca95977060f80",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "4bda293b.6a4c38"
            ]
        ]
    },
    {
        "id": "f92124c5033966a3",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Action Switch In",
        "links": [
            "d6650619c53069f0",
            "82cabe47116325a6",
            "508d4a1d11408546"
        ],
        "x": 95,
        "y": 260,
        "wires": [
            [
                "46783f1b68148717"
            ]
        ]
    },
    {
        "id": "88b57c024289a59d",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app11-archive",
        "mode": "link",
        "links": [
            "f9bb75fa3e0a41d6"
        ],
        "x": 1115,
        "y": 800,
        "wires": []
    },
    {
        "id": "9accc45be888abb9",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app12-archive",
        "mode": "link",
        "links": [
            "5bc80b04a8d619a7"
        ],
        "x": 1115,
        "y": 840,
        "wires": []
    },
    {
        "id": "15cf5ad2963f839e",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app11-getTray",
        "mode": "link",
        "links": [
            "f9bb75fa3e0a41d6"
        ],
        "x": 1955,
        "y": 800,
        "wires": []
    },
    {
        "id": "36157422c764c912",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app12-getTray",
        "mode": "link",
        "links": [
            "5bc80b04a8d619a7"
        ],
        "x": 1955,
        "y": 840,
        "wires": []
    },
    {
        "id": "4cb55259556245ac",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app13-archive",
        "mode": "link",
        "links": [
            "9d02f123c6e784d3"
        ],
        "x": 1115,
        "y": 880,
        "wires": []
    },
    {
        "id": "6814a9929d16adc9",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app14-archive",
        "mode": "link",
        "links": [
            "562b375d7d0b06bf"
        ],
        "x": 1115,
        "y": 920,
        "wires": []
    },
    {
        "id": "61d469f49355a05b",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app15-archive",
        "mode": "link",
        "links": [
            "f2cd4d12b66320a4"
        ],
        "x": 1115,
        "y": 960,
        "wires": []
    },
    {
        "id": "a2437ec9be6ba631",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app16-archive",
        "mode": "link",
        "links": [
            "06a0be334fa92f23"
        ],
        "x": 1115,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4906f26e99f72586",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app17-archive",
        "mode": "link",
        "links": [
            "2ea36d7022a308c8"
        ],
        "x": 1115,
        "y": 1040,
        "wires": []
    },
    {
        "id": "140cb3ab0326c48f",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app18-archive",
        "mode": "link",
        "links": [
            "d160f59369c8659d"
        ],
        "x": 1115,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c5a8d7a5c40cfe1f",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app19-archive",
        "mode": "link",
        "links": [
            "e56768527bdb29b5"
        ],
        "x": 1115,
        "y": 1120,
        "wires": []
    },
    {
        "id": "28b324e672050559",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app20-archive",
        "mode": "link",
        "links": [
            "81a9e955be282bd7"
        ],
        "x": 1115,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e58d7a2963dda9fe",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app13-getTray",
        "mode": "link",
        "links": [
            "9d02f123c6e784d3"
        ],
        "x": 1955,
        "y": 880,
        "wires": []
    },
    {
        "id": "7512b0dc86195537",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app14-getTray",
        "mode": "link",
        "links": [
            "562b375d7d0b06bf"
        ],
        "x": 1955,
        "y": 920,
        "wires": []
    },
    {
        "id": "be0cbc5bf5ef80c7",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app15-getTray",
        "mode": "link",
        "links": [
            "f2cd4d12b66320a4"
        ],
        "x": 1955,
        "y": 960,
        "wires": []
    },
    {
        "id": "23ec125ff56af02d",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app16-getTray",
        "mode": "link",
        "links": [
            "06a0be334fa92f23"
        ],
        "x": 1955,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7872c4f66d7f3cfd",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app17-getTray",
        "mode": "link",
        "links": [
            "2ea36d7022a308c8"
        ],
        "x": 1955,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4bd9c85d44dcc83a",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app18-getTray",
        "mode": "link",
        "links": [
            "d160f59369c8659d"
        ],
        "x": 1955,
        "y": 1080,
        "wires": []
    },
    {
        "id": "17911d7b243b53d8",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app19-getTray",
        "mode": "link",
        "links": [
            "e56768527bdb29b5"
        ],
        "x": 1955,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d860f470e71bb7bc",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "app20-getTray",
        "mode": "link",
        "links": [
            "81a9e955be282bd7"
        ],
        "x": 1955,
        "y": 1160,
        "wires": []
    },
    {
        "id": "6c0d5efd35302d9d",
        "type": "subflow:3fec913b325ae6ff",
        "z": "9d06e02130edba28",
        "name": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "c3a3938fe0d7db5b"
            ]
        ]
    },
    {
        "id": "e43a55946679b0a5",
        "type": "http in",
        "z": "9d06e02130edba28",
        "name": "/myapps",
        "url": "/myapps",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "6c0d5efd35302d9d"
            ]
        ]
    },
    {
        "id": "c3a3938fe0d7db5b",
        "type": "function",
        "z": "9d06e02130edba28",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['myapps'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 180,
        "wires": [
            [
                "4a1f968535253c37"
            ]
        ]
    },
    {
        "id": "a6c756b794cc979d",
        "type": "mongodb3 in",
        "z": "9d06e02130edba28",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "Find myapps",
        "collection": "users",
        "operation": "findOne",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "6810d3778086e921"
            ]
        ]
    },
    {
        "id": "8ee067612d327829",
        "type": "function",
        "z": "9d06e02130edba28",
        "name": "Get MyApp config",
        "func": "msg.payload = [{username:msg.token.username}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "a6c756b794cc979d"
            ]
        ]
    },
    {
        "id": "6810d3778086e921",
        "type": "function",
        "z": "9d06e02130edba28",
        "name": "Parse MyApps",
        "func": "msg.payload['config'] = JSON.stringify(msg.payload.myapps);\nmsg.payload['title'] = msg.payload.myapps.title;\nmsg.payload['icon'] = msg.payload.myapps.icon\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "f749da017b9699d8"
            ]
        ]
    },
    {
        "id": "39c68323320570f3",
        "type": "websocket in",
        "z": "9d06e02130edba28",
        "name": "/myapps/websocket",
        "server": "491966e50b6806ee",
        "client": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "ca97d41d99a6b5df"
            ]
        ]
    },
    {
        "id": "400637c4ac25035b",
        "type": "websocket out",
        "z": "9d06e02130edba28",
        "name": "/myapps/websocket",
        "server": "491966e50b6806ee",
        "client": "",
        "x": 390,
        "y": 380,
        "wires": []
    },
    {
        "id": "ca97d41d99a6b5df",
        "type": "link out",
        "z": "9d06e02130edba28",
        "name": "myapps websocket out",
        "mode": "link",
        "links": [
            "be962d884f5fbb6e",
            "f4326ad5.3e47e8"
        ],
        "x": 295,
        "y": 300,
        "wires": []
    },
    {
        "id": "650bcc05cb5af395",
        "type": "link in",
        "z": "9d06e02130edba28",
        "name": "myapps websocket out",
        "links": [
            "224d9b05.f92104",
            "1e710224.de723e"
        ],
        "x": 255,
        "y": 380,
        "wires": [
            [
                "400637c4ac25035b"
            ]
        ]
    },
    {
        "id": "4dd2dca3890a8d96",
        "type": "template",
        "z": "9d06e02130edba28",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\"  style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\" id='menuCardBody'>\n            </div>\n        </div>\n    </div>\n{{{payload.html.user}}}\n",
        "output": "str",
        "x": 670,
        "y": 300,
        "wires": [
            [
                "61719ce236955ca5"
            ]
        ]
    },
    {
        "id": "09c724f5a5f6cbc4",
        "type": "template",
        "z": "9d06e02130edba28",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 220,
        "wires": [
            [
                "46ffcef8de7f8517"
            ]
        ]
    },
    {
        "id": "46ffcef8de7f8517",
        "type": "template",
        "z": "9d06e02130edba28",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class='card' id='userCardId'>\n        <div class='card-body' align=\"center\">\n            <table width=\"100%\">\n                <tr>\n                    <td  align=\"left\">\n                         <span class='card-text' style='color:black;'>User:</span>\n                    </td>\n                    <td  align=\"right\">\n                         <span class='card-text' id='usernameId'></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td  align=\"left\">\n                        <span class='card-text' style='color:black;'>Time left:</span>\n                    </td>\n                    <td  align=\"right\">\n                         <span class='card-text' id='expTimeId'></span>\n                    </td>\n                </tr>\n            </table>\n            <table width=\"100%\">\n                <tr>\n                    <td width=\"30%\">\n                        <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                    </td>\n                    <td width=\"5%\"></td>\n                    <td width=\"30%\">\n                        <button class='btn btn-block card-button big-text' id='downloadTokenButton' onclick=\"downloadToken()\" >Token</button>\n                    </td>\n                    <td width=\"5%\"></td>\n                    <td width=\"30%\">\n                        <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 680,
        "y": 260,
        "wires": [
            [
                "4dd2dca3890a8d96"
            ]
        ]
    },
    {
        "id": "f749da017b9699d8",
        "type": "template",
        "z": "9d06e02130edba28",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            getCreds();\n            setInterval(function(){getCreds();}, 1000);\n            let config = JSON.parse('{{{payload.config}}}')\n            let menuCardBody = document.getElementById('menuCardBody')\n            for (let ii = 0; ii < config.apps.length; ++ii)\n            {\n                let rowDiv = document.createElement('div');\n                rowDiv.setAttribute('class', 'row');\n                if (ii > 0) rowDiv.setAttribute('style', 'padding-top:25px;');\n                menuCardBody.appendChild(rowDiv);\n\n                let colDiv = document.createElement('div');\n                colDiv.setAttribute('class', 'col-md-12');\n                rowDiv.appendChild(colDiv);\n\n                let link = document.createElement('a');\n                link.setAttribute('class', 'btn btn-block card-button medium-text');\n                link.setAttribute('href', config.apps[ii].url);\n                colDiv.appendChild(link);\n\n                let table = document.createElement('table');\n                table.setAttribute('width', '100%');\n                link.appendChild(table);\n\n                let tableRow = document.createElement('tr');\n                table.appendChild(tableRow);\n\n                let tableRowCol1 =  document.createElement('td');\n                tableRowCol1.setAttribute('width', '10%');\n                tableRowCol1.setAttribute('align', 'left%');\n                tableRow.appendChild(tableRowCol1);\n\n                let tableRowCol1Img = document.createElement('img');\n                tableRowCol1Img.setAttribute('src', config.apps[ii].icon);\n                tableRowCol1Img.setAttribute('height', '50px');\n                tableRowCol1Img.setAttribute('width', '50px');\n                tableRowCol1.appendChild(tableRowCol1Img); \n\n                let tableRowCol2 =  document.createElement('td');\n                tableRowCol2.setAttribute('width', '90%');\n                tableRowCol2.setAttribute('align', 'center%');\n                tableRowCol2.innerHTML = config.apps[ii].title\n                tableRow.appendChild(tableRowCol2);\n            }\n            \n        }\n\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 690,
        "y": 140,
        "wires": [
            [
                "08c2cdaa03ef28a1"
            ]
        ]
    },
    {
        "id": "08c2cdaa03ef28a1",
        "type": "template",
        "z": "9d06e02130edba28",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = box + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = box + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = box + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = box + \"Role=\" + msg.role;\n            document.cookie = box + \"ExpDate=\" + msg.expDate;\n            document.cookie = box + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", getCookie('Username') + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "09c724f5a5f6cbc4"
            ]
        ]
    },
    {
        "id": "cdb2c0c829c6b823",
        "type": "subflow:ca529822.9112f8",
        "z": "9d06e02130edba28",
        "name": "",
        "x": 990,
        "y": 340,
        "wires": []
    },
    {
        "id": "61719ce236955ca5",
        "type": "template",
        "z": "9d06e02130edba28",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/blmc-logo.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title\">\n                        <span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <img src=\"{{payload.icon}}\" height=\"75px\"/>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 680,
        "y": 340,
        "wires": [
            [
                "c3c25cb446bb856b"
            ]
        ]
    },
    {
        "id": "c3c25cb446bb856b",
        "type": "subflow:74b74739cc6e49af",
        "z": "9d06e02130edba28",
        "name": "",
        "x": 840,
        "y": 340,
        "wires": [
            [
                "cdb2c0c829c6b823"
            ]
        ]
    },
    {
        "id": "4a1f968535253c37",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9d06e02130edba28",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "8ee067612d327829"
            ]
        ]
    },
    {
        "id": "c634a8d3.297848",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "eeb6f237e7b71e56"
            ]
        ]
    },
    {
        "id": "9c22cdee29daadc2",
        "type": "subflow:ca529822.9112f8",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "54a7987d3e160504",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/core",
        "url": "/core",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "0ae559dfc1cd42e5"
            ]
        ]
    },
    {
        "id": "bcc9d059a6bc454a",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Core Applications",
        "output": "str",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "bc0420f20d9cbb1e"
            ]
        ]
    },
    {
        "id": "501167e444420726",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "core.png",
        "output": "str",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "bcc9d059a6bc454a"
            ]
        ]
    },
    {
        "id": "36b3529f9403ec99",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView','coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 460,
        "wires": [
            [
                "eef7526027034b14"
            ]
        ]
    },
    {
        "id": "1aa5a01e79a89464",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <table width=\"100%\">\n                    <tr>\n                        <td width=\"45%\" style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/access-log\">\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Access Log\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                        <td width=\"10%\"></td>\n                        <td width=\"45%\" style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/settings-log\" >\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Settings Log\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width=\"45%\" style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/restAccess-log\">\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            RESTful Access Log\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                        <td width=\"10%\"></td>\n                        <td width=\"45%\" style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/core\" >\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            RESTful Settings Log\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/scalarPlotter\" >\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Scalar Plotter\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                        <td></td>\n                        <td style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/scalarArchivePlotter\" >\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Scalar Archive Plotter\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/scalarViewer\" >\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\" width=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Scalar Viewer\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                        <td></td>\n                        <td style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/scalarAlarmScanner\">\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/alarm.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Alarm Scanner\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/vectorPlotter\" >\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Vector Plotter\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                        <td></td>\n                        <td style=\"padding-bottom:25px;\">\n                            <a class=\"btn btn-block card-button medium-text\" href=\"/vectorArchivePlotter\" >\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td width=\"25%\" align='left'>\n                                            <img src=\"/img/core.png\" height=\"50px\"/>\n                                        </td>\n                                        <td width=\"75%\" align='center'>\n                                            Vector Archive Plotter\n                                        </td>\n                                    </tr>\n                                </table>\n                            </a>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n{{{payload.html.user}}}\n ",
        "output": "str",
        "x": 930,
        "y": 460,
        "wires": [
            [
                "b8beb9d4a4852b99"
            ]
        ]
    },
    {
        "id": "0305b5890a8d7283",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 580,
        "y": 460,
        "wires": [
            [
                "80d61259105f4c7f"
            ]
        ]
    },
    {
        "id": "093e2704d0cd3eb3",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 940,
        "y": 420,
        "wires": [
            [
                "1aa5a01e79a89464"
            ]
        ]
    },
    {
        "id": "bc0420f20d9cbb1e",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            getCreds();\n            setInterval(function(){getCreds();}, 1000);\n//            initLaunchMenu();\n            \n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 590,
        "y": 380,
        "wires": [
            [
                "673a1835af1e335a"
            ]
        ]
    },
    {
        "id": "673a1835af1e335a",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = box + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = box + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = box + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = box + \"Role=\" + msg.role;\n            document.cookie = box + \"ExpDate=\" + msg.expDate;\n            document.cookie = box + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", box + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 590,
        "y": 420,
        "wires": [
            [
                "0305b5890a8d7283"
            ]
        ]
    },
    {
        "id": "80d61259105f4c7f",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.launcher",
        "field": "payload.html.launcher",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"col-md-3\" align=\"center\">\n                                <span class='card-text' >Core App</span>\n                            </div>\n                            <div class=\"col-md-9\" align=\"center\">\n                                <select class=\"app-dropdown-select big-text\" id=\"application\" onchange=\"appSelected()\">\n                                    <option value=\"none\">none</option>\n                                    <option value=\"access-log\">Access Log</option>\n                                    <option value=\"settings-log\">Settings Log</option>\n                                    <option value=\"scalarPlotter\">Scalar Plotter</option>\n                                    <option value=\"scalarArchivePlotter\">Scalar Archive Plotter</option>\n                                    <option value=\"scalarViewer\">Scalar Viewer</option>\n                                    <option value=\"scalarAlarmScanner\">Scalar Alarm Scanner</option>\n                                    <option value=\"vectorPlotter\">Vector Plotter</option>\n                                    <option value=\"vectorArchivePlotter\">Vector Archive Plotter</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n<!--                \n                \n                    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarPlotter\" >Scalar Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarArchivePlotter\" >Scalar Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarViewer\" >Scalar Viewer</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarAlarmScanner\" >Scalar Alarm Scanner</a> \n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorPlotter\" >Vector Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorArchivePlotter\" >Vector Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/access-log\" >Access Log</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/settings-log\" >Settings Log</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/apps\" >Custom App Index</a> \n            </div>\n        </div>\n    </div>\n    \n-->",
        "output": "str",
        "x": 960,
        "y": 380,
        "wires": [
            [
                "093e2704d0cd3eb3"
            ]
        ]
    },
    {
        "id": "f1d40c45ecd8a87e",
        "type": "websocket in",
        "z": "a858ad3a.95706",
        "name": "/core/websocket",
        "server": "e2674addbc6ccaef",
        "client": "",
        "x": 140,
        "y": 660,
        "wires": [
            [
                "22ec08a66c477512"
            ]
        ]
    },
    {
        "id": "b204425f16f67466",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Renew Token",
        "func": "msg.token.expDate = new Date().getTime() + msg.token.timeoutMin * 60000;\ndelete msg.token['iat']\nmsg.payload = JSON.parse(JSON.stringify(msg.token));\ndelete msg['token'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 620,
        "wires": [
            [
                "b7503a417361a0ae"
            ]
        ]
    },
    {
        "id": "b7503a417361a0ae",
        "type": "JsonWebToken",
        "z": "a858ad3a.95706",
        "name": "encrypt token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 740,
        "y": 620,
        "wires": [
            [
                "6ee42571a1da7c50"
            ]
        ]
    },
    {
        "id": "6ee42571a1da7c50",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Renew Cookies",
        "func": "var newMsg = \n{\n    topic : 'renew',\n    payload: \n    {\n        topic       : 'renew',\n        userID      : msg.userID,\n        role        : msg.token,\n        expDate     : msg.payload.expDate.toString(),\n        username    : msg.payload.username\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 620,
        "wires": [
            [
                "91eeea509dde57c9"
            ]
        ]
    },
    {
        "id": "91eeea509dde57c9",
        "type": "websocket out",
        "z": "a858ad3a.95706",
        "name": "/core/websocket",
        "server": "e2674addbc6ccaef",
        "client": "",
        "x": 1120,
        "y": 660,
        "wires": []
    },
    {
        "id": "b8beb9d4a4852b99",
        "type": "subflow:c57c2f9e65e6cb70",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "9c42cf48893ca54d"
            ]
        ]
    },
    {
        "id": "9c42cf48893ca54d",
        "type": "subflow:ca529822.9112f8",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 1230,
        "y": 460,
        "wires": []
    },
    {
        "id": "eef7526027034b14",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "501167e444420726"
            ]
        ]
    },
    {
        "id": "22ec08a66c477512",
        "type": "subflow:fee416c.fb205e8",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 350,
        "y": 660,
        "wires": [
            [
                "b204425f16f67466"
            ],
            [
                "91eeea509dde57c9"
            ]
        ]
    },
    {
        "id": "eeb6f237e7b71e56",
        "type": "subflow:3fec913b325ae6ff",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 280,
        "y": 100,
        "wires": [
            [
                "19310ace.c992d5"
            ]
        ]
    },
    {
        "id": "0ae559dfc1cd42e5",
        "type": "subflow:3fec913b325ae6ff",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "36b3529f9403ec99"
            ]
        ]
    },
    {
        "id": "19310ace.c992d5",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky-Lite",
        "output": "str",
        "x": 430,
        "y": 100,
        "wires": [
            [
                "680bc28.3fd903c"
            ]
        ]
    },
    {
        "id": "7bd0e32c.fe3bdc",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 680,
        "y": 100,
        "wires": [
            [
                "bb7837ce.8d7338"
            ]
        ]
    },
    {
        "id": "680bc28.3fd903c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" >\n        <table width=\"900px\" align=\"center\">\n            <tr>\n                <td width=\"100%\">\n                    <div style=\"width: 900px; height: 558px; overflow:hidden; max-height:640px;\"  >\n                        <iframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vTvaSkRg0LSzRCaLo8s7FXvtXSCIhw56TauE_OyIFLfm_wElAYW46JS7TPbR2htV_tjSCBaf08AnG67/embed?start=true&loop=true&delayms=7000\" frameborder=\"0\" width=\"100%\" height=\"598px\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>\n                    </div>\n                </td>\n            </tr>\n        </table>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a\n                                href=\"https://www.undp.org/sustainable-development-goals#good-health\"\n                                target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a\n                                href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\"\n                                target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a\n                                href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\"\n                                target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <p style=\"font-size: 200%;color:white;\">Contact us at <a href=\"mailto: info@bl-mc.se\" style=\"color:#fcc200;\">info@bl-mc.se</a></p>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "7bd0e32c.fe3bdc"
            ]
        ]
    },
    {
        "id": "4eb98e2d.07b03",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron navbar-fixed-top\" style=\"background-color:var(--color4);color: var(--color1);padding-top:10px; padding-bottom:10px;\" width=\"100%\" >\n        <div class='row'>\n            <div class='col-md-2' align='left'>\n                <img src=\"/img/blmc-logo.png\" height=\"100px\"/>\n            </div>\n            <div class='col-md-8' align='center'>\n                <h1 class=\"jumbotron-title big-text bold-text\">\n                    <span>Blinky-Lite<sup>TM</sup></span>\n                </h1>\n            </div>\n            <div class='col-md-2' align='right'>\n                <a href='/myapps'>\n                    <img src=\"/img/apps.png\" height=\"75px\"/>\n                </a>                \n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 940,
        "y": 100,
        "wires": [
            [
                "9c22cdee29daadc2"
            ]
        ]
    },
    {
        "id": "bb7837ce.8d7338",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #083357;\n          --color2: #487895;\n          --color3: #6b859a;\n          --color4: #fdfcfa;\n          --color5: #ffffff;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: var(--color1) !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: var(--color4);\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        .btn-primary, .btn-primary:active, .btn-primary:visited \n        {\n            background-color: var(--color1) !important;\n            color : color4 !important;\n            font-size: 200% !important;\n        }\n        .btn-primary:hover \n        {\n            background-color: var(--color1) !important;\n            color : var(--color4) !important;\n            font-size: 200% !important;\n        }\n        a:hover \n        { \n            color: var(--color2);\n        }\n        .jumbotron \n        {\n          background-color: var(--color1) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: color4;\n          background-color: var(--color1);\n        }\n        .card\n        {\n          background-color: var(--color1) !important;\n          text-align: center;\n          padding-left:5px;\n          padding-right:5px;\n          padding-bottom:5px;\n\n        }\n        .card-body\n        {\n          background-color: color4;\n          text-align: center;\n        }\n        .card-button\n        {\n          color: var(--color4) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: color4;\n          font-size: 200%;\n          font-style:oblique;\n          font-weight: var(--bold-text);\n         }\n        .card-text\n        {\n          color: var(--color1);\n          font-size: 150%;\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .justify\n        {\n            text-align: justify;\n            text-justify: inter-word;\n        }\n",
        "output": "str",
        "x": 810,
        "y": 100,
        "wires": [
            [
                "4eb98e2d.07b03"
            ]
        ]
    },
    {
        "id": "5d93334c.7b160c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "box",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "box",
        "payload": "BOX",
        "payloadType": "env",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "e06b15ee.c3bf78"
            ]
        ]
    },
    {
        "id": "e06b15ee.c3bf78",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Box Name",
        "func": "global.set(msg.topic, msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4caf3fb1.f3572",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "maxDbSize",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "maxDbSize",
        "payload": "MAXDBSIZE",
        "payloadType": "env",
        "x": 140,
        "y": 720,
        "wires": [
            [
                "2208dd06.5d2ba2"
            ]
        ]
    },
    {
        "id": "2208dd06.5d2ba2",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save maxDbSize",
        "func": "global.set(msg.topic,Number(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4627d72c.810368",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "Prune every 2 hours",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "e6a006f16634c572"
            ]
        ]
    },
    {
        "id": "cdfc8294.43d83",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Number of Records to cut",
        "func": "var maxDbSize = global.get('maxDbSize');\nif (maxDbSize == undefined) return null;\nif (msg.payload.size < maxDbSize) return null;\nvar cutRecords = Math.round( (msg.payload.size - 0.9 * maxDbSize) / msg.payload.avgObjSize);\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{},{projection:{timeStamp:1, _id:0}}],\n    cutRecords      : cutRecords\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 860,
        "wires": [
            [
                "2a00870ef464cbe5"
            ]
        ]
    },
    {
        "id": "f226d7aa.824b28",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find latest Time Stamp",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numTrays = objectLength(msg.payload);\nvar timeStampList = [];\n\nfor (var itray = 0; itray < numTrays; ++itray)\n{\n    timeStampList[itray] = msg.payload[itray].timeStamp;\n}\ntimeStampList.sort();\n\n\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{timeStamp: {\"$lte\": timeStampList[msg.cutRecords]}},{projection:{timeStamp:1, _id:0}}],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 860,
        "wires": [
            [
                "4855b6b5352f7431"
            ]
        ]
    },
    {
        "id": "c7984811.67e8f8",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "ipRefWeb",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ipRefWeb",
        "payload": "IPREFWEB",
        "payloadType": "env",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "daa5f679.c0a968"
            ]
        ]
    },
    {
        "id": "daa5f679.c0a968",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save ipRefWeb",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "f20b241f2c715e8e",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "trays",
        "operation": "update",
        "x": 1320,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e6a006f16634c572",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "stats",
        "x": 410,
        "y": 860,
        "wires": [
            [
                "cdfc8294.43d83"
            ]
        ]
    },
    {
        "id": "2a00870ef464cbe5",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 950,
        "y": 860,
        "wires": [
            [
                "f226d7aa.824b28"
            ]
        ]
    },
    {
        "id": "4855b6b5352f7431",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 1450,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "4ffc61b266cd720c",
        "type": "link out",
        "z": "e17f7487.2a78e8",
        "name": "Subscribe Readings Out",
        "mode": "link",
        "links": [
            "0c0c500aef6eef08",
            "1512243435a0ec2c",
            "229914f7347d04d8",
            "296ce089db74a1b5",
            "2a1d3ff91d11ab9b",
            "3c5ab7eda412bc5c",
            "4c23b1c0444fdca5",
            "4e4453e4f560ffd7",
            "9800371cca717e58",
            "e928c1d6d05dd339",
            "f29c301276738c5e",
            "636b1a8af11c5553",
            "116ea6c7ce824cb1",
            "7bce085f8052ef7b",
            "95d0d0d4392ae158",
            "a056eb265fb4061a",
            "966d1e458cf5d07d",
            "8c3b6088b7f5ebfd",
            "33e54de74dad3417",
            "150740e7cd0865cd",
            "c68eed5750b7484a"
        ],
        "x": 1065,
        "y": 60,
        "wires": []
    },
    {
        "id": "d0942eab7e4a8590",
        "type": "mqtt in",
        "z": "e17f7487.2a78e8",
        "name": "Subscribe ",
        "topic": "$(SUBSCRIBETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 80,
        "y": 180,
        "wires": [
            [
                "e30d52b0766a90c3"
            ]
        ]
    },
    {
        "id": "e30d52b0766a90c3",
        "type": "json",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "079ec35186fa23a5"
            ]
        ]
    },
    {
        "id": "079ec35186fa23a5",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nreturn {\n    topic   :   msg.topic, \n    payload : \n    [\n        {\n            $and   :    \n            [\n                {\n                    type : mqttArray[1]\n                },\n                {\n                    name : mqttArray[2]\n                }\n            ]\n        }, \n        {\n            projection  :\n            {\n                _id :   0\n                \n            }\n        }\n    ],\n    'tray'    :   msg.payload,\n    'action'  :   mqttArray[3]\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 180,
        "wires": [
            [
                "34606eece52fa71b"
            ]
        ]
    },
    {
        "id": "34606eece52fa71b",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "trays",
        "operation": "findOne",
        "x": 590,
        "y": 180,
        "wires": [
            [
                "fcb77c04cd512365"
            ]
        ]
    },
    {
        "id": "fcb77c04cd512365",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check if Tray Exists",
        "func": "function isEmpty(obj) \n{\n    for(var key in obj) \n    {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload)) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            [
                "c10c2247f9504692"
            ]
        ]
    },
    {
        "id": "c10c2247f9504692",
        "type": "switch",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "reading",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "archive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "postMortem",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 970,
        "y": 180,
        "wires": [
            [
                "a190426bb07ca2a4",
                "4ffc61b266cd720c"
            ],
            [
                "2641ddb623e2304e"
            ],
            [
                "51d9c19228581a47"
            ]
        ]
    },
    {
        "id": "a190426bb07ca2a4",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "update reading",
        "func": "msg.tray.timeStamp = new Date().getTime();\nvar keys = Object.keys(msg.tray);\nfor (var ii = 0; ii < keys.length; ++ii) msg.payload[keys[ii]] = msg.tray[keys[ii]];\n\nvar updateTrayMsg = \n{\n    topic:'updateTray',\n    payload:\n    [\n        {\n            $and   :    \n            [\n                {\n                    type : msg.payload.type\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        msg.payload\n    ]\n};\nreturn updateTrayMsg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 120,
        "wires": [
            [
                "f20b241f2c715e8e"
            ]
        ]
    },
    {
        "id": "2641ddb623e2304e",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "archive data",
        "func": "msg.tray.timeStamp = new Date().getTime();\nvar keys = Object.keys(msg.tray);\nfor (var ii = 0; ii < keys.length; ++ii) msg.payload[keys[ii]] = msg.tray[keys[ii]];\n\nvar archiveMsg = null;\nvar archiveTray = JSON.parse(JSON.stringify(msg.tray));\ndelete archiveTray.arcPeriod;\nkeys = Object.keys(archiveTray);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (archiveTray[keys[ii]].hasOwnProperty('type'))\n    {\n        \n        archiveTray[keys[ii]] = JSON.parse(JSON.stringify(msg.tray[keys[ii]].value));\n    }\n}\narchiveMsg = {topic:'archiveData',payload: [archiveTray]};\nreturn archiveMsg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "22b380bf271f32a6"
            ]
        ]
    },
    {
        "id": "22b380bf271f32a6",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "insertOne",
        "x": 1340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d6512c27e78eca32",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Make Permit Device",
        "func": "return {\n    topic   :   'removeFromArchiver', \n    payload :  [ { $and   : [{type : \"mode0-rp\"}, {name :\"01\"}]} ]\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 480,
        "wires": [
            [
                "85720fd023515cd8"
            ]
        ]
    },
    {
        "id": "85720fd023515cd8",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 550,
        "y": 480,
        "wires": [
            [
                "cd90d612ed2a2218"
            ]
        ]
    },
    {
        "id": "cd90d612ed2a2218",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 480,
        "wires": []
    },
    {
        "id": "893874ffb26184f9",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "d6512c27e78eca32"
            ]
        ]
    },
    {
        "id": "51d9c19228581a47",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "add postMortem",
        "func": "msg.tray.timeStamp = new Date().getTime();\nvar addPostMortemMsg = \n{\n    topic:'updateTray',\n    payload: [msg.tray]\n};\nreturn addPostMortemMsg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 240,
        "wires": [
            [
                "58d6ed06f139a48c"
            ]
        ]
    },
    {
        "id": "58d6ed06f139a48c",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "postMortem",
        "operation": "insertOne",
        "x": 1350,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "2666eb47.cb2c24",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/access-log",
        "url": "/access-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "b760a3b7466678da"
            ]
        ]
    },
    {
        "id": "c41bff2c.e8b63",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div id='querySetup'>\n                    <div class='row'>\n                        <div class='col-md-12'>\n                            <table id='plotSetupTable'>\n                                <tr>\n                                    <td align=\"center\">\n                                        <span>Start Date</span>\n                                    </td>\n                                    <td align=\"center\">\n                                        <span>Stop Date</span>\n                                    </td>\n                                    <td align=\"center\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td align=\"center\">\n                                        <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                                    </td>\n                                    <td align=\"center\">\n                                        <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                                    </td>\n                                    <td align=\"center\">\n                                        <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                                    </td>\n                                </tr>\n                            </table>\n                            <table width='100%' id='accessLogTable'>\n                                <thead>\n                                    <tr>\n                                        <th width='10%'>url</th>\n                                        <th width='10%'>ip</th>\n                                        <th width='10%' >user</th>\n                                        <th width='10%' >city</th>\n                                        <th width='20%'>rdns</th>\n                                        <th width='10%'>isp</th>\n                                        <th width='10%'>Date</th>\n                                        <th width='10%'>Time</th>\n                                    </tr>\n                                </thead>\n                                <tbody id=\"accessLogTableBody\"></tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "56402369.244bec"
            ]
        ]
    },
    {
        "id": "56402369.244bec",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Access Log",
        "output": "str",
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "4f38094c83b7ddc9"
            ]
        ]
    },
    {
        "id": "3836124.ae654ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n//            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getAccessLog':\n                        displayData(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            $(\"#accessLogTableBody\").remove();\n            var actionMsg = \n                {\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                };\n            sendActionMsg('getAccessLog', 'readDatabase', actionMsg);\n\n        }\n        function displayData(msg)\n        {\n            var markup = '<tbody id=\"accessLogTableBody\">';\n            for (var ii = 0; ii < msg.payload.length; ++ii)\n            {\n                markup = markup + addRow(msg.payload[ii]);\n            }\n            markup = markup + '</tbody>';\n            $(\"#accessLogTable\").append(markup);\n        }\n\n        function addRow(record)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + record.url + '</td>';\n            markup = markup + '<td>' + record.ip + '</td>';\n            markup = markup + '<td>' + record.user + '</td>';\n            markup = markup + '<td>' + record.city + '</td>';\n            markup = markup + '<td>' + record.rdns + '</td>';\n            markup = markup + '<td>' + record.isp + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleDateString() + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleTimeString() + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n",
        "output": "str",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "c41bff2c.e8b63"
            ]
        ]
    },
    {
        "id": "47b50e0.c7354f4",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "d29bdb5c.25fd58"
            ]
        ]
    },
    {
        "id": "b9aba820.9dbf78",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "aef63175.9e1f7"
            ]
        ]
    },
    {
        "id": "aef63175.9e1f7",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "find.toArray",
        "x": 920,
        "y": 200,
        "wires": [
            [
                "c60d9fa2.da0d4"
            ]
        ]
    },
    {
        "id": "c60d9fa2.da0d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.tray.name,\n        payload:{\n            topic           : 'getAccessLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getAccessLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "7a08c826.6c9ca8",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 1380,
        "y": 200,
        "wires": []
    },
    {
        "id": "7db6e983.ea0948",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/settings-log",
        "url": "/settings-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 600,
        "wires": [
            [
                "1f7fc24d89a8af1e"
            ]
        ]
    },
    {
        "id": "207a1450.67f23c",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div id='querySetup'>\n                    <div class='row'>\n                        <div class='col-md-12'>\n                            <table id='plotSetupTable'>\n                                <tr>\n                                    <td align=\"center\">\n                                        <span>Start Date</span>\n                                    </td>\n                                    <td align=\"center\">\n                                        <span>Stop Date</span>\n                                    </td>\n                                    <td align=\"center\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td align=\"center\">\n                                        <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                                    </td>\n                                    <td align=\"center\">\n                                        <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                                    </td>\n                                    <td align=\"center\">\n                                        <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                                    </td>\n                                </tr>\n                            </table>\n                            <table width='100%' id='settingsLogTable'>\n                                <thead>\n                                    <tr>\n                                        <th width='10%' >url</th>\n                                        <th width='10%' >tray</th>\n                                        <th width='10%' >ip</th>\n                                        <th width='10%'  >user</th>\n                                        <th width='10%'  >city</th>\n                                        <th width='20%' >rdns</th>\n                                        <th width='10%' >isp</th>\n                                        <th width='10%' >Date</th>\n                                        <th width='10%' >Time</th>\n                                    </tr>\n                                </thead>\n                                <tbody id=\"settingsLogTableBody\"></tbody>\n                            </table>\n                        </div>\n                </div>\n            </div>\n                <div id=\"showTrayDialog\" title=\"Tray\" class='card'>\n                    <p class='card-title' id='showTrayDialogName'>Tray</p>\n                    <div class='card-body'>\n                        <table id='showTrayTable' width='100%'>\n                            <thead>\n                                <tr>\n                                    <th width='50%' >Cube</th>\n                                    <th width='50%' >Value</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"showTrayTableBody\"></tbody>\n                        </table>\n                    </div>\n                </div> \n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 1010,
        "y": 600,
        "wires": [
            [
                "c3c60f3c.51f22"
            ]
        ]
    },
    {
        "id": "c3c60f3c.51f22",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Settings Log",
        "output": "str",
        "x": 1130,
        "y": 600,
        "wires": [
            [
                "73a30a9dcb648540"
            ]
        ]
    },
    {
        "id": "78d16800.4adc18",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "2f50dfa8.90179"
            ]
        ]
    },
    {
        "id": "8d3e512a.420f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup SettingsLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getSettingsLog',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 680,
        "wires": [
            [
                "ce493245.30ca8"
            ]
        ]
    },
    {
        "id": "ce493245.30ca8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "find.toArray",
        "x": 920,
        "y": 680,
        "wires": [
            [
                "e1eb29b.c5c23d8"
            ]
        ]
    },
    {
        "id": "e1eb29b.c5c23d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.tray.name,\n        payload:{\n            topic           : 'getSettingsLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getSettingsLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 680,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "89be3294.49e69",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 1390,
        "y": 680,
        "wires": []
    },
    {
        "id": "3ff05971.6144b6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var settingsHistory = null;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getSettingsLog':\n                        settingsHistory = msg.payload;\n                        displayData();\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            settingsHistory = null;\n            $(\"#settingsLogTableBody\").remove();\n            var actionMsg = \n                {\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                };\n            sendActionMsg('getSettingsLog', 'readDatabase', actionMsg);\n        }\n        function displayData()\n        {\n            var markup = '<tbody id=\"settingsLogTableBody\">';\n            for (var ii = 0; ii < settingsHistory.length; ++ii)\n            {\n                markup = markup + addRow(ii);\n            }\n            markup = markup + '</tbody>';\n            $(\"#settingsLogTable\").append(markup);\n        }\n\n        function addRow(ii)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.url + '</td>';\n            var topic = settingsHistory[ii].topic.split('/');\n            markup = markup + '<td>' \n                +  '<button onclick=\"displayTray(' + ii.toString() + ')\">' + topic[1]  + '-' + topic[2] + '</button>' \n                + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.ip + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].username + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.city + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.rdns + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.isp + '</td>';\n            markup = markup + '<td>' + new Date(settingsHistory[ii].timeStamp).toLocaleDateString() + '</td>';\n            markup = markup + '<td>' + new Date(settingsHistory[ii].timeStamp).toLocaleTimeString() + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n        function displayTray(index)\n        {\n\n            var time = new Date(settingsHistory[index].timeStamp).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n\n            var topic = settingsHistory[index].topic.split('/');\n            $( \"#showTrayDialogName\" ).html(topic[1]  + '-' + topic[2] + ' ' + time);\n            $( \"#showTrayTableBody\" ).remove();\n            var markup = '<tbody id=\"showTrayTableBody\">';\n\n            markup = markup +'<tr>';\n            markup = markup + '<td align=\"center\">' + settingsHistory[index].tray.cube + '</td>';\n            markup = markup + '<td>' + settingsHistory[index].tray.value.toString() + '</td>';\n            markup = markup + '</tr>';\n            markup = markup + '</tbody>';\n            $(\"#showTrayTable\").append(markup);\n\n            $( \"#showTrayDialog\" ).dialog( \"option\", \"title\", \"Tray Setting\"); \n            $( \"#showTrayDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#showTrayDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Close\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n",
        "output": "str",
        "x": 870,
        "y": 600,
        "wires": [
            [
                "207a1450.67f23c"
            ]
        ]
    },
    {
        "id": "3dbc8e22.aafca2",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/process-login",
        "url": "/process-login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 980,
        "wires": [
            [
                "2623a5b9.60e51a"
            ]
        ]
    },
    {
        "id": "c7dcd2fd.f38ec",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "findOne",
        "x": 510,
        "y": 980,
        "wires": [
            [
                "d0b46e62.c61f3"
            ]
        ]
    },
    {
        "id": "2623a5b9.60e51a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "user query",
        "func": "msg.userData = {cred : {}, url : msg.payload.url};\nmsg.userData.cred = \n{\n    username : msg.payload.username, \n    password : msg.payload.password,\n};\nmsg.payload =  [{username : msg.userData.cred.username },  {projection  :{_id :   0}}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 980,
        "wires": [
            [
                "c7dcd2fd.f38ec"
            ]
        ]
    },
    {
        "id": "d0b46e62.c61f3",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check username",
        "func": "function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    delete msg.userData['cred'];\n    msg.payload.errorMsg = 'Error: Invalid Credentials';\n    return [msg, null];\n}\nvar pwcheck = \n{\n    \"topic\"     : \"checkPassword\",\n    \"txt\"       : msg.userData.cred.password,\n    \"hash\"      : msg.payload.password\n}\nmsg.payload.profile['expDate'] = -1;\nif ( msg.payload.profile.timeoutMin > 0)\n{\n    msg.payload.profile['expDate'] = new Date().getTime() + msg.payload.profile.timeoutMin * 60000;\n}\nmsg.payload.profile['username'] = msg.payload.username;\nmsg.userData.cred.profile = msg.payload.profile;\nmsg.payload = pwcheck;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 980,
        "wires": [
            [
                "d1cf61fb.35fc1"
            ],
            [
                "2497b9a4.db7a46"
            ]
        ]
    },
    {
        "id": "2497b9a4.db7a46",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "decrypt password",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "outputs": 1,
        "rounds": 10,
        "x": 930,
        "y": 1020,
        "wires": [
            [
                "25cbcda4.aaf522"
            ]
        ]
    },
    {
        "id": "25cbcda4.aaf522",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check password",
        "func": "if (msg.match == false)  \n{\n    delete msg.userData['cred'];\n    msg.payload.errorMsg = 'Error: Invalid Credentials';\n    return [msg, null];\n\n}\nmsg.payload = msg.userData.cred.profile;\ndelete msg.userData['cred'];\ndelete msg['match'];\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1020,
        "wires": [
            [
                "abf9b132.7c298"
            ],
            [
                "3abe79d2.fee286"
            ]
        ]
    },
    {
        "id": "3abe79d2.fee286",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 940,
        "y": 1100,
        "wires": [
            [
                "26477e37.472222"
            ]
        ]
    },
    {
        "id": "c10f4686.4bfa58",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n        <div class='card'>\n            <p class='card-title'>{{{payload.errorMsg}}}</p>\n            <div class='card-body' align=\"center\">\n                <form action=\"/process-login\" method=\"POST\">\n                    <table align='center'>\n                        <tr>\n                            <td>\n                                <label for=\"username\" class=\"big-text\">User</label>\n                            </td>\n                            <td>\n                                <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label for=\"password\" class=\"big-text\">Password</label>\n                            </td>\n                            <td>\n                                <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                            </td>\n                            <td>\n                                <input type=\"submit\" class=\"btn jumbotron-button btn-block big-text bold-text\"/>\n                            </td>\n                        </tr>\n                    </table>    \n                    <input type=\"hidden\" name=\"url\" value=\"{{{userData.url}}}\" />\n                </form>  \n            </div>\n        </div>",
        "output": "str",
        "x": 630,
        "y": 880,
        "wires": [
            [
                "e6b8fa70ebc5179c"
            ]
        ]
    },
    {
        "id": "7e91110a.c2165",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Log-in",
        "output": "str",
        "x": 350,
        "y": 880,
        "wires": [
            [
                "5a857f25.a6af6"
            ]
        ]
    },
    {
        "id": "aff12a21.2e53c8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "7e91110a.c2165"
            ]
        ]
    },
    {
        "id": "5a857f25.a6af6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basic.png",
        "output": "str",
        "x": 490,
        "y": 880,
        "wires": [
            [
                "c10f4686.4bfa58"
            ]
        ]
    },
    {
        "id": "26477e37.472222",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set box cookie",
        "func": "msg.cookies = { };\nmsg.cookies[global.get('box') + 'Role'] = msg.token;\nmsg.cookies[global.get('box') + 'Username'] = msg.payload.username;\nmsg.cookies[global.get('box') + 'ExpDate'] = msg.payload.expDate;\nmsg.statusCode = 302;\nmsg.headers = {};\nmsg.headers.location = '/'\nvar previousUrl = msg.userData.url;\nif(previousUrl == undefined)\n{\n    msg.headers.location = '/'\n}\nelse\n{\n    msg.headers.location = previousUrl;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1100,
        "wires": [
            [
                "fee60e7.48d0cf"
            ]
        ]
    },
    {
        "id": "fee60e7.48d0cf",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e322d811.8b4178",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Login Error",
        "links": [
            "d1cf61fb.35fc1",
            "abf9b132.7c298"
        ],
        "x": 75,
        "y": 880,
        "wires": [
            [
                "aff12a21.2e53c8"
            ]
        ]
    },
    {
        "id": "d1cf61fb.35fc1",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "No User",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 855,
        "y": 960,
        "wires": []
    },
    {
        "id": "abf9b132.7c298",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Bad Password",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 1315,
        "y": 980,
        "wires": []
    },
    {
        "id": "44733e49.ba7ec",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 120,
        "wires": [
            [
                "3836124.ae654ee"
            ]
        ]
    },
    {
        "id": "64665cab.c46c24",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "env": [],
        "x": 690,
        "y": 600,
        "wires": [
            [
                "3ff05971.6144b6"
            ]
        ]
    },
    {
        "id": "1e9bf28b.344d8d",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "44733e49.ba7ec"
            ]
        ]
    },
    {
        "id": "b213f397.94307",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 600,
        "wires": [
            [
                "64665cab.c46c24"
            ]
        ]
    },
    {
        "id": "d29bdb5c.25fd58",
        "type": "subflow:fee416c.fb205e8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "b9aba820.9dbf78"
            ],
            [
                "6b0f35.479560cc"
            ]
        ]
    },
    {
        "id": "6b0f35.479560cc",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Access Log Permission check",
        "links": [
            "29e4a.7f1061b68"
        ],
        "x": 535,
        "y": 240,
        "wires": []
    },
    {
        "id": "29e4a.7f1061b68",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Access Log Websocket in",
        "links": [
            "6b0f35.479560cc"
        ],
        "x": 1255,
        "y": 240,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "2f50dfa8.90179",
        "type": "subflow:fee416c.fb205e8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "8d3e512a.420f"
            ],
            [
                "96bdbbff.532998"
            ]
        ]
    },
    {
        "id": "96bdbbff.532998",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Settings Log Permission check",
        "links": [
            "ad5167e6.cd9ed8"
        ],
        "x": 535,
        "y": 720,
        "wires": []
    },
    {
        "id": "ad5167e6.cd9ed8",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Settings Log Websocket in",
        "links": [
            "96bdbbff.532998"
        ],
        "x": 1255,
        "y": 720,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "e6b8fa70ebc5179c",
        "type": "subflow:c57c2f9e65e6cb70",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 770,
        "y": 880,
        "wires": [
            [
                "7738e37c816651ac"
            ]
        ]
    },
    {
        "id": "7738e37c816651ac",
        "type": "subflow:ca529822.9112f8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 910,
        "y": 880,
        "wires": []
    },
    {
        "id": "607b134887d56b16",
        "type": "subflow:ca529822.9112f8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1410,
        "y": 600,
        "wires": []
    },
    {
        "id": "73a30a9dcb648540",
        "type": "subflow:7744eedb71df7703",
        "z": "90f83725.6dae08",
        "x": 1270,
        "y": 600,
        "wires": [
            [
                "607b134887d56b16"
            ]
        ]
    },
    {
        "id": "787329f7fa16e517",
        "type": "subflow:ca529822.9112f8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1430,
        "y": 120,
        "wires": []
    },
    {
        "id": "4f38094c83b7ddc9",
        "type": "subflow:7744eedb71df7703",
        "z": "90f83725.6dae08",
        "x": 1290,
        "y": 120,
        "wires": [
            [
                "787329f7fa16e517"
            ]
        ]
    },
    {
        "id": "b760a3b7466678da",
        "type": "subflow:3fec913b325ae6ff",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 320,
        "y": 120,
        "wires": [
            [
                "1e9bf28b.344d8d"
            ]
        ]
    },
    {
        "id": "1f7fc24d89a8af1e",
        "type": "subflow:3fec913b325ae6ff",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 320,
        "y": 600,
        "wires": [
            [
                "b213f397.94307"
            ]
        ]
    },
    {
        "id": "32e768ba9c660e51",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/rlogin",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1360,
        "wires": [
            [
                "4e05f966f69b3f01"
            ]
        ]
    },
    {
        "id": "da1057e00e9f54d1",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "findOne",
        "x": 450,
        "y": 1360,
        "wires": [
            [
                "34e2c3f37ac7af3f"
            ]
        ]
    },
    {
        "id": "4e05f966f69b3f01",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "user query",
        "func": "msg.userData = {cred : {}, url : msg.payload.url};\nmsg.userData.cred = \n{\n    username : msg.payload.username, \n    password : msg.payload.password,\n};\nmsg.payload =  [{username : msg.userData.cred.username },  {projection  :{_id :   0}}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 1360,
        "wires": [
            [
                "da1057e00e9f54d1"
            ]
        ]
    },
    {
        "id": "34e2c3f37ac7af3f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check username",
        "func": "function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    delete msg.userData['cred'];\n    msg.payload = 'Error-UserNotFound';\n    return [msg, null];\n}\nvar pwcheck = \n{\n    \"topic\"     : \"checkPassword\",\n    \"txt\"       : msg.userData.cred.password,\n    \"hash\"      : msg.payload.password\n}\nmsg.payload.profile['expDate'] = -1;\nif ( msg.payload.profile.timeoutMin > 0)\n{\n    msg.payload.profile['expDate'] = new Date().getTime() + msg.payload.profile.timeoutMin * 60000;\n}\nmsg.payload.profile['username'] = msg.payload.username;\nmsg.userData.cred.profile = msg.payload.profile;\nmsg.payload = pwcheck;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 1360,
        "wires": [
            [
                "fcb9ed081b6ca025"
            ],
            [
                "e75cd25c4c334912"
            ]
        ]
    },
    {
        "id": "fcb9ed081b6ca025",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e75cd25c4c334912",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "decrypt password",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "outputs": 1,
        "rounds": 10,
        "x": 870,
        "y": 1360,
        "wires": [
            [
                "750c6509cb3a8728"
            ]
        ]
    },
    {
        "id": "750c6509cb3a8728",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check password",
        "func": "if (msg.match == false)  \n{\n    delete msg.userData['cred'];\n    msg.payload = 'Error-InvalidPassword';\n    return [msg, null];\n\n}\nmsg.payload = msg.userData.cred.profile;\ndelete msg.userData['cred'];\ndelete msg['match'];\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1360,
        "wires": [
            [
                "fcb9ed081b6ca025"
            ],
            [
                "9eefe26b52da76fe"
            ]
        ]
    },
    {
        "id": "9eefe26b52da76fe",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 1280,
        "y": 1360,
        "wires": [
            [
                "4f2182d3ee473779"
            ]
        ]
    },
    {
        "id": "4f2182d3ee473779",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token",
        "func": "msg.payload = msg.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 1360,
        "wires": [
            [
                "a2c99cc9dcb6fdd4"
            ]
        ]
    },
    {
        "id": "a2c99cc9dcb6fdd4",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 1360,
        "wires": []
    },
    {
        "id": "0067eded2190bc15",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/rlogin?username=user&password=blinky-lite\" > blinky-lite-v2-token.txt",
        "info": "",
        "x": 380,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f9348945f29a4c3d",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/tray?type=blinky-basic&name=01&token=$(< blinky-lite-v4-token.txt)\"",
        "info": "",
        "x": 370,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a27a640754b007a4",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/tray?type=blinky-basic&name=01&token=$(< blinky-lite-v4-token.txt)\" | json_pp > out.json",
        "info": "",
        "x": 430,
        "y": 1520,
        "wires": []
    },
    {
        "id": "30b2bbb3ac8f9689",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/tray",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1600,
        "wires": [
            [
                "9f0e20e3642a995a"
            ]
        ]
    },
    {
        "id": "89cbbae50b2487e9",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "trays",
        "operation": "findOne",
        "x": 1010,
        "y": 1600,
        "wires": [
            [
                "86ccb2c7f31ec346",
                "7ed4b8af5b1ba6c8"
            ]
        ]
    },
    {
        "id": "86ccb2c7f31ec346",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 1600,
        "wires": []
    },
    {
        "id": "aef442ea0761f9cb",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "var queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                type  :   msg.payload.type\n            },\n            {\n                name  :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1600,
        "wires": [
            [
                "89cbbae50b2487e9"
            ]
        ]
    },
    {
        "id": "55b4b82b274f9427",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "check token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 410,
        "y": 1600,
        "wires": [
            [
                "da28cc07175b0e2e"
            ]
        ]
    },
    {
        "id": "9f0e20e3642a995a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token",
        "func": "msg.token = msg.payload.token;\ndelete  msg.payload.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1600,
        "wires": [
            [
                "55b4b82b274f9427"
            ]
        ]
    },
    {
        "id": "da28cc07175b0e2e",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload = 'Error-BadToken';\n    return [null,msg];\n}\nmsg[\"info\"] = \n{\n    type:msg.payload.type,\n    name:msg.payload.name,\n    username :msg.token.username,\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload = 'Error-LoginExpired';\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (let itray = 0; itray < msg.token.trays.length; ++itray)\n{\n    if (msg.token.trays[itray].type == '*')\n    {\n        permittedRole = true;\n        break;\n    }\n    if (msg.token.trays[itray].type == msg.payload.type)\n    {\n        if (msg.token.trays[itray].name == '*')\n        {\n            permittedRole = true;\n            break;\n        }\n        if (msg.token.trays[itray].name == msg.payload.name)\n        {\n            permittedRole = true;\n            break;\n        }\n    }\n}\nif (!permittedRole)\n{\n    msg.payload = 'Error-CredentialsNotValidForRequest';\n    return [null,msg];\n}\ndelete msg.token;\ndelete msg.payload.allowedRoles;\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1600,
        "wires": [
            [
                "aef442ea0761f9cb"
            ],
            [
                "b2f92f655438d635"
            ]
        ]
    },
    {
        "id": "b2f92f655438d635",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 1640,
        "wires": []
    },
    {
        "id": "77df0b8c423faaca",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "Should not use. Should download token from myapps",
        "info": "",
        "x": 240,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7ed4b8af5b1ba6c8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1680,
        "wires": [
            [
                "9d0dc1d1ea9f0fa5"
            ]
        ]
    },
    {
        "id": "9d0dc1d1ea9f0fa5",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = \"/tray?type=\" + msg.info.type + \"&name=\" + msg.info.name;\nvar header = {};\nheader['User-Agent'] = 'keycdn-tools:' + global.get('ipRefWeb');\nvar user = msg.info.username;\nreturn {\n    topic:'clientInfo', \n    headers: header,\n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:0, user:user},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1720,
        "wires": [
            [
                "51fd01ca360ebd3f"
            ]
        ]
    },
    {
        "id": "51fd01ca360ebd3f",
        "type": "http request",
        "z": "90f83725.6dae08",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1230,
        "y": 1760,
        "wires": [
            [
                "6cbfa5f1fc56575f"
            ]
        ]
    },
    {
        "id": "6cbfa5f1fc56575f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\ndata['user'] = msg.extraInfo.user;\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1800,
        "wires": [
            [
                "09d2702e13c810a6"
            ]
        ]
    },
    {
        "id": "09d2702e13c810a6",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "restAccessLog",
        "operation": "insertOne",
        "x": 1300,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "f1832075fc673dab",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/restAccess-log",
        "url": "/restAccess-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "08bca7684008a5bf"
            ]
        ]
    },
    {
        "id": "c5379d2523efdb58",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div id='querySetup'>\n                    <div class='row'>\n                        <div class='col-md-12'>\n                            <table id='plotSetupTable'>\n                                <tr>\n                                    <td align=\"center\">\n                                        <span>Start Date</span>\n                                    </td>\n                                    <td align=\"center\">\n                                        <span>Stop Date</span>\n                                    </td>\n                                    <td align=\"center\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td align=\"center\">\n                                        <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                                    </td>\n                                    <td align=\"center\">\n                                        <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                                    </td>\n                                    <td align=\"center\">\n                                        <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                                    </td>\n                                </tr>\n                            </table>\n                            <table width='100%' id='accessLogTable'>\n                                <thead>\n                                    <tr>\n                                        <th width='10%'>url</th>\n                                        <th width='10%'>ip</th>\n                                        <th width='10%' >user</th>\n                                        <th width='10%' >city</th>\n                                        <th width='20%'>rdns</th>\n                                        <th width='10%'>isp</th>\n                                        <th width='10%'>Date</th>\n                                        <th width='10%'>Time</th>\n                                    </tr>\n                                </thead>\n                                <tbody id=\"accessLogTableBody\"></tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "13859a7181b8c72d"
            ]
        ]
    },
    {
        "id": "13859a7181b8c72d",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "RESTful Access Log",
        "output": "str",
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "d21ed11e5d71212c"
            ]
        ]
    },
    {
        "id": "06aed1ee9cacd09e",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n//            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getAccessLog':\n                        displayData(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            $(\"#accessLogTableBody\").remove();\n            var actionMsg = \n                {\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                };\n            sendActionMsg('getAccessLog', 'readDatabase', actionMsg);\n\n        }\n        function displayData(msg)\n        {\n            var markup = '<tbody id=\"accessLogTableBody\">';\n            for (var ii = 0; ii < msg.payload.length; ++ii)\n            {\n                markup = markup + addRow(msg.payload[ii]);\n            }\n            markup = markup + '</tbody>';\n            $(\"#accessLogTable\").append(markup);\n        }\n\n        function addRow(record)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + record.url + '</td>';\n            markup = markup + '<td>' + record.ip + '</td>';\n            markup = markup + '<td>' + record.user + '</td>';\n            markup = markup + '<td>' + record.city + '</td>';\n            markup = markup + '<td>' + record.rdns + '</td>';\n            markup = markup + '<td>' + record.isp + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleDateString() + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleTimeString() + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n",
        "output": "str",
        "x": 930,
        "y": 340,
        "wires": [
            [
                "c5379d2523efdb58"
            ]
        ]
    },
    {
        "id": "8a1c91621a2e818e",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/restAccess-log/websocket",
        "server": "a64d56be7e50cf27",
        "client": "",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "11f0a4dfb7591081"
            ]
        ]
    },
    {
        "id": "315f3c353e2912d5",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 420,
        "wires": [
            [
                "a3c2e6136cebee34"
            ]
        ]
    },
    {
        "id": "a3c2e6136cebee34",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "restAccessLog",
        "operation": "find.toArray",
        "x": 970,
        "y": 420,
        "wires": [
            [
                "673dd3707947776e"
            ]
        ]
    },
    {
        "id": "673dd3707947776e",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.tray.name,\n        payload:{\n            topic           : 'getAccessLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getAccessLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "a232d8d2a19e6783"
            ]
        ]
    },
    {
        "id": "a232d8d2a19e6783",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/restAccess-log/websocket",
        "server": "a64d56be7e50cf27",
        "client": "",
        "x": 1460,
        "y": 420,
        "wires": []
    },
    {
        "id": "50156be50a63c9ec",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 740,
        "y": 340,
        "wires": [
            [
                "06aed1ee9cacd09e"
            ]
        ]
    },
    {
        "id": "dc78596e9abf7b38",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "50156be50a63c9ec"
            ]
        ]
    },
    {
        "id": "11f0a4dfb7591081",
        "type": "subflow:fee416c.fb205e8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "315f3c353e2912d5"
            ],
            [
                "23ed8903a63e2e2f"
            ]
        ]
    },
    {
        "id": "23ed8903a63e2e2f",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Access Log Permission check",
        "links": [
            "eb0d9df00c48f1f2"
        ],
        "x": 575,
        "y": 460,
        "wires": []
    },
    {
        "id": "eb0d9df00c48f1f2",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Access Log Websocket in",
        "links": [
            "23ed8903a63e2e2f"
        ],
        "x": 1315,
        "y": 460,
        "wires": [
            [
                "a232d8d2a19e6783"
            ]
        ]
    },
    {
        "id": "6b48c342227a92f4",
        "type": "subflow:ca529822.9112f8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1470,
        "y": 340,
        "wires": []
    },
    {
        "id": "d21ed11e5d71212c",
        "type": "subflow:7744eedb71df7703",
        "z": "90f83725.6dae08",
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "6b48c342227a92f4"
            ]
        ]
    },
    {
        "id": "08bca7684008a5bf",
        "type": "subflow:3fec913b325ae6ff",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 360,
        "y": 340,
        "wires": [
            [
                "dc78596e9abf7b38"
            ]
        ]
    },
    {
        "id": "d8aea031.7f89d",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarPlotter",
        "url": "/scalarPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "48d71400ebc13581"
            ]
        ]
    },
    {
        "id": "761db118.51922",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "472ae883.652f08",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 1750,
        "y": 300,
        "wires": []
    },
    {
        "id": "f445d1dd.72e4",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getTrayList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getTrayValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendConfigToMqtt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "7ef5d7af.5aeed8"
            ],
            [
                "80b3fbd.ba21908"
            ],
            [
                "ccb4a4a2.49a2e8"
            ],
            [
                "8e79cfec.1347"
            ],
            [
                "98c9d4ad.3f54f8"
            ],
            [
                "4819746c.65db8c"
            ],
            [
                "90ff25e663c0cc27"
            ]
        ]
    },
    {
        "id": "7ef5d7af.5aeed8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getTrayList",
        "func": "var newMsg = \n{\n    topic           : 'getTrayList',\n    userID          : msg.userID,\n    payload         : [{},{projection:{type:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 300,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "b6d95279.1b494",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Tray</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Cube</span></td>\n                                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                                <td width=\"2%\" align=\"center\"><span >y1</span></td>\n                                <td width=\"2%\" align=\"center\"><span >y2</span></td>\n                                <td width=\"2%\" align=\"center\"><span >pt</span></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"traySelect0\" onchange=\"traySelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)' checked ></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect1\" onchange=\"traySelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)' checked ></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect2\" onchange=\"traySelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)' checked ></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect3\" onchange=\"traySelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)' checked ></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-md-6'>\n                        <table>\n                            <tr>\n                                <td width=50%  align=\"center\"class=\"tableHeading\">Span</td>\n                                <td width=50% align=\"center\"></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <input class=\"form-control\" id=\"plotLength\" type=\"text\" value=\"300\"/>\n                                </td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button\" id=\"startPlotButton\" type=\"button\" onclick=\"startPlot()\">Start Plot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <div class='card'>\n                            <div class='card-body' align=\"center\">\n                                <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1370,
        "y": 40,
        "wires": [
            [
                "5caadfa3a8a636ab"
            ]
        ]
    },
    {
        "id": "2b6693c7.697dbc",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse tray list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numTrays = objectLength(msg.payload);\nvar trayList = [];\ntrayList[0] = msg.payload[0].type;\nif (numTrays > 1)\n{\n    for (var itray = 1; itray < numTrays; ++itray)\n    {\n        var trayAlreadyFound = false;\n        for (ii = 0; ii < itray; ++ii)\n        {\n            if (msg.payload[itray].type == trayList[ii]) trayAlreadyFound = true;\n        }\n        if (!trayAlreadyFound) trayList[itray] = msg.payload[itray].type;\n    }\n}\n\nreturn {\n    topic:'getTrayList',\n    payload:{\n        topic           : 'getTrayList',\n        payload         : trayList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 300,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "ccb4a4a2.49a2e8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.userID,\n    payload         : [{$and : [{type:msg.payload.type}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    type            : msg.payload.type,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 380,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "d206e66b.d73eb8",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getTrayList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getTrayValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1210,
        "y": 380,
        "wires": [
            [
                "2b6693c7.697dbc"
            ],
            [
                "818972ac.61492"
            ],
            [
                "a73ef173.723ab"
            ],
            [
                "dfbf9465.6e7518"
            ]
        ]
    },
    {
        "id": "a73ef173.723ab",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numTrays = objectLength(msg.payload);\nif (numTrays < 1) return null;\nvar tray = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(tray);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (tray[keys[ii]].hasOwnProperty('type'))\n    {\n        if (tray[keys[ii]].type == 'scalar')\n        {\n            if (tray[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        type            : msg.type,\n        trace           : msg.trace,\n        attrList        : attrList\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "7b9e1c55.c445c4",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var plotStarted = false;\n        var plotTraces = [];\n        var plotStartTime = 0;\n        var plotLength = 0;\n        var plotLayout = {};\n \n        function onDocumentReadySpecial()\n        {\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n        }\n        function loadTrayValuesSpecial(data)\n        {\n            upDatePlot();\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n        }\n        function attrSelectedSpecial(itrace)\n        {\n        }\n\n        function selectAxis(itrace,axis)\n        {\n            trayInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            trayInfo[itrace].pts = !trayInfo[itrace].pts;\n        }\n        function startPlot()\n        {\n            if (!plotStarted)\n            {\n                $(\"#startPlotButton\").html('Stop Plot');\n            }\n            else\n            {\n                $(\"#startPlotButton\").html('Start Plot');\n            }\n            plotStarted = !plotStarted;\n            if (!plotStarted)\n            {\n                plotTraces = [];\n                for (var itrace = 0; itrace < numTraces; ++itrace)\n                {\n                    traySelect[itrace].disabled = false;\n                    nameSelect[itrace].disabled = false;\n                    propSelect[itrace].disabled = false;\n                    attrSelect[itrace].disabled = false;\n                    $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", false );\n                    $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", false );\n                    $('#pts_' + itrace.toString()).prop( \"disabled\", false );\n                }\n                return;\n            }\n            plotTraces = [];\n            \n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                traySelect[itrace].disabled = true;\n                nameSelect[itrace].disabled = true;\n                propSelect[itrace].disabled = true;\n                attrSelect[itrace].disabled = true;\n                $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", true );\n                $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", true );\n                $('#pts_' + itrace.toString()).prop( \"disabled\", true );\n                if (trayInfo[itrace].name.length > 0)\n                {\n                    var modeType = 'lines';\n                    if (trayInfo[itrace].pts) modeType = 'markers';\n                    var trace =  \n                    {\n                        x: [],\n                        y: [],\n                        name: trayInfo[itrace].axis + ' ' + trayInfo[itrace].type + '.' + trayInfo[itrace].name + '.' + trayInfo[itrace].prop + '.' + trayInfo[itrace].attr + ' (' + trayInfo[itrace].tray[trayInfo[itrace].attr].unit + ')',\n                        yaxis: trayInfo[itrace].axis,\n                        type: 'scatter',\n                        mode: modeType\n                    };\n                    plotTraces.push(trace);\n                }\n            }\n            plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis       : {type: 'date' },\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n\n            plotStartTime = new Date().getTime();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n            plotLength = Number($(\"#plotLength\").val());\n        }\n        function upDatePlot()\n        {\n            if (!plotStarted) return;\n            var now = new Date().getTime();\n            var plotBeginning = now - plotLength * 1000;\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (trayInfo[itrace].name.length > 0)\n                {\n                    var removeDone = false;\n                    while(!removeDone)\n                    {\n                        if (plotTraces[traceCount].x[0] < plotBeginning)\n                        {\n                            plotTraces[traceCount].x.shift();\n                            plotTraces[traceCount].y.shift();\n                        }\n                        else\n                        {\n                            removeDone = true;\n                        }\n                    }\n                    plotTraces[traceCount].x.push(now);\n                    plotTraces[traceCount].y.push(trayInfo[itrace].tray[trayInfo[itrace].attr].value);\n                    ++traceCount;\n                }\n            }\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }",
        "output": "str",
        "x": 850,
        "y": 40,
        "wires": [
            [
                "da88a362.516c9"
            ]
        ]
    },
    {
        "id": "662fe630.391fd8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Plotter",
        "output": "str",
        "x": 1250,
        "y": 40,
        "wires": [
            [
                "b6d95279.1b494"
            ]
        ]
    },
    {
        "id": "699dce99.1fe68",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "trays",
        "operation": "find.toArray",
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "d206e66b.d73eb8"
            ]
        ]
    },
    {
        "id": "8e79cfec.1347",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getTrayValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getTrayValues',\n    userID          : msg.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "dfbf9465.6e7518",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse getTrayValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numTrays = objectLength(msg.payload);\nif (numTrays < 1) return null;\nvar trays = [];\nfor (var itray = 0; itray < numTrays; ++itray) trays[itray] = msg.payload[itray];\nreturn {\n    topic:'getTrayValues',\n    payload:{\n        topic           : 'getTrayValues',\n        userID          : msg.userID,\n        trays         : trays,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "68b75168.59f04",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarArchivePlotter",
        "url": "/scalarArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "2368821acde56f09"
            ]
        ]
    },
    {
        "id": "2857fd6b.987de2",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Tray</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Cube</span></td>\n                                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"traySelect0\" onchange=\"traySelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)' checked ></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <a id='csv1' href='' target='_blank' download=\"data1.csv\" class=\"csv-linked\">2</a>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect1\" onchange=\"traySelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)' checked ></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <a id='csv2' href='' target='_blank' download=\"data2.csv\" class=\"csv-linked\">3</a>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect2\" onchange=\"traySelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)' checked ></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <a id='csv3' href='' target='_blank' download=\"data3.csv\" class=\"csv-linked\">4</a>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect3\" onchange=\"traySelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                                <form action=\"\" >\n                                <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                                <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                                </form>\n                                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)' checked ></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div class='row' id='plotSetup'>\n                    <div class='col-md-12'>\n                        <table id='plotSetupTable'>\n                            <tr>\n                                <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                                <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                                <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                                <td width=10% align=\"center\"></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                                </td>\n                                <td align=\"center\">\n                                    <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                                </td>\n                                <td align=\"center\">\n                                    <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                                </td>\n                                <td align=\"center\">\n                                    <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <div class='card' id=\"timePlotCard\" >\n                            <div class='card-body' align=\"center\">\n                                <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1370,
        "y": 100,
        "wires": [
            [
                "9e1f54c01efdf924"
            ]
        ]
    },
    {
        "id": "3662caf5.96ce96",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#timePlotCard').hide();\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getArchiveValues':\n                    archiveList.push(msg.payload);\n                    if (archiveRequestList.length > 0)\n                    {\n                        getArchiveValues();\n                    }\n                    else\n                    {\n                        loadArchiveValues();\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function loadTrayValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n       }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n        }\n        function selectAxis(itrace,axis)\n        {\n            trayInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            trayInfo[itrace].pts = !trayInfo[itrace].pts;\n        }\n        function getArchiveData()\n        {\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (trayInfo[itrace].name.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        type        : trayInfo[itrace].type, \n                        name        : trayInfo[itrace].name, \n                        prop        : trayInfo[itrace].prop, \n                        attr        : trayInfo[itrace].attr,\n                        startDate   : startDate, \n                        stopDate    : stopDate,\n                        itrace      : itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            var actionMsg = \n                {\n                    tray      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                };\n            sendActionMsg('getArchiveValues', 'readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function loadArchiveValues()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            var plotTraces = [];\n            for (ii = 0; ii < archiveList.length; ++ii)\n            {\n                itrace = archiveList[ii].itrace;\n                var modeType = 'lines';\n                if (trayInfo[itrace].pts) modeType = 'markers';\n                var trace =  \n                {\n                    x: [],\n                    y: [],\n                    name: trayInfo[itrace].axis + ' ' + trayInfo[itrace].type + '.' + trayInfo[itrace].name + '.' + trayInfo[itrace].prop + '.' + trayInfo[itrace].attr + ' (' + trayInfo[itrace].tray[trayInfo[itrace].attr].unit + ')',\n                    yaxis: trayInfo[itrace].axis,\n                    type: 'scatter',\n                    mode: modeType\n                }\n                for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n                {\n                    trace.x[ipt] = archiveList[ii].trace[ipt].timeStamp;\n                    trace.y[ipt] = archiveList[ii].trace[ipt].value;\n                }\n                plotTraces.push(trace);\n                makeCsvFile(ii);\n            }\n            var plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis       : {type: 'date' },\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n            $('#timePlotCard').show();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }\n        function makeCsvFile(ii)\n        {\n            var dataString = '';\n            var startT = archiveList[ii].trace[0].timeStamp;\n            var itrace = archiveList[ii].itrace;\n        \n            dataString = dataString + 'Tray,' + trayInfo[itrace].type + ',' + trayInfo[itrace].name + ',' + trayInfo[itrace].prop + ',' + trayInfo[itrace].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec), Value (' + trayInfo[itrace].tray[trayInfo[itrace].attr].unit + ')\\n';\n            for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n            {\n                var x = (archiveList[ii].trace[ipt].timeStamp - startT) / 1000;\n                var y = archiveList[ii].trace[ipt].value;\n                dataString = dataString + x.toString() + ',' + y.toString() + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", trayInfo[itrace].type + '-' + trayInfo[itrace].name + '-' + trayInfo[itrace].prop + '-' + trayInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 850,
        "y": 100,
        "wires": [
            [
                "7d3145f.8eb39bc"
            ]
        ]
    },
    {
        "id": "c767ad27.32df7",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Archive Plotter",
        "output": "str",
        "x": 1250,
        "y": 100,
        "wires": [
            [
                "2857fd6b.987de2"
            ]
        ]
    },
    {
        "id": "e4e0d070.30842",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "2672654d.766b0a",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 1780,
        "y": 360,
        "wires": []
    },
    {
        "id": "1f6a9f15.3d80c1",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "Scalar DB Info",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 1535,
        "y": 360,
        "wires": []
    },
    {
        "id": "23adba5a.1575e6",
        "type": "link in",
        "z": "dc20c6e0.0feb98",
        "name": "scalar websocket out",
        "links": [
            "192cf6bb.b61fc9",
            "1f6a9f15.3d80c1",
            "1d6371f9.66705e"
        ],
        "x": 1615,
        "y": 360,
        "wires": [
            [
                "472ae883.652f08",
                "2672654d.766b0a",
                "3b8105e.0ce10fa"
            ]
        ]
    },
    {
        "id": "98c9d4ad.3f54f8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        type                        :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.tray.attr]     :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            type: msg.payload.tray.type\n        },\n        {\n            name: msg.payload.tray.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.tray.startDate,\n                $lte: msg.payload.tray.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    tray          : msg.payload.tray,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.tray.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 460,
        "wires": [
            [
                "c83b72f2.fbac"
            ]
        ]
    },
    {
        "id": "c83b72f2.fbac",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "91696018.4cd47"
            ]
        ]
    },
    {
        "id": "91696018.4cd47",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.tray.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 460,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "101f39eb.3dbc86",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarViewer",
        "url": "/scalarViewer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "761fbc6312cdfd4d"
            ]
        ]
    },
    {
        "id": "98ef08d2.acd658",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"9%\"  align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Tray</span></td>\n                                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Cube</span></td>\n                                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                                <td width=\"6.5%\" align=\"center\"><span class=\"tableHeading \">Set</span></td>\n                                <td width=\"6.5%\" align=\"center\"><span class=\"tableHeading \">Con</span></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"traySelect0\" onchange=\"traySelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"setTrayButton0\" type=\"button\" onclick=\"setTray(0)\">Set</button>\n                                </td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"conTrayButton0\" type=\"button\" onclick=\"conTray(0)\">Con</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect1\" onchange=\"traySelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"setTrayButton1\" type=\"button\" onclick=\"setTray(1)\">Set</button>\n                                </td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"conTrayButton1\" type=\"button\" onclick=\"conTray(1)\">Con</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect2\" onchange=\"traySelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"setTrayButton2\" type=\"button\" onclick=\"setTray(2)\">Set</button>\n                                </td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"conTrayButton2\" type=\"button\" onclick=\"conTray(2)\">Con</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"traySelect3\" onchange=\"traySelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"setTrayButton3\" type=\"button\" onclick=\"setTray(3)\">Set</button>\n                                </td>\n                                <td align=\"center\">\n                                    <button class=\"btn jumbotron-button btn-block\" id=\"conTrayButton3\" type=\"button\" onclick=\"conTray(3)\">Con</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div id=\"setTrayDialog\" title=\"set Tray\" class='card'>\n            <p class='card-title' id='setTrayDialogAttribute'>Attribute</p>\n            <div class='card-body'>\n                <table>\n                    <tr>\n                        <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Value</span></td>\n                        <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"attrValue\" type=\"text\" value=\"0\" /></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div id=\"conTrayDialog\" title=\"Config Tray\" class='card'>\n        <p class='card-title' id='conTrayDialogAttribute'>Attribute</p>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LoLo</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LOW</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HIGH</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HiHi</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Name</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Number</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                </tr>\n            </table>\n        </div>\n    </div>",
        "output": "str",
        "x": 1370,
        "y": 160,
        "wires": [
            [
                "47a0234124b3b599"
            ]
        ]
    },
    {
        "id": "64bfcc43.f50934",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Viewer",
        "output": "str",
        "x": 1250,
        "y": 160,
        "wires": [
            [
                "98ef08d2.acd658"
            ]
        ]
    },
    {
        "id": "3b8105e.0ce10fa",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 1750,
        "y": 420,
        "wires": []
    },
    {
        "id": "c885dc27.153e5",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "4819746c.65db8c",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "sendSettingToMqtt",
        "func": "var newMsg = \n{\n    topic   : msg.payload.topic, \n    payload : msg.payload.payload, \n    userID  : msg.userID,\n    username : msg.token.username\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 500,
        "wires": [
            [
                "6381975d.b98928",
                "2e134ccf.236a14"
            ]
        ]
    },
    {
        "id": "6381975d.b98928",
        "type": "mqtt out",
        "z": "dc20c6e0.0feb98",
        "name": "Publish setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1360,
        "y": 540,
        "wires": []
    },
    {
        "id": "2e134ccf.236a14",
        "type": "subflow:e13648d6.d698c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1350,
        "y": 500,
        "wires": []
    },
    {
        "id": "80b3fbd.ba21908",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.userID,\n    payload         : [{type:msg.payload.type},{projection:{name:1, _id:0}}],\n    type            : msg.payload.type,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 340,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "818972ac.61492",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        type            : msg.type,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 340,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "fa0c0cab.d9876",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var editedTrace = -1;\n        \n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#setTrayButton'+ itrace.toString()).hide();\n                $('#conTrayButton'+ itrace.toString()).hide();\n            }\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getJwtToken':\n                    loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        $( function() \n        {\n            $( \"#setTrayDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {disableButtons(false); sendSetting(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {disableButtons(false); $( this ).dialog( \"close\" ); permitGetTrayValues = true;},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        $( function() \n        {\n            $( \"#conTrayDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {disableButtons(false); sendConfig(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {disableButtons(false); $( this ).dialog( \"close\" ); permitGetTrayValues = true;},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function disableButtons(disable)\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#setTrayButton'+ itrace.toString()).attr('disabled',disable);\n                $('#conTrayButton'+ itrace.toString()).attr('disabled',disable);\n            }\n        }\n        function setTray(itrace)\n        {\n            permitGetTrayValues = false;\n            editedTrace = itrace;\n            $( \"#editTrayDialog\" ).dialog( \"option\", \"title\", \"Edit\");    \n            $( \"#editTrayDialogAttribute\").html(trayInfo[itrace].type + '-'  + trayInfo[itrace].name + '-'  + trayInfo[itrace].prop + '-'  + trayInfo[itrace].attr);\n            var attr = trayInfo[itrace].tray[trayInfo[itrace].attr];\n            $( \"#attrValue\").val(attr.value);\n            disableButtons(true);\n\n\n            $( \"#setTrayDialog\" ).dialog( \"open\" );\n        }\n        function conTray(itrace)\n        {\n            permitGetTrayValues = false;\n            editedTrace = itrace;\n            $( \"#editTrayDialog\" ).dialog( \"option\", \"title\", \"Edit\");    \n            $( \"#editTrayDialogAttribute\").html(trayInfo[itrace].type + '-'  + trayInfo[itrace].name + '-'  + trayInfo[itrace].prop + '-'  + trayInfo[itrace].attr);\n            var attr = trayInfo[itrace].tray[trayInfo[itrace].attr];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n            disableButtons(true);\n\n            $( \"#conTrayDialog\" ).dialog( \"open\" );\n        }\n        function sendSetting()\n        {\n            var attr = trayInfo[editedTrace].tray[trayInfo[editedTrace].attr];\n            if (isNaN($('#attrValue').val()))\n            {\n                permitGetTrayValues = true;\n                acknowledgeDialog('Error', 'Entry not a number!', attr.attr);\n                return;\n            }\n\n            var actionMsg = \n                {\n                    topic   : box + '/' + trayInfo[editedTrace].tray.type + '/' + trayInfo[editedTrace].tray.name + '/setting/setting',\n                    payload : {'cube': trayInfo[editedTrace].attr, 'value':Number($( \"#attrValue\").val())}\n                };\n            sendActionMsg('sendSettingToMqtt','setting',actionMsg);\n\n            permitGetTrayValues = true;\n        }\n        function sendConfig()\n        {\n            var attr = trayInfo[editedTrace].tray[trayInfo[editedTrace].attr];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                permitGetTrayValues = true;\n                acknowledgeDialog('Error', 'Entry not a number!', attr.attr);\n                return;\n            }\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            let configInfo = \n            {\n                cube : trayInfo[editedTrace].attr,\n                limits: attr.alarm.limits,\n                notify: attr.alarm.notify\n            };\n            var actionMsg = \n                {\n                    topic   : box + '/' + trayInfo[editedTrace].tray.type + '/' + trayInfo[editedTrace].tray.name + '/setting/config',\n                    payload : configInfo\n                };\n            sendActionMsg('sendConfigToMqtt', 'setting',  actionMsg);\n            permitGetTrayValues = true;\n        }\n        function loadTrayValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#setTrayButton'+ itrace.toString()).hide();\n            $('#conTrayButton'+ itrace.toString()).hide();\n        }\n        function attrSelectedSpecial(itrace)\n        {\n            if (trayInfo[itrace].prop == 'setting') $('#setTrayButton'+ itrace.toString()).show();\n            $('#conTrayButton'+ itrace.toString()).show();\n\n        }\n\n",
        "output": "str",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "93a819a0.6e9808"
            ]
        ]
    },
    {
        "id": "93a819a0.6e9808",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "64bfcc43.f50934"
            ]
        ]
    },
    {
        "id": "da88a362.516c9",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 1080,
        "y": 40,
        "wires": [
            [
                "662fe630.391fd8"
            ]
        ]
    },
    {
        "id": "7d3145f.8eb39bc",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 1080,
        "y": 100,
        "wires": [
            [
                "c767ad27.32df7"
            ]
        ]
    },
    {
        "id": "83301a46.e7b368",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 40,
        "wires": [
            [
                "5edcffd1.23572"
            ]
        ]
    },
    {
        "id": "5edcffd1.23572",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 640,
        "y": 40,
        "wires": [
            [
                "7b9e1c55.c445c4"
            ]
        ]
    },
    {
        "id": "5fe2ee6b.e7801",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 160,
        "wires": [
            [
                "86c26641.91e478"
            ]
        ]
    },
    {
        "id": "86c26641.91e478",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 640,
        "y": 160,
        "wires": [
            [
                "fa0c0cab.d9876"
            ]
        ]
    },
    {
        "id": "bc63b66b.867d18",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "87b81ba7.286ac8"
            ]
        ]
    },
    {
        "id": "87b81ba7.286ac8",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 640,
        "y": 100,
        "wires": [
            [
                "3662caf5.96ce96"
            ]
        ]
    },
    {
        "id": "e6871441.93cb88",
        "type": "subflow:fee416c.fb205e8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "f445d1dd.72e4"
            ],
            [
                "192cf6bb.b61fc9"
            ]
        ]
    },
    {
        "id": "192cf6bb.b61fc9",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "permission error out",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 435,
        "y": 440,
        "wires": []
    },
    {
        "id": "90ff25e663c0cc27",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "sendConfigToMqtt",
        "func": "return {\n    topic   : msg.payload.topic, \n    payload : msg.payload.payload, \n    userID  : msg.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 540,
        "wires": [
            [
                "6381975d.b98928"
            ]
        ]
    },
    {
        "id": "2c7e9f2f8657e2cf",
        "type": "subflow:ca529822.9112f8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1650,
        "y": 160,
        "wires": []
    },
    {
        "id": "47a0234124b3b599",
        "type": "subflow:7744eedb71df7703",
        "z": "dc20c6e0.0feb98",
        "x": 1510,
        "y": 160,
        "wires": [
            [
                "2c7e9f2f8657e2cf"
            ]
        ]
    },
    {
        "id": "2d5bb6b269d6447e",
        "type": "subflow:ca529822.9112f8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1650,
        "y": 100,
        "wires": []
    },
    {
        "id": "9e1f54c01efdf924",
        "type": "subflow:7744eedb71df7703",
        "z": "dc20c6e0.0feb98",
        "x": 1510,
        "y": 100,
        "wires": [
            [
                "2d5bb6b269d6447e"
            ]
        ]
    },
    {
        "id": "94f6cca52d4c60da",
        "type": "subflow:ca529822.9112f8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1650,
        "y": 40,
        "wires": []
    },
    {
        "id": "5caadfa3a8a636ab",
        "type": "subflow:7744eedb71df7703",
        "z": "dc20c6e0.0feb98",
        "x": 1510,
        "y": 40,
        "wires": [
            [
                "94f6cca52d4c60da"
            ]
        ]
    },
    {
        "id": "761fbc6312cdfd4d",
        "type": "subflow:3fec913b325ae6ff",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "5fe2ee6b.e7801"
            ]
        ]
    },
    {
        "id": "2368821acde56f09",
        "type": "subflow:3fec913b325ae6ff",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "bc63b66b.867d18"
            ]
        ]
    },
    {
        "id": "48d71400ebc13581",
        "type": "subflow:3fec913b325ae6ff",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 300,
        "y": 40,
        "wires": [
            [
                "83301a46.e7b368"
            ]
        ]
    },
    {
        "id": "482179b1.0efb28",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "url": "/scalarAlarmScanner",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "9170090ae4867ad7"
            ]
        ]
    },
    {
        "id": "9661ff85.f96c8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div class=\"row\"> \n                    <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block\" id=\"toggleSoundButton\" type=\"button\" onclick=\"toggleSound()\">Turn Sound On</button>\n                    </div>\n                    <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-12\">\n                        <table width=\"100%\" id='alarmTable'>\n                            <tr class=\"tableHeading\">\n                                <td width='12%'>Alarm</td>\n                                <td width='12%'>Tray</td>\n                                <td width='12%'>Name</td>\n                                <td width='12%'>Property</td>\n                                <td width='12%'>Cube</td>\n                                <td width='12%'>Value</td>\n                                <td width='12%'>Unit</td>\n                                <td width='12%'>Type</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1370,
        "y": 220,
        "wires": [
            [
                "eeadf39527a67363"
            ]
        ]
    },
    {
        "id": "30fbb3de.45ba1c",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var audioAlarm = new Audio('/audio/alarm.ogg');\n        var alarmSoundOn = false;\n        var soundLastPlayed = 0;\n        var soundInterval = 4000;\n        \n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            createAlarmTableRows(100);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n               case 'alarmList':\n                    alarmScan(msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function createAlarmTableRows(nrows)\n        {\n            var alarmTable = document.getElementById('alarmTable');\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                var row = alarmTable.insertRow(irow + 1);\n                row.setAttribute(\"id\", \"alarmTable\" + irow.toString());\n                row.setAttribute(\"class\", \"tableText\");\n                var iconCell = row.insertCell(0);\n                var trayCell  = row.insertCell(1);\n                var nameCell = row.insertCell(2);\n                var propCell = row.insertCell(3);\n                var attrCell = row.insertCell(4);\n                var valueCell= row.insertCell(5);\n                var unitCell = row.insertCell(6);\n                var typeCell = row.insertCell(7);\n                iconCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_icon\");\n                trayCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_tray\");\n                nameCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_name\");\n                propCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_prop\");\n                attrCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_attr\");\n                valueCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_value\");\n                unitCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_unit\");\n                typeCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_type\");\n                $('#alarmTable' + irow.toString()).hide();\n                iconCell.innerHTML = \"<img id='alarmTable\" + irow.toString() + \"_led'\" + \" src='/img/redLight.png' height='50px'/>\";\n            }\n        \n        }\n        function alarmScan(alarmList)\n        {\n            var trayInfo = [];\n            var nrows = $('#alarmTable tr').length;\n            nrows = nrows - 1;\n            if (alarmList.length > nrows) alert('Too many alarms to display!');\n            for (var itray = 0; itray < alarmList.length; ++itray)\n            {\n                $('#alarmTable' + itray.toString()).show();\n                $('#alarmTable' + itray.toString() + '_tray').html(alarmList[itray].type);\n                $('#alarmTable' + itray.toString() + '_name').html(alarmList[itray].name);\n                $('#alarmTable' + itray.toString() + '_prop').html(alarmList[itray].prop);\n                $('#alarmTable' + itray.toString() + '_attr').html(alarmList[itray].attr);\n                $('#alarmTable' + itray.toString() + '_value').html(alarmList[itray].value);\n                $('#alarmTable' + itray.toString() + '_unit').html(alarmList[itray].unit);\n                var type = '';\n                if (alarmList[itray].alarm == 1) type = 'LOW';\n                if (alarmList[itray].alarm == 2) type = 'HIGH';\n                if (alarmList[itray].alarm == 3) type = 'LOLO';\n                if (alarmList[itray].alarm == 4) type = 'HIHI';\n                $('#alarmTable' + itray.toString() + '_type').html(type);\n                if (alarmList[itray].alarm < 3)\n                {\n                    $('#alarmTable' + itray.toString() + '_led').attr('src','/img/yellowLight.png');\n                }\n                else\n                {\n                    $('#alarmTable' + itray.toString() + '_led').attr('src','/img/redLight.png');\n                    if (alarmSoundOn)\n                    {\n                        if ((new Date().getTime() - soundLastPlayed) > soundInterval)\n                        {\n                            audioAlarm.play();\n                            soundLastPlayed = new Date().getTime();\n                        }\n                    }\n                    \n                }\n        \n            }\n            for (var itray = alarmList.length; itray < nrows; ++itray)\n            {\n                $('#alarmTable' + itray.toString()).hide();\n            }\n        \n        }\n        function toggleSound()\n        {\n            alarmSoundOn = !alarmSoundOn;\n            var soundButtonText = 'Turn Sound On';\n            if (alarmSoundOn) soundButtonText = 'Turn Sound Off';\n            $('#toggleSoundButton').html(soundButtonText);\n        }",
        "output": "str",
        "x": 1110,
        "y": 220,
        "wires": [
            [
                "f98b12be.28903"
            ]
        ]
    },
    {
        "id": "f98b12be.28903",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Alarm Scanner",
        "output": "str",
        "x": 1250,
        "y": 220,
        "wires": [
            [
                "9661ff85.f96c8"
            ]
        ]
    },
    {
        "id": "fac3ac47.cbce",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "38ce6e47d65606ad"
            ]
        ]
    },
    {
        "id": "9170090ae4867ad7",
        "type": "subflow:3fec913b325ae6ff",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "fac3ac47.cbce"
            ]
        ]
    },
    {
        "id": "38ce6e47d65606ad",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "30fbb3de.45ba1c"
            ]
        ]
    },
    {
        "id": "9f6585cc5bc3dc90",
        "type": "subflow:ca529822.9112f8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1650,
        "y": 220,
        "wires": []
    },
    {
        "id": "eeadf39527a67363",
        "type": "subflow:7744eedb71df7703",
        "z": "dc20c6e0.0feb98",
        "x": 1510,
        "y": 220,
        "wires": [
            [
                "9f6585cc5bc3dc90"
            ]
        ]
    },
    {
        "id": "21eb060207df1513",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "server": "104a274897c7edc5",
        "client": "",
        "x": 780,
        "y": 720,
        "wires": []
    },
    {
        "id": "facaa8921c05a923",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "trays",
        "operation": "find.toArray",
        "x": 350,
        "y": 720,
        "wires": [
            [
                "eefeac65743239d5"
            ]
        ]
    },
    {
        "id": "eb7fa523c36c37b8",
        "type": "inject",
        "z": "dc20c6e0.0feb98",
        "name": "Every 10 sec",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "'name'",
        "payloadType": "str",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "facaa8921c05a923"
            ]
        ]
    },
    {
        "id": "eefeac65743239d5",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Scan for alarms",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar oldAlarmList = context.get('oldAlarmList')\nif (oldAlarmList == undefined) oldAlarmList = [];\nvar numTrays = objectLength(msg.payload);\nvar props = ['readings', 'settings'];\nvar alarmList = [];\nvar alarmCount = 0;\nfor (var itray = 0; itray < numTrays; ++itray)\n{\n    var tray = msg.payload[itray];\n \n    var keys = Object.keys(tray);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (tray[keys[ii]].hasOwnProperty('type'))\n        {\n            if (tray[keys[ii]].type == 'scalar')\n            {\n                if (tray[keys[ii]].alarm.value > 0)\n                {\n                    alarmList[alarmCount] = \n                    {\n                        type: tray.type,\n                        name  : tray.name,\n                        prop  : tray[keys[ii]].action,\n                        attr  : keys[ii],\n                        value : tray[keys[ii]].value,\n                        unit  : tray[keys[ii]].unit,\n                        alarm : tray[keys[ii]].alarm.value,\n                        id    : tray.type + '-' +  tray.name + '-' +  tray[keys[ii]].action + '-' + keys[ii],\n                        notify: tray[keys[ii]].alarm.notify\n                    };\n                    ++alarmCount;\n                }\n            }\n        }\n    }\n}\n\nvar newAlarmList = [];\nvar newAlarmCount = 0;\nfor (var ialarm = 0; ialarm < alarmCount; ++ialarm)\n{\n    var oldAlarm = oldAlarmList.find(oldAlarm => oldAlarm.id === alarmList[ialarm].id);\n    if (oldAlarm == undefined) \n    {\n        newAlarmList[newAlarmCount] = alarmList[ialarm];\n        ++newAlarmCount;\n    }\n}\ncontext.set('oldAlarmList', alarmList);\nreturn [{topic:'alarmList', payload:{topic:'alarmList',payload:alarmList}},{topic:'newAlarmList', payload:newAlarmList}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 720,
        "wires": [
            [
                "21eb060207df1513"
            ],
            [
                "53da97f746880c8b"
            ]
        ]
    },
    {
        "id": "c813803ea7aa2fbe",
        "type": "sendsms",
        "z": "dc20c6e0.0feb98",
        "creds": "81dcb3a4917e5d5f",
        "to": "{{msg.to}}",
        "fr": "{{msg.from}}",
        "text": "{{msg.payload}}",
        "unicode": false,
        "x": 1290,
        "y": 780,
        "wires": [
            [
                "11f6a30318814a7c"
            ]
        ]
    },
    {
        "id": "11f6a30318814a7c",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1430,
        "y": 780,
        "wires": []
    },
    {
        "id": "53da97f746880c8b",
        "type": "split",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 730,
        "y": 780,
        "wires": [
            [
                "f763052c4bc9db80"
            ]
        ]
    },
    {
        "id": "f763052c4bc9db80",
        "type": "delay",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 880,
        "y": 780,
        "wires": [
            [
                "2144d20da7fa7d37"
            ]
        ]
    },
    {
        "id": "2144d20da7fa7d37",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Prepare SMS",
        "func": "if (msg.payload.notify.name.length < 1) return null;\nif (msg.payload.notify.number.length < 1) return null;\nvar type = '';\nif (msg.payload.alarm == 1) type = 'LOW';\nif (msg.payload.alarm == 2) type = 'HIGH';\nif (msg.payload.alarm == 3) type = 'LOLO';\nif (msg.payload.alarm == 4) type = 'HIHI';\nvar message = 'Alarm-' + type + ': ' + msg.payload.id;\nmessage = message + ' is at ' + msg.payload.value.toString() + ' ' + msg.payload.unit\nreturn {topic:'sms',to:msg.payload.notify.number, payload:message, from:'46000000000'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 780,
        "wires": [
            [
                "709a689b8dbb3711",
                "c813803ea7aa2fbe"
            ]
        ]
    },
    {
        "id": "709a689b8dbb3711",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 840,
        "wires": []
    },
    {
        "id": "58100264.e2a28c",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "d8854f8.5c820b"
            ]
        ]
    },
    {
        "id": "c10d43eb.a111b",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 1690,
        "y": 180,
        "wires": []
    },
    {
        "id": "813098f2.aa5c28",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorPlotter",
        "url": "/vectorPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "88734c9b0d08367a"
            ]
        ]
    },
    {
        "id": "43013e03.44494",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Tray</span></td>\n                                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Cube</span></td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <select class=\"custom-select \" id=\"traySelect0\" onchange=\"traySelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <div class='card'>\n                            <div class='card-body' align=\"center\">\n                                <div width=\"100%\" id=\"spectrogram\" align=\"center\"></div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n                    </div>\n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n                    </div>\n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-6\" align=\"right\" >\n                        <span class=\"tableHeading\" style=\"font-size: medium;\">Start Time</span>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <span class=\"tableHeading\"  style=\"font-size: medium;\" id=\"startTime\"></span>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-6\"  align=\"right\">\n                        <span class=\"tableHeading\" style=\"font-size: medium;\">Stop Time</span>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <span class=\"tableHeading\" id=\"stopTime\" style=\"font-size: medium;\"></span>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-3\" align=\"right\" >\n                        <span class=\"tableHeading\" style=\"font-size: medium;\">PlotSlices</span>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <input class=\"form-control center-justify\" id=\"plotslices\" type=\"text\" value=\"0\" style=\"font-size: medium;\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    /div>\n    ",
        "output": "str",
        "x": 1230,
        "y": 40,
        "wires": [
            [
                "ff79b7db87145552"
            ]
        ]
    },
    {
        "id": "6a7aaea9.6b97f",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var traySelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var valSelect=[];\n        var trayInfo = [];\n\n        var graph3d = null;\n        var itimeSlice = 0;\n        var timeMax = 32;\n        var dataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 32;\n        var plotStarted = false;\n        \n        var threedPlotOptions =\n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            xLabel: 'x',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#ffffff',\n        };\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                traySelect[itrace] = document.getElementById('traySelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                trayInfo[itrace] = {type: '', name : '',  prop : 'reading', attr : '',tray : {}};\n            }\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $(\"#plotslices\").change(function()\n            {\n                timeMax = Number($(\"#plotslices\").val());\n                if (timeMax < 2)\n                {\n                    alert('Number of plot slices must be greater than 1');\n                    timeMax = 2;\n                }\n                birdsEyeTimeMax = timeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n                dataArray = [];\n                itimeSlice = 0;\n                plotStarted = false;\n            });\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n            setInterval(getTrayValues, 1000);\n        }\n        function restartPlot()\n        {\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            dataArray = [];\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getTrayList':\n                        loadTrayList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getTrayValues':\n                        loadTrayValues(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                       break;\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            var actionMsg = \n                {\n                };\n            sendActionMsg('getTrayList', 'readDatabase', actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadTrayList(trayList)\n        {\n            trayList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < trayList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = trayList[ii];\n                    opt.innerHTML = trayList[ii];\n                    traySelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function traySelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (traySelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    type  : traySelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    type  : traySelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n            restartPlot();\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            trayInfo[itrace].type = traySelect[itrace].value;\n            trayInfo[itrace].name = nameSelect[itrace].value;\n            trayInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getTrayValues()\n        {\n            var trayList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((trayInfo[itrace].type.length > 0) && (trayInfo[itrace].name.length > 0)) \n                {\n                    trayList[traceCount] = { $and: [ {type : trayInfo[itrace].type}, {name : trayInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: trayList };\n            var actionMsg = \n                {\n                    queryFilter : queryFilter,\n                };\n            sendActionMsg('getTrayValues', 'readDatabase', actionMsg);\n        }\n        function loadTrayValues(data)\n        {\n            var trays = data.trays;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (trayInfo[itrace].attr.length > 0)\n                {\n                    for (itray = 0; itray < trays.length; ++itray)\n                    {\n                        if (trays[itray].type == trayInfo[itrace].type)\n                        {\n                            if(trays[itray].name == trayInfo[itrace].name)\n                            {\n                                trayInfo[itrace].tray = trays[itray];\n                                var attr = trayInfo[itrace].tray[trayInfo[itrace].attr];\n                                upDatePlot(attr.value);\n                            }\n                        }\n                    } \n                }\n            }\n        }\n        function upDatePlot(value)\n        {\n            var npts = value[0].length;\n            if(!plotStarted)\n            {\n                dataArray = [];\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                    dataArray[ix] =\n                    {\n                        'x': value[0][ix],\n                        'y': 0,\n                        'z': value[1][ix],\n                        'style': value[1][ix]\n                    };\n                }\n                var container = document.getElementById('spectrogram');\n            \n                graph3d = new vis.Graph3d(container, dataArray, threedPlotOptions);\n                $(\"#startTime\").text(new Date().toLocaleString());\n                $(\"#stopTime\").text(new Date().toLocaleString());\n                graph3d.on('cameraPositionChange', onCameraPositionChange);\n                if (sliceViewActive) sliceView();\n                if (birdsEyeViewActive) birdsEyeView();\n                if (topViewActive) topView();\n                plotStarted = true;\n            }\n            else\n            {\n                if (freeze) return;\n                if (itimeSlice < timeMax)\n                {\n                    timeStamp[itimeSlice] = new Date().getTime();\n                    deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[itimeSlice * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                    ++itimeSlice;\n                }\n                else\n                {\n                    for (var itime = 0; itime < (timeMax - 1); ++itime)\n                    {\n                        timeStamp[itime] = timeStamp[itime + 1];\n                        deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                        for (var ix = 0; ix < npts; ++ix)\n                        {\n                            dataArray[itime * npts + ix] =\n                            {\n                                'x': dataArray[(itime + 1) * npts + ix].x,\n                                'y': deltaT,\n                                'z': dataArray[(itime + 1) * npts + ix].z,\n                                'style': dataArray[(itime + 1) * npts + ix].style\n                            };\n                        }\n                    }\n                    timeStamp[timeMax - 1] = new Date().getTime();\n                    deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[(timeMax - 1) * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                }\n                $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n                $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n                graph3d.setData(dataArray);\n            }\n        }\n        function freezeRun()\n        {\n            freeze = !freeze;\n            if (freeze)\n            {\n                $(\"#freezeButton\").text('Frozen');\n            }\n            else\n            {\n                $(\"#freezeButton\").text('Running');\n            }\n        }\n        \n        function birdsEyeView()\n        {\n            var horzAngle = 315.0 * 3.1415927 / 180.0;\n            var vertAngle = 45.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function sliceView()\n        {\n            var horzAngle = 0.0 * 3.1415927 / 180.0;\n            var vertAngle = 0.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n            timeMax = 2;\n            $(\"#plotslices\").val(timeMax.toString());\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function topView()\n        {\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        }\n        function onCameraPositionChange(event)\n        {\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n        }",
        "output": "str",
        "x": 820,
        "y": 40,
        "wires": [
            [
                "4f498dd4.8ddad4"
            ]
        ]
    },
    {
        "id": "6f9d3e8e.5dd7c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Plotter",
        "output": "str",
        "x": 1110,
        "y": 40,
        "wires": [
            [
                "43013e03.44494"
            ]
        ]
    },
    {
        "id": "23847e72.ad5052",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getTrayList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getTrayValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 550,
        "y": 340,
        "wires": [
            [
                "239425dd.8a514a"
            ],
            [
                "c143b50b.37c0a8"
            ],
            [
                "567d6cad.83f094"
            ],
            [
                "80e43fea.99b4b"
            ],
            [
                "e42fbd97.1acb"
            ]
        ]
    },
    {
        "id": "239425dd.8a514a",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getTrayList",
        "func": "var newMsg = \n{\n    topic           : 'getTrayList',\n    userID          : msg.userID,\n    payload         : [{},{projection:{type:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 260,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "567d6cad.83f094",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.userID,\n    payload         : [{$and : [{type:msg.payload.type}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    type            : msg.payload.type,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 340,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "80e43fea.99b4b",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getTrayValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getTrayValues',\n    userID          : msg.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 380,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "cca5ce34.ad466",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "trays",
        "operation": "find.toArray",
        "x": 1030,
        "y": 300,
        "wires": [
            [
                "cf416706.322028"
            ]
        ]
    },
    {
        "id": "cf416706.322028",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getTrayList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getTrayValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "1f313e3a.8bfc52"
            ],
            [
                "7737092b.94fb48"
            ],
            [
                "bcfe30d9.5f058"
            ],
            [
                "b731442a.4504b8"
            ]
        ]
    },
    {
        "id": "1f313e3a.8bfc52",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse tray list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numTrays = objectLength(msg.payload);\nvar trayList = [];\ntrayList[0] = msg.payload[0].type;\nif (numTrays > 1)\n{\n    for (var itray = 1; itray < numTrays; ++itray)\n    {\n        var trayAlreadyFound = false;\n        for (ii = 0; ii < itray; ++ii)\n        {\n            if (msg.payload[itray].type == trayList[ii]) trayAlreadyFound = true;\n        }\n        if (!trayAlreadyFound) trayList[itray] = msg.payload[itray].type;\n    }\n}\n\nreturn {\n    topic:'getTrayList',\n    payload:{\n        topic           : 'getTrayList',\n        payload         : trayList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 240,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "bcfe30d9.5f058",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numTrays = objectLength(msg.payload);\nif (numTrays < 1) return null;\nvar tray = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(tray);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (tray[keys[ii]].hasOwnProperty('type'))\n    {\n        if (tray[keys[ii]].type == 'vector')\n        {\n            if (tray[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        trace           : msg.trace,\n        attrList        : attrList,\n        type            : msg.type,\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 320,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "b731442a.4504b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse getTrayValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numTrays = objectLength(msg.payload);\nif (numTrays < 1) return null;\nvar trays = [];\nfor (var itray = 0; itray < numTrays; ++itray) trays[itray] = msg.payload[itray];\nreturn {\n    topic:'getTrayValues',\n    payload:{\n        topic           : 'getTrayValues',\n        userID          : msg.userID,\n        trays         : trays,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 360,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "e42fbd97.1acb",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        type                        :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.tray.attr]   :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            type: msg.payload.tray.type\n        },\n        {\n            name: msg.payload.tray.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.tray.startDate,\n                $lte: msg.payload.tray.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    tray          : msg.payload.tray,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.tray.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 420,
        "wires": [
            [
                "3ea29ec6.e9bfa2"
            ]
        ]
    },
    {
        "id": "3ea29ec6.e9bfa2",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "22a317f1.3a10b8"
            ]
        ]
    },
    {
        "id": "22a317f1.3a10b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.tray.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 520,
        "wires": [
            [
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "a45c73b4.cd0d1",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "d8854f8.5c820b"
            ]
        ]
    },
    {
        "id": "aa9e819c.38f8f",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 1700,
        "y": 520,
        "wires": []
    },
    {
        "id": "f424cab0.278588",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorArchivePlotter",
        "url": "/vectorArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "058020a9c8677234"
            ]
        ]
    },
    {
        "id": "fd934b09.f641b8",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var traySelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var trayInfo = [];\n\n        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                traySelect[itrace] = document.getElementById('traySelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                trayInfo[itrace] = {type  : '', name : '', prop : 'reading', attr : '',tray : {}};\n\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#plotViewButtons').hide();\n        }\n        function onWebSocketOpen()\n        {\n            var actionMsg = {};\n            sendActionMsg('getTrayList', 'readDatabase',  actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getTrayList':\n                        loadTrayList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getArchiveValues':\n                        archiveList.push(msg.payload);\n                        if (archiveRequestList.length > 0)\n                        {\n                            getArchiveValues();\n                        }\n                        else\n                        {\n                            plotArchive();\n                        }\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function loadTrayList(trayList)\n        {\n            trayList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < trayList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = trayList[ii];\n                    opt.innerHTML = trayList[ii];\n                    traySelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function traySelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (traySelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    type  : traySelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    type  : traySelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            trayInfo[itrace].type = traySelect[itrace].value;\n            trayInfo[itrace].name = nameSelect[itrace].value;\n            trayInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            trayInfo[itrace].type = '';\n            trayInfo[itrace].name = '';\n            trayInfo[itrace].attr = '';\n            trayInfo[itrace].tray = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getArchiveData()\n        {\n\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (trayInfo[itrace].attr.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        type  : trayInfo[itrace].type, \n                        name        : trayInfo[itrace].name, \n                        prop        : trayInfo[itrace].prop, \n                        attr        : trayInfo[itrace].attr,\n                        startDate: startDate, \n                        stopDate: stopDate,\n                        itrace  :   itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            var actionMsg = \n                {\n                    tray      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                };\n            sendActionMsg('getArchiveValues', 'readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function plotArchive()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            \n            $('#plotViewButtons').show();\n            $('#timePlot').show();\n            makeCsvFile();\n            var npts = archiveList[0].trace.length;\n            var oodataArray = [];\n            \n            var nxMax = archiveList[0].trace[0].value[0].length;\n            for (var ii = 0; ii < npts; ++ii)\n            {\n                var yvalue = Math.round((archiveList[0].trace[ii].timeStamp - archiveList[0].trace[0].timeStamp)/3600) / 1000;\n                for (var ix = 0; ix < nxMax; ++ix)\n                {\n                    var zvalue = archiveList[0].trace[ii].value[1][ix];\n                    oodataArray[ii * nxMax + ix] =\n                    {\n                        'x': archiveList[0].trace[ii].value[0][ix],\n                        'y': yvalue,\n                        'z': zvalue,\n                        'style': zvalue\n                    };\n                }\n            }\n            var options = \n            {\n                width:  '100%',\n                height: '800px',\n                style: 'surface',\n                showPerspective: false,\n                showGrid: true,\n                showShadow: false,\n                keepAspectRatio: false,\n                verticalRatio: 1.0,\n                showZAxis: true,\n                yCenter: '50%',\n                xLabel: 'x',\n                yLabel: 'Time (hr)',\n                zLabel: 'y',\n                tooltip: true,\n                axisColor: '#000000'\n            };\n        \n            // create a graph3d\n            var container = document.getElementById('timePlot');\n        \n            graph3d = new vis.Graph3d(container, oodataArray, options);\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function changePlotView(horzAngleDeg, vertAngleDeg)\n        {\n            var horzAngle = horzAngleDeg * 3.1415927 / 180.0;\n            var vertAngle = vertAngleDeg * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function makeCsvFile ()\n        {\n            var itrace = 0;\n            var dataString = '';\n            var startT = archiveList[0].trace[0].timeStamp;\n        \n            dataString = dataString + 'Tray,' + trayInfo[0].type + ',' + trayInfo[0].name + ',' + trayInfo[0].prop + ',' + trayInfo[0].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec),  \\n 0,x';\n            for (var ipt = 0; ipt < archiveList[0].trace[0].value[0].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[0].value[0][ipt];\n            dataString = dataString + '\\n';\n\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n\n                var x = (archiveList[0].trace[ii].timeStamp - startT) / 1000;\n                dataString = dataString + x.toString() + ',y';\n                for (var ipt = 0; ipt < archiveList[0].trace[ii].value[1].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[ii].value[1][ipt];\n                dataString = dataString + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", trayInfo[itrace].type + '-' + trayInfo[itrace].name + '-' + trayInfo[itrace].prop + '-' + trayInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 830,
        "y": 140,
        "wires": [
            [
                "49e3f3a3.2fac0c"
            ]
        ]
    },
    {
        "id": "e01d1110.ea59",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Archive Plotter",
        "output": "str",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "7bae9ecc.c5e5b"
            ]
        ]
    },
    {
        "id": "7bae9ecc.c5e5b",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" style='padding-bottom:25px;'>\n        <div class='card'>\n            <div class='card-body' align=\"center\">\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"5%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Tray</span></td>\n                                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Cube</span></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"traySelect0\" onchange=\"traySelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                                        <option value='notSelected'></option>\n                                    </select>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <table id='plotSetupTable'>\n                            <tr>\n                                <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                                <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                                <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                                <td width=10% align=\"center\"></td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\">\n                                    <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                                </td>\n                                <td align=\"center\">\n                                    <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                                </td>\n                                <td align=\"center\">\n                                    <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                                </td>\n                                <td align=\"center\">\n                                    <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-md-12'>\n                        <table id='plotTable'>\n                            <tr valign=\"top\">\n                                <td width='5%'>\n                                    <table id='plotViewButtons'>\n                                        <tr>\n                                            <td>\n                                                <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"changePlotView(315,45)\">Birds Eye</button>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <button class=\"btn jumbotron-button btn-block\" id=\"overviewButton\" type=\"button\" onclick=\"changePlotView(0,90)\" >Overview</button>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <button class=\"btn jumbotron-button btn-block\" id=\"xviewButton\"    type=\"button\" onclick=\"changePlotView(0,0)\"  >X View</button>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </td>\n                                <td width='95%' >\n                                    <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "650bc6590635f1a2"
            ]
        ]
    },
    {
        "id": "c143b50b.37c0a8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.userID,\n    payload         : [{type:msg.payload.type},{projection:{name:1, _id:0}}],\n    type            : msg.payload.type,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 300,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "7737092b.94fb48",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        type            : msg.type,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 280,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "50b5b5d7.93c8ac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "bb1b3802.2e34b8"
            ]
        ]
    },
    {
        "id": "bb1b3802.2e34b8",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 660,
        "y": 140,
        "wires": [
            [
                "fd934b09.f641b8"
            ]
        ]
    },
    {
        "id": "421bd3a6.9feaac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "1a4ad963.adfef7"
            ]
        ]
    },
    {
        "id": "1a4ad963.adfef7",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 660,
        "y": 40,
        "wires": [
            [
                "6a7aaea9.6b97f"
            ]
        ]
    },
    {
        "id": "d8854f8.5c820b",
        "type": "subflow:fee416c.fb205e8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "23847e72.ad5052"
            ],
            [
                "e6340f03.d4d27"
            ]
        ]
    },
    {
        "id": "e6340f03.d4d27",
        "type": "link out",
        "z": "b94899c9.b16088",
        "name": "permission error out",
        "links": [
            "91ece6bd.2f67d8"
        ],
        "x": 415,
        "y": 420,
        "wires": []
    },
    {
        "id": "91ece6bd.2f67d8",
        "type": "link in",
        "z": "b94899c9.b16088",
        "name": "vector websocket in",
        "links": [
            "e6340f03.d4d27"
        ],
        "x": 1625,
        "y": 340,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "4f498dd4.8ddad4",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 970,
        "y": 40,
        "wires": [
            [
                "6f9d3e8e.5dd7c"
            ]
        ]
    },
    {
        "id": "49e3f3a3.2fac0c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 990,
        "y": 140,
        "wires": [
            [
                "e01d1110.ea59"
            ]
        ]
    },
    {
        "id": "99cc4eca48be103a",
        "type": "subflow:ca529822.9112f8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 1530,
        "y": 40,
        "wires": []
    },
    {
        "id": "ff79b7db87145552",
        "type": "subflow:7744eedb71df7703",
        "z": "b94899c9.b16088",
        "x": 1390,
        "y": 40,
        "wires": [
            [
                "99cc4eca48be103a"
            ]
        ]
    },
    {
        "id": "88d3bc1a97e8a21d",
        "type": "subflow:ca529822.9112f8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 1530,
        "y": 140,
        "wires": []
    },
    {
        "id": "650bc6590635f1a2",
        "type": "subflow:7744eedb71df7703",
        "z": "b94899c9.b16088",
        "x": 1390,
        "y": 140,
        "wires": [
            [
                "88d3bc1a97e8a21d"
            ]
        ]
    },
    {
        "id": "88734c9b0d08367a",
        "type": "subflow:3fec913b325ae6ff",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 320,
        "y": 40,
        "wires": [
            [
                "421bd3a6.9feaac"
            ]
        ]
    },
    {
        "id": "058020a9c8677234",
        "type": "subflow:3fec913b325ae6ff",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 320,
        "y": 140,
        "wires": [
            [
                "50b5b5d7.93c8ac"
            ]
        ]
    }
]